#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2024-12-13[America/Argentina/Buenos_Aires]
#  
#  The generated test suite contains 7 tests
#  
#  Covered targets: 24
#  
#  Used time: 0h 2m 7s
#  
#  Needed budget for current results: 41%
#  
#  This file contains test cases that represent successful calls.
class EvoMaster_successes_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:5000"
    
    
    @timeout_decorator.timeout(60)
    def test_0_get_on_ten_returns_object(self):
        
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/number/ten",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["number_ten"] == 10
    
    
    @timeout_decorator.timeout(60)
    def test_1_get_on_numberSpec_yaml_returns_content(self):
        
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/numberSpec.yaml",
                    headers=headers)
        
        assert res_0.status_code == 200
    
    
    @timeout_decorator.timeout(60)
    def test_2_get_on__echo_with_queryParam_returns_object(self):
        
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/echo?text=O0bJ",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["message"] == "O0bJ"
    
    
    @timeout_decorator.timeout(60)
    def test_3_get_on__echo_returns_object(self):
        
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/echo",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["message"] == "no message"
    
    
    @timeout_decorator.timeout(60)
    def test_4_get_on_number_next_returns_object(self):
        
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/number/next",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["next_number"] == 1.0
    
    
    @timeout_decorator.timeout(60)
    def test_5_get_on_number_next_with_queryParam_returns_object(self):
        
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/number/next?n=172",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["next_number"] == 173.0
    
    
    @timeout_decorator.timeout(60)
    def test_6_get_on_number_next_with_queryParam_negative_n_returns_object(self):
        
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/number/next?n=-1782974279",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["next_number"] == -1.782974278E9


if __name__ == '__main__':
    unittest.main()
