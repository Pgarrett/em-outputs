import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-06T17:33:11.764-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 6 tests
 * <br>
*  Covered targets: 18
 * <br>
*  Used time: 0h 10m 34s
 * <br>
*  Needed budget for current results: 76%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080/graphql";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: remainder
    // 			Action parameters:
    // 				a: '241'
    // 				b: '956'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = a:241
    // 				org.evomaster.core.search.gene.optional.OptionalGene = b:956
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: remainder
    @Test(timeout = 60000)
    public void test_0_queryOnRemainderReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { remainder  (a : 241,b : 956)         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'remainder'", numberMatches(-1.0));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: expint
    // 			Action parameters:
    // 				n: ''
    // 				x: '0.6767629'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = n:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:0.6767629
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: expint
    @Test(timeout = 60000)
    public void test_1_queryOnExpintReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { expint  (x : 0.6767629)         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'expint'", numberMatches(0.7510157833286658));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: triangleClassification
    // 			Action parameters:
    // 				a: ''
    // 				b: '597'
    // 				c: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = a:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = b:597
    // 				org.evomaster.core.search.gene.optional.OptionalGene = c:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: triangleClassification
    @Test(timeout = 60000)
    public void test_2_queryOnTriangleclassificationReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { triangleClassification  (b : 597)         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'triangleClassification'", numberMatches(0.0));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: gammq
    // 			Action parameters:
    // 				a: '0.9750692'
    // 				x: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = a:0.9750692
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: gammq
    @Test(timeout = 60000)
    public void test_3_queryOnGammqReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { gammq  (a : 0.9750692)         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'gammq'", numberMatches(1.0));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: bessj
    // 			Action parameters:
    // 				n: '594'
    // 				x: 'null'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = n:594
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:null
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: bessj
    @Test(timeout = 60000)
    public void test_4_queryOnBessjReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { bessj  (n : 594,x : null)         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'bessj'", numberMatches(0.0));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fisher
    // 			Action parameters:
    // 				m: '880'
    // 				n: '334'
    // 				x: '0.46342313'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = m:880
    // 				org.evomaster.core.search.gene.optional.OptionalGene = n:334
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:0.46342313
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fisher
    @Test(timeout = 60000)
    public void test_5_queryOnFisherReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { fisher  (m : 880,n : 334,x : 0.46342313)         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'fisher'", numberMatches(0.0));
    }


}
