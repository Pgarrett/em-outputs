import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-10T18:54:15.009-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 18 tests
 * <br>
*  Covered targets: 223
 * <br>
*  Used time: 0h 10m 4s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.org.graphqlncs.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: expint
    // 			Action parameters:
    // 				n: '-134217245'
    // 				x: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = n:-134217245
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: expint
    @Test(timeout = 60000)
    public void test_0_queryOnExpintReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { expint  (n : -134217245)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/type/Expint_26_exe
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Internal Server Error(s) while executing query"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'.'expint'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: gammq
    // 			Action parameters:
    // 				a: '0.34104225'
    // 				x: '-0.23383634'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = a:0.34104225
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:-0.23383634
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: gammq
    @Test(timeout = 60000)
    public void test_1_queryOnGammqReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { gammq  (a : 0.34104225,x : -0.23383634)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/type/Gammq_101_exe
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Internal Server Error(s) while executing query"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'.'gammq'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: expint
    // 			Action parameters:
    // 				n: '994'
    // 				x: '-2819.982'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = n:994
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:-2819.982
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: expint
    @Test(timeout = 60000)
    public void test_2_queryOnExpintReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { expint  (n : 994,x : -2819.982)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/type/Expint_26_exe
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Internal Server Error(s) while executing query"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'.'expint'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: gammq
    // 			Action parameters:
    // 				a: ''
    // 				x: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = a:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: gammq
    @Test(timeout = 60000)
    public void test_3_queryOnGammqReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { gammq           } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/type/Gammq_101_exe
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Internal Server Error(s) while executing query"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'.'gammq'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: gammq
    // 			Action parameters:
    // 				a: '-9946.154'
    // 				x: 'null'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = a:-9946.154
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:null
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: gammq
    @Test(timeout = 60000)
    public void test_4_queryOnGammqReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { gammq  (a : -9946.154,x : null)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/type/Gammq_101_exe
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Internal Server Error(s) while executing query"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'.'gammq'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: expint
    // 			Action parameters:
    // 				n: 'null'
    // 				x: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = n:null
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: expint
    @Test(timeout = 60000)
    public void test_5_queryOnExpintReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { expint  (n : null)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/type/Expint_26_exe
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Internal Server Error(s) while executing query"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'.'expint'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: bessj
    // 			Action parameters:
    // 				n: 'null'
    // 				x: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = n:null
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: bessj
    @Test(timeout = 60000)
    public void test_6_queryOnBessjReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { bessj  (n : null)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/resolver/CustomException_88_getMessage
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Unexpected error occurred"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: expint
    // 			Action parameters:
    // 				n: '1'
    // 				x: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = n:1
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: expint
    @Test(timeout = 60000)
    public void test_7_queryOnExpintReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { expint  (n : 1)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/type/Expint_26_exe
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Internal Server Error(s) while executing query"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'.'expint'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fisher
    // 			Action parameters:
    // 				m: '8350'
    // 				n: '159'
    // 				x: '1.7639865'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = m:8350
    // 				org.evomaster.core.search.gene.optional.OptionalGene = n:159
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:1.7639865
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fisher
    @Test(timeout = 60000)
    public void test_8_queryOnFisherReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { fisher  (m : 8350,n : 159,x : 1.7639865)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/resolver/CustomException_88_getMessage
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Unexpected error occurred"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: bessj
    // 			Action parameters:
    // 				n: '1048978'
    // 				x: '0.15172343'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = n:1048978
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:0.15172343
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: bessj
    @Test(timeout = 60000)
    public void test_9_queryOnBessjReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { bessj  (n : 1048978,x : 0.15172343)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/resolver/CustomException_88_getMessage
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Unexpected error occurred"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: remainder
    // 			Action parameters:
    // 				a: '1207961392'
    // 				b: '-1073726377'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = a:1207961392
    // 				org.evomaster.core.search.gene.optional.OptionalGene = b:-1073726377
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: remainder
    @Test(timeout = 60000)
    public void test_10_queryOnRemainderReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { remainder  (a : 1207961392,b : -1073726377)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/resolver/CustomException_88_getMessage
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Unexpected error occurred"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fisher
    // 			Action parameters:
    // 				m: '851'
    // 				n: '1049109'
    // 				x: '-1.7014117E38'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = m:851
    // 				org.evomaster.core.search.gene.optional.OptionalGene = n:1049109
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:-1.7014117E38
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fisher
    @Test(timeout = 60000)
    public void test_11_queryOnFisherReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { fisher  (m : 851,n : 1049109,x : -1.7014117E38)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/resolver/CustomException_88_getMessage
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Unexpected error occurred"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: remainder
    // 			Action parameters:
    // 				a: '-1238530074'
    // 				b: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = a:-1238530074
    // 				org.evomaster.core.search.gene.optional.OptionalGene = b:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: remainder
    @Test(timeout = 60000)
    public void test_12_queryOnRemainderReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { remainder  (a : -1238530074)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/resolver/CustomException_88_getMessage
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Unexpected error occurred"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: remainder
    // 			Action parameters:
    // 				a: '0'
    // 				b: '282056998'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = a:0
    // 				org.evomaster.core.search.gene.optional.OptionalGene = b:282056998
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: remainder
    @Test(timeout = 60000)
    public void test_13_queryOnRemainderReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { remainder  (a : 0,b : 282056998)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/resolver/CustomException_88_getMessage
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Unexpected error occurred"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: remainder
    // 			Action parameters:
    // 				a: '0'
    // 				b: '-33554259'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = a:0
    // 				org.evomaster.core.search.gene.optional.OptionalGene = b:-33554259
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: remainder
    @Test(timeout = 60000)
    public void test_14_queryOnRemainderReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { remainder  (a : 0,b : -33554259)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/resolver/CustomException_88_getMessage
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Unexpected error occurred"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fisher
    // 			Action parameters:
    // 				m: '795'
    // 				n: '489'
    // 				x: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = m:795
    // 				org.evomaster.core.search.gene.optional.OptionalGene = n:489
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fisher
    @Test(timeout = 60000)
    public void test_15_queryOnFisherReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { fisher  (m : 795,n : 489)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/resolver/QueryResolver_35_fisher
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Can't serialize value (/fisher) : Expected type 'Float' but was 'Double'."))
                .body("'errors'[0].'path'.size()", equalTo(1))
                .body("'errors'[0].'path'", hasItems("fisher"))
                .body("'errors'[0].'extensions'.'classification'", containsString("DataFetchingException"))
                .body("'data'.'fisher'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: gammq
    // 			Action parameters:
    // 				a: '1.8077499E38'
    // 				x: '1.7014117E38'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = a:1.8077499E38
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:1.7014117E38
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: gammq
    @Test(timeout = 60000)
    public void test_16_queryOnGammqReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { gammq  (a : 1.8077499E38,x : 1.7014117E38)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/type/Gammq_96_gser
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Internal Server Error(s) while executing query"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'.'gammq'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: gammq
    // 			Action parameters:
    // 				a: '1.7014117E38'
    // 				x: '1.7014117E38'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = a:1.7014117E38
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:1.7014117E38
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: gammq
    @Test(timeout = 60000)
    public void test_17_queryOnGammqReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { gammq  (a : 1.7014117E38,x : 1.7014117E38)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)// org/graphqlncs/type/Gammq_68_gcf
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Internal Server Error(s) while executing query"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'.'gammq'", nullValue());
    }


}
