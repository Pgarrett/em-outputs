import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-10T19:25:12.785-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 3 tests
 * <br>
*  Covered targets: 12
 * <br>
*  Used time: 0h 10m 6s
 * <br>
*  Needed budget for current results: 59%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_others_Test {

    
    private static final SutHandler controller = new em.embedded.org.springframework.samples.petclinic.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList());
        controller.resetStateOfSUT();
    }
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: addPet
    // 			Action parameters:
    // 				input: '{"ownerId":136, "name":"_EM_298_XYZ_", "birthDate":"2029-01-18", "typeId":103}'
    // 				addPet: '{"pet":{"id":false, "name":true, "birthDate":false, "owner":{"id":true, "firstName":true, "lastName":false, "address":true, "city":false, "telephone":false}}}'
    // 			Genes:
    // 				org.evomaster.core.search.gene.ObjectGene = input:{"ownerId":136, "name":"_EM_298_XYZ_", "birthDate":"2029-01-18", "typeId":103}
    // 				org.evomaster.core.search.gene.ObjectGene = addPet:{"pet":{"id":false, "name":true, "birthDate":false, "owner":{"id":true, "firstName":true, "lastName":false, "address":true, "city":false, "telephone":false}}}
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: addPet
    @Test(timeout = 60000)
    public void test_0_mutationOnAddpetReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"mutation{    addPet  ( input:{ownerId:136, name:\\\"_EM_298_XYZ_\\\", birthDate:\\\"2029-01-18\\\", typeId:103})    {pet{name,owner{id,firstName,address}}}    }\" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: updatePet
    // 			Action parameters:
    // 				input: '{"petId":813155075, "birthDate":"1933-04-14", "typeId":null}'
    // 				updatePet: '{"pet":{"id":true, "name":false, "birthDate":true, "type":{"id":true, "name":true}, "visits":{"totalCount":false, "visits":{"id":true, "description":true, "date":false}}}}'
    // 			Genes:
    // 				org.evomaster.core.search.gene.ObjectGene = input:{"petId":813155075, "birthDate":"1933-04-14", "typeId":null}
    // 				org.evomaster.core.search.gene.ObjectGene = updatePet:{"pet":{"id":true, "name":false, "birthDate":true, "type":{"id":true, "name":true}, "visits":{"totalCount":false, "visits":{"id":true, "description":true, "date":false}}}}
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: updatePet
    @Test(timeout = 60000)
    public void test_1_mutationOnUpdatepetReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"mutation{    updatePet  ( input:{petId:813155075, birthDate:\\\"1933-04-14\\\", typeId:null})    {pet{id,birthDate,type{id,name},visits{visits{id,description}}}}    }\" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: addVisit
    // 			Action parameters:
    // 				input: '{"petId":911, "description":"_EM_820_XYZ_", "date":"1955-06-01"}'
    // 				addVisit: '{"visit":{"id":false, "description":true, "pet":{"id":true, "name":false, "birthDate":false}, "date":false}}'
    // 			Genes:
    // 				org.evomaster.core.search.gene.ObjectGene = input:{"petId":911, "description":"_EM_820_XYZ_", "date":"1955-06-01"}
    // 				org.evomaster.core.search.gene.ObjectGene = addVisit:{"visit":{"id":false, "description":true, "pet":{"id":true, "name":false, "birthDate":false}, "date":false}}
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: addVisit
    @Test(timeout = 60000)
    public void test_2_mutationOnAddvisitReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"mutation{    addVisit  ( input:{petId:911, description:\\\"_EM_820_XYZ_\\\", date:\\\"1955-06-01\\\"})    {visit{description,pet{id}}}    }\" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }


}
