import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-17T17:08:12.365-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 3 tests
 * <br>
*  Covered targets: 9
 * <br>
*  Used time: 0h 11m 19s
 * <br>
*  Needed budget for current results: 93%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_others_Test {

    
    private static String baseUrlOfSut = "http://localhost:9977/graphql";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: addVisit
    // 			Action parameters:
    // 				input: '{"petId":69, "description":"M4CygE3A1A", "date":"2078-05-01"}'
    // 				addVisit: '{"visit":{"id":false, "description":false, "date":true}}'
    // 			Genes:
    // 				org.evomaster.core.search.gene.ObjectGene = input:'{"petId":69, "description":"M4CygE3A1A", "date":"2078-05-01"}'
    // 				org.evomaster.core.search.gene.ObjectGene = addVisit:'{"visit":{"id":false, "description":false, "date":true}}'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: addVisit
    @Test(timeout = 60000)
    public void test_0_mUTATIONOnAddVisitReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"mutation{    addVisit  ( input:{petId:69, description:\\\"M4CygE3A1A\\\", date:\\\"2078-05-01\\\"})    {visit{date}}    }\" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: updatePet
    // 			Action parameters:
    // 				input: '{"petId":428, "name":"0fteof", "birthDate":"1985-09-17"}'
    // 				updatePet: '{"pet":{"id":true, "name":false, "birthDate":false, "type":{"id":true, "name":false}}}'
    // 			Genes:
    // 				org.evomaster.core.search.gene.ObjectGene = input:'{"petId":428, "name":"0fteof", "birthDate":"1985-09-17"}'
    // 				org.evomaster.core.search.gene.ObjectGene = updatePet:'{"pet":{"id":true, "name":false, "birthDate":false, "type":{"id":true, "name":false}}}'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: updatePet
    @Test(timeout = 60000)
    public void test_1_mUTATIONOnUpdatePetReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"mutation{    updatePet  ( input:{petId:428, name:\\\"0fteof\\\", birthDate:\\\"1985-09-17\\\"})    {pet{id,type{id}}}    }\" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: addPet
    // 			Action parameters:
    // 				input: '{"ownerId":468, "name":"vw", "birthDate":"1952-13-23", "typeId":418}'
    // 				addPet: '{"pet":{"id":true, "name":true, "birthDate":true, "visits":{"totalCount":true}}}'
    // 			Genes:
    // 				org.evomaster.core.search.gene.ObjectGene = input:'{"ownerId":468, "name":"vw", "birthDate":"1952-13-23", "typeId":418}'
    // 				org.evomaster.core.search.gene.ObjectGene = addPet:'{"pet":{"id":true, "name":true, "birthDate":true, "visits":{"totalCount":true}}}'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: addPet
    @Test(timeout = 60000)
    public void test_2_mUTATIONOnAddPetReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"mutation{    addPet  ( input:{ownerId:468, name:\\\"vw\\\", birthDate:\\\"1952-13-23\\\", typeId:418})    {pet{id,name,birthDate,visits{totalCount}}}    }\" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }


}
