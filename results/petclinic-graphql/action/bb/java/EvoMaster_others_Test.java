import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-06T17:01:25.551-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 3 tests
 * <br>
*  Covered targets: 9
 * <br>
*  Used time: 0h 11m 4s
 * <br>
*  Needed budget for current results: 89%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_others_Test {

    
    private static String baseUrlOfSut = "http://localhost:9977/graphql";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: updatePet
    // 			Action parameters:
    // 				input: '{"petId":904, "birthDate":"1904-13-27", "typeId":410}'
    // 				updatePet: '{"pet":{"id":true, "name":false, "birthDate":true, "owner":{"id":false, "firstName":true, "lastName":false, "address":false, "city":false, "telephone":true}, "visits":{"totalCount":true, "visits":{"id":false, "description":true, "date":true}}}}'
    // 			Genes:
    // 				org.evomaster.core.search.gene.ObjectGene = input:{"petId":904, "birthDate":"1904-13-27", "typeId":410}
    // 				org.evomaster.core.search.gene.ObjectGene = updatePet:{"pet":{"id":true, "name":false, "birthDate":true, "owner":{"id":false, "firstName":true, "lastName":false, "address":false, "city":false, "telephone":true}, "visits":{"totalCount":true, "visits":{"id":false, "description":true, "date":true}}}}
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: updatePet
    @Test(timeout = 60000)
    public void test_0_mutationOnUpdatepetReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"mutation{    updatePet  ( input:{petId:904, birthDate:\\\"1904-13-27\\\", typeId:410})    {pet{id,birthDate,owner{firstName,telephone},visits{totalCount,visits{description,date}}}}    }\" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: addPet
    // 			Action parameters:
    // 				input: '{"ownerId":894, "name":"NH2gVF0Ygrl30GK", "birthDate":"1903-06-17", "typeId":552}'
    // 				addPet: '{"pet":{"id":false, "name":true, "birthDate":false, "type":{"id":true, "name":true}, "owner":{"id":false, "firstName":true, "lastName":true, "address":true, "city":true, "telephone":false}, "visits":{"totalCount":false, "visits":{"id":false, "description":true, "date":true}}}}'
    // 			Genes:
    // 				org.evomaster.core.search.gene.ObjectGene = input:{"ownerId":894, "name":"NH2gVF0Ygrl30GK", "birthDate":"1903-06-17", "typeId":552}
    // 				org.evomaster.core.search.gene.ObjectGene = addPet:{"pet":{"id":false, "name":true, "birthDate":false, "type":{"id":true, "name":true}, "owner":{"id":false, "firstName":true, "lastName":true, "address":true, "city":true, "telephone":false}, "visits":{"totalCount":false, "visits":{"id":false, "description":true, "date":true}}}}
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: addPet
    @Test(timeout = 60000)
    public void test_1_mutationOnAddpetReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"mutation{    addPet  ( input:{ownerId:894, name:\\\"NH2gVF0Ygrl30GK\\\", birthDate:\\\"1903-06-17\\\", typeId:552})    {pet{name,type{id,name},owner{firstName,lastName,address,city},visits{visits{description,date}}}}    }\" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: addVisit
    // 			Action parameters:
    // 				input: '{"petId":613, "description":"2", "date":"2036-01-10"}'
    // 				addVisit: '{"visit":{"id":true, "description":true, "pet":{"id":true, "name":false, "birthDate":false, "type":{"id":false, "name":true}, "owner":{"id":true, "firstName":true, "lastName":false, "address":true, "city":false, "telephone":true}, "visits":{"totalCount":true}}, "date":false}}'
    // 			Genes:
    // 				org.evomaster.core.search.gene.ObjectGene = input:{"petId":613, "description":"2", "date":"2036-01-10"}
    // 				org.evomaster.core.search.gene.ObjectGene = addVisit:{"visit":{"id":true, "description":true, "pet":{"id":true, "name":false, "birthDate":false, "type":{"id":false, "name":true}, "owner":{"id":true, "firstName":true, "lastName":false, "address":true, "city":false, "telephone":true}, "visits":{"totalCount":true}}, "date":false}}
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: addVisit
    @Test(timeout = 60000)
    public void test_2_mutationOnAddvisitReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"mutation{    addVisit  ( input:{petId:613, description:\\\"2\\\", date:\\\"2036-01-10\\\"})    {visit{id,description,pet{id,type{name},owner{id,firstName,address,telephone},visits{totalCount}}}}    }\" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }


}
