import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-03T01:30:35.967-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 24 tests
 * <br>
*  Covered targets: 75
 * <br>
*  Used time: 0h 25m 34s
 * <br>
*  Needed budget for current results: 97%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_deleteOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/XfVKcUbvKgZIsi/custom_data/PE")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/XfVKcUbvKgZIsi/custom_data/PE"));
    }
    
    
    @Test(timeout = 60000)
    public void test_1_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/Jx0yD2/group/tQiUyMd")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Jx0yD2/group/tQiUyMd"));
    }
    
    
    @Test(timeout = 60000)
    public void test_2_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/bd4nFQUri3QTd0/custom_data")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/bd4nFQUri3QTd0/custom_data"));
    }
    
    
    @Test(timeout = 60000)
    public void test_3_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"Kyqugv9BeoYvJ\" ")
                .put(baseUrlOfSut + "/api/sessions/2BS/comparison_session/Kyqugv9BeoYvJ")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/2BS/comparison_session/Kyqugv9BeoYvJ"));
    }
    
    
    @Test(timeout = 60000)
    public void test_4_postOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"genomic_chart\" ")
                .post(baseUrlOfSut + "/api/sessions/wcS/genomic_chart")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/wcS/genomic_chart"));
    }
    
    
    @Test(timeout = 60000)
    public void test_5_postOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"settings\" ")
                .post(baseUrlOfSut + "/api/sessions/8f/settings")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/8f/settings"));
    }
    
    
    @Test(timeout = 60000)
    public void test_6_getOnQueryShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/vdVDIIT9yjG5K/comparison_session/query?" + 
                    "field=1VVagCviRY&" + 
                    "value=XEtP2buwDFyL4tVy")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/vdVDIIT9yjG5K/comparison_session/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_7_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" EVOMASTER ")
                .post(baseUrlOfSut + "/api/sessions/kutrTJ2sIPiN/settings")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/kutrTJ2sIPiN/settings"));
        
        try{
            given().accept("*/*")
                    .delete(baseUrlOfSut + "/api/sessions/kutrTJ2sIPiN/settings/Xszx7fk");
        } catch(Exception e){
        }
    }
    
    
    @Test(timeout = 60000)
    public void test_8_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" main_session ")
                .post(baseUrlOfSut + "/api/sessions/BNfMlh9V/custom_data")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/BNfMlh9V/custom_data"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/BNfMlh9V/custom_data/TcbSn")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/BNfMlh9V/custom_data/TcbSn"));
    }
    
    
    @Test(timeout = 60000)
    public void test_9_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"virtual_study\" ")
                .post(baseUrlOfSut + "/api/sessions/zs53/group")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/zs53/group"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/zs53/group")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/zs53/group"));
    }
    
    
    @Test(timeout = 60000)
    public void test_10_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .post(baseUrlOfSut + "/api/sessions/GwCta/genomic_chart")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/GwCta/genomic_chart"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/GwCta/genomic_chart")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/GwCta/genomic_chart"));
    }
    
    
    @Test(timeout = 60000)
    public void test_11_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .post(baseUrlOfSut + "/api/sessions/7DajEf5O32hJC/comparison_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/7DajEf5O32hJC/comparison_session"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/7DajEf5O32hJC/comparison_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/7DajEf5O32hJC/comparison_session"));
    }
    
    
    @Test(timeout = 60000)
    public void test_12_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_data\" ")
                .post(baseUrlOfSut + "/api/sessions/knKsD3/settings")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/knKsD3/settings"));
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" 6ynUb_rTFq16pPs ")
                .put(baseUrlOfSut + "/api/sessions/knKsD3/settings/6ynUb_rTFq16pPs")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/knKsD3/settings/6ynUb_rTFq16pPs"));
    }
    
    
    @Test(timeout = 60000)
    public void test_13_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .post(baseUrlOfSut + "/api/sessions/66tOJEyO/group")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/66tOJEyO/group"));
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"Tnu5H_ob7O1Zc\" ")
                .put(baseUrlOfSut + "/api/sessions/66tOJEyO/group/Tnu5H_ob7O1Zc")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/66tOJEyO/group/Tnu5H_ob7O1Zc"));
    }
    
    
    @Test(timeout = 60000)
    public void test_14_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .post(baseUrlOfSut + "/api/sessions/0fsB5/custom_gene_list")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/0fsB5/custom_gene_list"));
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"iWpY8qmdB\" ")
                .put(baseUrlOfSut + "/api/sessions/0fsB5/custom_gene_list/iWpY8qmdB")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/0fsB5/custom_gene_list/iWpY8qmdB"));
    }
    
    
    @Test(timeout = 60000)
    public void test_15_getOnQueryShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"genomic_chart\" ")
                .post(baseUrlOfSut + "/api/sessions/2DWFz/custom_data")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/2DWFz/custom_data"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/2DWFz/custom_data/query?" + 
                    "field=xhe&" + 
                    "value=20CQrXo")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/2DWFz/custom_data/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_16_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" virtual_study ")
                .post(baseUrlOfSut + "/api/sessions/rtuCikDK/custom_gene_list")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/rtuCikDK/custom_gene_list"));
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" rgAW ")
                .put(baseUrlOfSut + "/api/sessions/rtuCikDK/custom_gene_list/TZUzKbrp0")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/rtuCikDK/custom_gene_list/TZUzKbrp0"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/rtuCikDK/custom_gene_list/TZUzKbrp0")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/rtuCikDK/custom_gene_list/TZUzKbrp0"));
    }
    
    
    @Test(timeout = 60000)
    public void test_17_deleteOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"settings\" ")
                .post(baseUrlOfSut + "/api/sessions/Yy/custom_gene_list")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Yy/custom_gene_list"));
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"HyGf\" ")
                .put(baseUrlOfSut + "/api/sessions/Yy/custom_gene_list/w3")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Yy/custom_gene_list/w3"));
        
        // Fault100. HTTP Status 500. DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/Yy/custom_gene_list/w3")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Yy/custom_gene_list/w3"));
    }
    
    
    @Test(timeout = 60000)
    public void test_18_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" group ")
                .post(baseUrlOfSut + "/api/sessions/uySW/group/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/uySW/group/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_19_postOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" settings ")
                .post(baseUrlOfSut + "/api/sessions/gxhJGU/settings")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/gxhJGU/settings"));
    }
    
    
    @Test(timeout = 60000)
    public void test_20_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" main_session ")
                .post(baseUrlOfSut + "/api/sessions/HsbXz3oZH1Zd/main_session/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/HsbXz3oZH1Zd/main_session/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_21_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .post(baseUrlOfSut + "/api/sessions/FvT9/custom_gene_list/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/FvT9/custom_gene_list/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_22_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"EVOMASTER\" ")
                .post(baseUrlOfSut + "/api/sessions/U/EVOMASTER/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/U/EVOMASTER/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_23_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" custom_data ")
                .post(baseUrlOfSut + "/api/sessions/m/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/m/EVOMASTER"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" qM0CSXDNpxEyA4Sl ")
                .put(baseUrlOfSut + "/api/sessions/m/EVOMASTER/snypaFLtJs")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/m/EVOMASTER/snypaFLtJs"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/m/EVOMASTER/snypaFLtJs")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/m/EVOMASTER/snypaFLtJs"));
    }


}
