import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-06T16:27:52.323-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 2 tests
 * <br>
*  Covered targets: 14
 * <br>
*  Used time: 0h 16m 17s
 * <br>
*  Needed budget for current results: 100%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}
    // 			Action parameters:
    // 				source: 'W3GYqFW87rPxmf'
    // 				type: 'main_session'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:W3GYqFW87rPxmf
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:main_session
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}/{id}
    // 			Action parameters:
    // 				source: 'Yb8v_jWlKwdy'
    // 				type: 'custom_data'
    // 				id: 'jB3MvkQuh8_npfCf'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:Yb8v_jWlKwdy
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:custom_data
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:jB3MvkQuh8_npfCf
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/api/sessions/{source}/{type}
    // 			Action parameters:
    // 				source: 'tEGOSx'
    // 				type: 'genomic_chart'
    // 				body: 'genomic_chart'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:tEGOSx
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:genomic_chart
    // 				org.evomaster.core.search.gene.string.StringGene = body:genomic_chart
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/api/sessions/{source}/{type}/{id}
    // 			Action parameters:
    // 				source: 'rfsJUCsdw2nbxYi'
    // 				type: 'custom_gene_list'
    // 				id: 'xJDRkmLCJlFbbb'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:rfsJUCsdw2nbxYi
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:custom_gene_list
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:xJDRkmLCJlFbbb
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/api/sessions/{source}/{type}/query/fetch
    // 			Action parameters:
    // 				source: 'fT3wi5qdZaH'
    // 				type: 'genomic_chart'
    // 				body: 'genomic_chart'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:fT3wi5qdZaH
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:genomic_chart
    // 				org.evomaster.core.search.gene.string.StringGene = body:genomic_chart
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/api/sessions/{source}/{type}/query/fetch
    // 			Action parameters:
    // 				source: 'olyaPV'
    // 				type: 'group'
    // 				body: 'group'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:olyaPV
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:group
    // 				org.evomaster.core.search.gene.string.StringGene = body:group
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/api/sessions/{source}/{type}/{id}
    // 			Action parameters:
    // 				source: 'wXa'
    // 				type: 'custom_gene_list'
    // 				id: 'rFo'
    // 				body: 'rFo'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:wXa
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:custom_gene_list
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:rFo
    // 				org.evomaster.core.search.gene.string.StringGene = body:rFo
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/api/sessions/{source}/{type}
    // 			Action parameters:
    // 				source: 'GRCsEZ'
    // 				type: 'comparison_session'
    // 				body: 'comparison_session'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:GRCsEZ
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:comparison_session
    // 				org.evomaster.core.search.gene.string.StringGene = body:comparison_session
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/api/sessions/{source}/{type}/query/fetch
    // 			Action parameters:
    // 				source: 'Oh2NE'
    // 				type: 'group'
    // 				body: 'group'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:Oh2NE
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:group
    // 				org.evomaster.core.search.gene.string.StringGene = body:group
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}/{id}
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/api/sessions/{source}/{type}
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/api/sessions/{source}/{type}/{id}
    @Test(timeout = 60000)
    public void test_0_deleteOnSessionCauses500_internalservererror() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/W3GYqFW87rPxmf/main_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/W3GYqFW87rPxmf/main_session"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/{id}
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/Yb8v_jWlKwdy/custom_data/jB3MvkQuh8_npfCf")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Yb8v_jWlKwdy/custom_data/jB3MvkQuh8_npfCf"));
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" genomic_chart ")
                .post(baseUrlOfSut + "/api/sessions/tEGOSx/genomic_chart")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/tEGOSx/genomic_chart"));
        
        try{
            given().accept("*/*")
                    .delete(baseUrlOfSut + "/api/sessions/rfsJUCsdw2nbxYi/custom_gene_list/xJDRkmLCJlFbbb");
        } catch(Exception e){
        }
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}/{id}
    // 			Action parameters:
    // 				source: 'vCxvCS6xH'
    // 				type: 'comparison_session'
    // 				id: 'Z35'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:vCxvCS6xH
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:comparison_session
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:Z35
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/info
    // 			Action parameters:
    // 			Genes:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}
    // 			Action parameters:
    // 				source: 'ZJdw6'
    // 				type: 'custom_gene_list'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:ZJdw6
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:custom_gene_list
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}
    // 			Action parameters:
    // 				source: 'QVEfnlU3DQRi4e'
    // 				type: 'group'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:QVEfnlU3DQRi4e
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:group
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}/query
    // 			Action parameters:
    // 				source: 'mpKLYp'
    // 				type: 'comparison_session'
    // 				field: '_T96YACR'
    // 				value: 'Cu'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:mpKLYp
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:comparison_session
    // 				org.evomaster.core.search.gene.string.StringGene = field:_T96YACR
    // 				org.evomaster.core.search.gene.string.StringGene = value:Cu
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}/query
    // 			Action parameters:
    // 				source: 'TO7A9xdORb7'
    // 				type: 'settings'
    // 				field: 'JxR3TFza0kya8Z'
    // 				value: 'MYjVvC4ve7'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:TO7A9xdORb7
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:settings
    // 				org.evomaster.core.search.gene.string.StringGene = field:JxR3TFza0kya8Z
    // 				org.evomaster.core.search.gene.string.StringGene = value:MYjVvC4ve7
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/api/sessions/{source}/{type}/query/fetch
    // 			Action parameters:
    // 				source: 'Wv'
    // 				type: 'group'
    // 				body: 'group'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = source:Wv
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = type:group
    // 				org.evomaster.core.search.gene.string.StringGene = body:group
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}/{id}
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/info
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}/query
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/sessions/{source}/{type}/query
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/api/sessions/{source}/{type}/query/fetch
    @Test(timeout = 60000)
    public void test_1_postOnFetchCauses500_internalservererror() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/{id}
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/vCxvCS6xH/comparison_session/Z35")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/vCxvCS6xH/comparison_session/Z35"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.5.0-SNAPSHOT"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/ZJdw6/custom_gene_list")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ZJdw6/custom_gene_list"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/QVEfnlU3DQRi4e/group")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/QVEfnlU3DQRi4e/group"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/mpKLYp/comparison_session/query?" + 
                    "field=_T96YACR&" + 
                    "value=Cu")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/mpKLYp/comparison_session/query"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/TO7A9xdORb7/settings/query?" + 
                    "field=JxR3TFza0kya8Z&" + 
                    "value=MYjVvC4ve7")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/TO7A9xdORb7/settings/query"));
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" group ")
                .post(baseUrlOfSut + "/api/sessions/Wv/group/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/Wv/group/query/fetch"));
    }


}
