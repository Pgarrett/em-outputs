import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-07T00:41:25.770-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 60 tests
 * <br>
*  Covered targets: 358
 * <br>
*  Used time: 0h 14m 21s
 * <br>
*  Needed budget for current results: 100%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.org.zalando.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CONTRIBUTOR","LANGUAGE_LIST","MAINTAINERS","PROJECT","STATISTICS"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_getOnContributorsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 43L)
                .d("ID", "-7603887372516498432")
                .d("ORGANIZATION_ID", "434")
                .d("SNAPSHOT_DATE", "\"1943-04-17 22:34:01\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet GET:/statistics/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 500 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=434&" + 
                    "q=qbJxBiJNZuM&" + 
                    "sortBy=cMd8kby0wu7C")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_1_getOnProjectsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 49L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "705")
                .d("GIT_HUB_PROJECT_ID", "878")
                .d("LAST_PUSHED", "\"5fCj3dbrkVd\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"gDdIrzI8impG1am\"")
                .d("PRIMARY_LANGUAGE", "\"\"")
                .d("SCORE", "21")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "778")
                .d("URL", "\"tIv2yLTXiiXfhN\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"mHQIw9Ed8r5o8BRy\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "468")
            .and().insertInto("STATISTICS", 50L)
                .d("ID", "549")
                .d("SNAPSHOT_DATE", "\"2000-05-25 11:59:25\"")
                .d("ALL_CONTRIBUTORS_COUNT", "388")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "754")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "634")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "441387573")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "gDdIrzI8impG1am")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=gDdIrzI8impG1am&" + 
                    "sortBy=_Gm&" + 
                    "language=")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    @Test(timeout = 60000)
    public void test_2_getOnContributorsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 20L)
                .d("ID", "310")
                .d("ORGANIZATION_ID", "380")
                .d("SNAPSHOT_DATE", "\"2092-07-01 12:22:02\"")
                .d("NAME", "\"a\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "146")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "895")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?organizations=380")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_3_getOnProjectsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 46L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "524")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "169")
                .d("LAST_PUSHED", "\"AML023kq7cJ\"")
                .d("NAME", "\"RE2V_KuRO036li7x\"")
                .d("ORGANIZATION_NAME", "\"609\"")
                .d("PRIMARY_LANGUAGE", "\"_EM_323_XYZ_\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1932-02-09 03:37:08\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"VSh_Dbzp4rYQgN9\"")
                .d("TITLE", "\"y2EqXwKs1PXJv\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "508")
            .and().insertInto("STATISTICS", 47L)
                .d("ID", "403")
                .d("SNAPSHOT_DATE", "\"1935-04-01 01:04:13\"")
                .d("ALL_CONTRIBUTORS_COUNT", "542")
                .d("ALL_FORKS_COUNT", "807")
                .d("ALL_SIZE_COUNT", "297")
                .d("ALL_STARS_COUNT", "705")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "123")
                .d("PROGRAM_LANGUAGES_COUNT", "491")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "509")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "869")
            .and().insertInto("CONTRIBUTOR", 48L)
                .d("ID", "788")
                .d("ORGANIZATION_ID", "609")
                .d("SNAPSHOT_DATE", "\"1914-02-02 10:29:04\"")
                .d("NAME", "\"TGd56YulL\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "850")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"_EM_325_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "UmibJKo32")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=609&" + 
                    "start_date=2074-08-01T23%3A36%3A42.312Z&" + 
                    "end_date=1931-04-29T07%3A05%3A28Z")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    @Test(timeout = 60000)
    public void test_4_getOnContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601 GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "aYzZb")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=vqGNpGiHhhvtUT&" + 
                    "start_date=gdNu2jMwM&" + 
                    "end_date=_Vlm2T")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"_Vlm2T\""))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_5_getOnContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_9_XYZ_&" + 
                    "limit=37&" + 
                    "end_date=_EM_11_XYZ_&" + 
                    "sortBy=c3JiTHph7qWF&" + 
                    "q=_EM_12_XYZ_&" + 
                    "EMextraParam123=_EM_13_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was c3JiTHph7qWF. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_6_getOnContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_14_XYZ_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=AWT&" + 
                    "offset=1141553619&" + 
                    "start_date=mb&" + 
                    "end_date=nYh&" + 
                    "sortBy=md2PhHeNZvrKs8t&" + 
                    "q=hm0H0O&" + 
                    "EMextraParam123=_EM_13_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was md2PhHeNZvrKs8t. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_7_getOnConfigReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/github.login'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.database.driverClassName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.datasource.platform'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.jpa.database'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/config?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'cache.path'", containsString("target/cache"))
                .body("'cache.size'", containsString("50"))
                .body("'endpoints.enabled'", containsString("false"))
                .body("'endpoints.health.enabled'", containsString("true"))
                .body("'github.login'", nullValue())
                .body("'organization.list'", containsString("zalando,zalando-stups,zalando-incubator"))
                .body("'schedule'", containsString("0 1 8 * * *"))
                .body("'scoring.project'", containsString("function(project) {var daysSinceLastPush = 0;if (project.lastPushed) {var tokens = project.lastPushed.split(\" \");var day = tokens[2];var month = tokens[1];var year = tokens[5];var lastPushedDate = new Date(day + ' ' + month + ' ' + year);var millisInDay = 86400000;daysSinceLastPush = Math.floor((new Date() - lastPushedDate) / millisInDay);}var maintainersPenalty = 0;if (project.maintainers.length < 2) {maintainersPenalty = 100;}return project.starsCount * 3 + project.forksCount * 2 + project.contributorsCount * 5 - daysSinceLastPush - maintainersPenalty}"))
                .body("'spring.database.driverClassName'", nullValue())
                .body("'spring.datasource.platform'", nullValue())
                .body("'spring.datasource.url'", containsString("jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;"))
                .body("'spring.datasource.username'", containsString("sa"))
                .body("'spring.jpa.database'", nullValue())
                .body("'spring.jpa.hibernate.ddl-auto'", containsString("update"));
    }
    
    
    @Test(timeout = 60000)
    public void test_8_getOnExportReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 44L)
                .d("ID", "337")
                .d("SNAPSHOT_DATE", "\"1937-06-24 20:10:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "654")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "107")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"596\"")
                .d("PRIVATE_PROJECT_COUNT", "307")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "473")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "1049087")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "558")
            .and().insertInto("CONTRIBUTOR", 45L)
                .d("ID", "617")
                .d("ORGANIZATION_ID", "596")
                .d("SNAPSHOT_DATE", "\"1964-01-02 20:41:13\"")
                .d("NAME", "\"_EM_273_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"1938-10-06 12:13:47\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "934")
                .d("PERSONAL_PROJECTS_COUNT", "-3600")
                .d("URL", "\"_EM_275_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "1964-01-02T20:41:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationalProjectsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allForksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "1937-06-24T20:10:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/membersCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/programLanguagesCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/tagsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/export?EMextraParam123=_EM_16_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(596.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1964-01-02T20:41:13"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", containsString("_EM_273_XYZ_"))
                .body("'contributors'[0].'url'", containsString("_EM_275_XYZ_"))
                .body("'contributors'[0].'organizationalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalCommitsCount'", numberMatches(934.0))
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(-3600.0))
                .body("'contributors'[0].'organizationalProjectsCount'", nullValue())
                .body("'contributors'[0].'organizationName'", containsString("1938-10-06 12:13:47"))
                .body("'contributors'[0].'organizationId'", numberMatches(596.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(-1.89217127E11))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("1937-06-24T20:10:57"))
                .body("'statistics'[0].'privateProjectCount'", numberMatches(307.0))
                .body("'statistics'[0].'publicProjectCount'", numberMatches(473.0))
                .body("'statistics'[0].'membersCount'", nullValue())
                .body("'statistics'[0].'teamsCount'", numberMatches(1049087.0))
                .body("'statistics'[0].'allContributorsCount'", numberMatches(654.0))
                .body("'statistics'[0].'externalContributorsCount'", numberMatches(558.0))
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", nullValue())
                .body("'statistics'[0].'allSizeCount'", numberMatches(107.0))
                .body("'statistics'[0].'programLanguagesCount'", nullValue())
                .body("'statistics'[0].'tagsCount'", nullValue())
                .body("'statistics'[0].'organizationName'", containsString("596"))
                .body("'statistics'[0].'snapshotDate'", numberMatches(-1.026258543E12));
    }
    
    
    @Test(timeout = 60000)
    public void test_9_getOnStatisticsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 56L)
                .d("ID", "333")
                .d("SNAPSHOT_DATE", "\"1960-08-18 00:57:38\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "182")
                .d("ALL_SIZE_COUNT", "107")
                .d("ALL_STARS_COUNT", "407")
                .d("MEMBERS_COUNT", "557066510")
                .d("ORGANIZATION_NAME", "\"31-\"")
                .d("PRIVATE_PROJECT_COUNT", "808")
                .d("PROGRAM_LANGUAGES_COUNT", "679")
                .d("PUBLIC_PROJECT_COUNT", "-178")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "364")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "993")
            .and().insertInto("CONTRIBUTOR", 57L)
                .d("ID", "901")
                .d("ORGANIZATION_ID", "411")
                .d("SNAPSHOT_DATE", "\"2071-12-25 09:00:56\"")
                .d("NAME", "\"r\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "632")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "422")
                .d("PERSONAL_PROJECTS_COUNT", "42")
                .d("URL", "\"78uYAZpROIbOdI8\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> [Path '/0/allContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> [Path '/0/key/snapshotDate'] String "1960-08-18T00:57:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> [Path '/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> [Path '/0/tagsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "foo")
                .get(baseUrlOfSut + "/statistics?organizations=31-")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'key'.'snapshotDate'", containsString("1960-08-18T00:57:38"))
                .body("[0].'privateProjectCount'", numberMatches(808.0))
                .body("[0].'publicProjectCount'", numberMatches(-178.0))
                .body("[0].'membersCount'", numberMatches(5.5706651E8))
                .body("[0].'teamsCount'", numberMatches(364.0))
                .body("[0].'allContributorsCount'", nullValue())
                .body("[0].'externalContributorsCount'", numberMatches(993.0))
                .body("[0].'allStarsCount'", numberMatches(407.0))
                .body("[0].'allForksCount'", numberMatches(182.0))
                .body("[0].'allSizeCount'", numberMatches(107.0))
                .body("[0].'programLanguagesCount'", numberMatches(679.0))
                .body("[0].'tagsCount'", nullValue())
                .body("[0].'organizationName'", containsString("31-"))
                .body("[0].'snapshotDate'", numberMatches(-2.95732942E11));
    }
    
    
    @Test(timeout = 60000)
    public void test_10_getOnStatisticsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 75L)
                .d("ID", "663")
                .d("SNAPSHOT_DATE", "\"2041-07-21 19:37:45\"")
                .d("ALL_CONTRIBUTORS_COUNT", "275")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "441")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"oB6zOee9rA\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "177")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "442")
                .d("TEAMS_COUNT", "772")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "3")
            .and().insertInto("PROJECT", 76L)
                .d("COMMITS_COUNT", "854")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"JCrvJY0jMkDh8Cu\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "238")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"_EM_550_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"oB6zOee9rA\"")
                .d("PRIMARY_LANGUAGE", "\"s\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"xevpXXSqsRUuss\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> [Path '/0/allForksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> [Path '/0/allSizeCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> [Path '/0/key/snapshotDate'] String "2041-07-21T19:37:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> [Path '/0/membersCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> [Path '/0/privateProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> [Path '/0/publicProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> [Path '/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?organizations=oB6zOee9rA")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'key'.'snapshotDate'", containsString("2041-07-21T19:37:45"))
                .body("[0].'privateProjectCount'", nullValue())
                .body("[0].'publicProjectCount'", nullValue())
                .body("[0].'membersCount'", nullValue())
                .body("[0].'teamsCount'", numberMatches(772.0))
                .body("[0].'allContributorsCount'", numberMatches(275.0))
                .body("[0].'externalContributorsCount'", numberMatches(3.0))
                .body("[0].'allStarsCount'", numberMatches(441.0))
                .body("[0].'allForksCount'", nullValue())
                .body("[0].'allSizeCount'", nullValue())
                .body("[0].'programLanguagesCount'", numberMatches(177.0))
                .body("[0].'tagsCount'", numberMatches(442.0))
                .body("[0].'organizationName'", containsString("oB6zOee9rA"))
                .body("[0].'snapshotDate'", numberMatches(2.258059065E12));
    }
    
    
    @Test(timeout = 60000)
    public void test_11_getOnExportReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 75L)
                .d("ID", "663")
                .d("SNAPSHOT_DATE", "\"2041-07-21 19:37:45\"")
                .d("ALL_CONTRIBUTORS_COUNT", "275")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "441")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"oB6zOee9rA\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "177")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "442")
                .d("TEAMS_COUNT", "772")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "3")
            .and().insertInto("PROJECT", 76L)
                .d("COMMITS_COUNT", "854")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"JCrvJY0jMkDh8Cu\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "238")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"_EM_550_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"oB6zOee9rA\"")
                .d("PRIMARY_LANGUAGE", "\"s\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"xevpXXSqsRUuss\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/contributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/forksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/image'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/lastPushed'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/score'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/starsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/title'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allForksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allSizeCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2041-07-21T19:37:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/membersCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/privateProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/publicProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "end_date=wAQGULbe&" + 
                    "offset=mL5Dw6&" + 
                    "limit=MaGxfooPwxLWs15")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(238.0))
                .body("'projects'[0].'snapshotDate'", nullValue())
                .body("'projects'[0].'name'", containsString("_EM_550_XYZ_"))
                .body("'projects'[0].'title'", nullValue())
                .body("'projects'[0].'image'", nullValue())
                .body("'projects'[0].'organizationName'", containsString("oB6zOee9rA"))
                .body("'projects'[0].'url'", containsString("xevpXXSqsRUuss"))
                .body("'projects'[0].'description'", containsString("JCrvJY0jMkDh8Cu"))
                .body("'projects'[0].'starsCount'", nullValue())
                .body("'projects'[0].'commitsCount'", numberMatches(854.0))
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", nullValue())
                .body("'projects'[0].'externalContributorsCount'", nullValue())
                .body("'projects'[0].'score'", nullValue())
                .body("'projects'[0].'lastPushed'", nullValue())
                .body("'projects'[0].'primaryLanguage'", containsString("s"))
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2041-07-21T19:37:45"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", nullValue())
                .body("'statistics'[0].'membersCount'", nullValue())
                .body("'statistics'[0].'teamsCount'", numberMatches(772.0))
                .body("'statistics'[0].'allContributorsCount'", numberMatches(275.0))
                .body("'statistics'[0].'externalContributorsCount'", numberMatches(3.0))
                .body("'statistics'[0].'allStarsCount'", numberMatches(441.0))
                .body("'statistics'[0].'allForksCount'", nullValue())
                .body("'statistics'[0].'allSizeCount'", nullValue())
                .body("'statistics'[0].'programLanguagesCount'", numberMatches(177.0))
                .body("'statistics'[0].'tagsCount'", numberMatches(442.0))
                .body("'statistics'[0].'organizationName'", containsString("oB6zOee9rA"))
                .body("'statistics'[0].'snapshotDate'", numberMatches(2.258059065E12));
    }
    
    
    @Test(timeout = 60000)
    public void test_12_getOnExportReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 33L)
                .d("ID", "651")
                .d("SNAPSHOT_DATE", "\"2000-05-18 01:51:00\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "568")
                .d("ORGANIZATION_NAME", "\"424\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "793")
                .d("TEAMS_COUNT", "13")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 34L)
                .d("ID", "-264196037129927680")
                .d("ORGANIZATION_ID", "424")
                .d("SNAPSHOT_DATE", "\"2028-09-16 05:11:42\"")
                .d("NAME", "\"_EM_219_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"9sW6PYzRS\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "682")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "784")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "273")
                .d("URL", "\"_EM_220_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> Response status 400 not defined for path '/export'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_13_getOnDeleteReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> Response status 400 not defined for path '/delete'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/delete?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_14_postOnScoring_projectReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 44L)
                .d("ID", "337")
                .d("SNAPSHOT_DATE", "\"1937-06-24 20:10:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "0")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "107")
                .d("ALL_STARS_COUNT", "824")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"496\"")
                .d("PRIVATE_PROJECT_COUNT", "307")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "473")
                .d("TAGS_COUNT", "101")
                .d("TEAMS_COUNT", "0")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "558")
            .and().insertInto("CONTRIBUTOR", 45L)
                .d("ID", "617")
                .d("ORGANIZATION_ID", "496")
                .d("SNAPSHOT_DATE", "\"1964-01-02 20:41:13\"")
                .d("NAME", "\"_EM_273_XXX[\"")
                .d("ORGANIZATION_NAME", "\"_EM_274_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "514")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "1958")
                .d("PERSONAL_PROJECTS_COUNT", "240")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> Response status 400 not defined for path '/config/scoring.project'.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "6rfq6eTKwXiyKZq")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_15_getOnLanguagesReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> Response status 400 not defined for path '/statistics/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_5_XYZ_")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=_EM_97_XYZ_&" + 
                    "start_date=GiFHOipSV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string GiFHOipSV."));
    }
    
    
    @Test(timeout = 60000)
    public void test_16_getOnStatisticsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 24L)
                .d("ID", "366")
                .d("SNAPSHOT_DATE", "\"2068-12-08 09:44:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "410")
                .d("ALL_FORKS_COUNT", "934")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"LZ_vOjGBA\"")
                .d("PRIVATE_PROJECT_COUNT", "628")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "404")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> Response status 400 not defined for path '/statistics'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=LZ_vOjGBA&" + 
                    "start_date=c&" + 
                    "end_date=_EM_196_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for stardDate"));
    }
    
    
    @Test(timeout = 60000)
    public void test_17_getOnLanguagesReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> Response status 400 not defined for path '/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "K")
                .header("X-Organizations", "P7TkWHVY2eIp4")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=ZKno36roldQadKD&" + 
                    "limit=73&" + 
                    "q=OFdC&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_18_getOnLanguagesReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 87L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "194")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "503")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"qaBeFm_UeaON\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "567")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 88L)
                .d("ID", "610")
                .d("SNAPSHOT_DATE", "\"1997-06-03 00:46:58\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "407")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"qaBeFm_UeaON\"")
                .d("PRIVATE_PROJECT_COUNT", "808")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "883")
                .d("TEAMS_COUNT", "-437213077")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "3")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> Response status 400 not defined for path '/statistics/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "qaBeFm_UeaON")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=qaBeFm_UeaON&" + 
                    "start_date=RAaxSiY60vUScrur&" + 
                    "end_date=FgMOptLwPx&" + 
                    "sortBy=a")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string RAaxSiY60vUScrur."));
    }
    
    
    @Test(timeout = 60000)
    public void test_19_getOnContributorsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 67L)
                .d("ID", "317")
                .d("ORGANIZATION_ID", "292")
                .d("SNAPSHOT_DATE", "\"1907-08-30 17:26:10\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "160")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "322")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "992")
                .d("URL", "NULL")
            .and().insertInto("STATISTICS", 68L)
                .d("ID", "404")
                .d("SNAPSHOT_DATE", "\"1997-09-07 12:09:07\"")
                .d("ALL_CONTRIBUTORS_COUNT", "129")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "107")
                .d("ALL_STARS_COUNT", "21")
                .d("MEMBERS_COUNT", "465")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "632")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "969")
            .and().insertInto("PROJECT", 69L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "173")
                .d("DESCRIPTION", "\"5CC93Rr54dK\"")
                .d("FORKS_COUNT", "755")
                .d("GIT_HUB_PROJECT_ID", "734")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"Bdp4M_252VdZyNqf\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "54")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"O\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 400 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "292")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "start_date=Jan9u&" + 
                    "q=iWl&" + 
                    "limit=294")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string Jan9u."));
    }
    
    
    @Test(timeout = 60000)
    public void test_20_getOnLanguagesReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> Response status 400 not defined for path '/statistics/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "start_date=TVD5GJx&" + 
                    "q=FiiGQpX2ohd&" + 
                    "offset=ipkj")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string TVD5GJx."));
    }
    
    
    @Test(timeout = 60000)
    public void test_21_getOnStatisticsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 82L)
                .d("ID", "951")
                .d("SNAPSHOT_DATE", "\"2023-06-03 01:09:02\"")
                .d("ALL_CONTRIBUTORS_COUNT", "492")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "705")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "307")
                .d("PROGRAM_LANGUAGES_COUNT", "369")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "442")
                .d("TEAMS_COUNT", "772")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "83")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> Response status 400 not defined for path '/statistics'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "bbaf4Jf")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=bbaf4Jf&" + 
                    "start_date=upx40Z6Y0ym5dU&" + 
                    "q=q3PldxLXzR&" + 
                    "offset=RR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for stardDate"));
    }
    
    
    @Test(timeout = 60000)
    public void test_22_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 51L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "681")
                .d("LAST_PUSHED", "\"2TD0lTSS\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"zIyZck0Wtu42g3\"")
                .d("PRIMARY_LANGUAGE", "\"jMDqNnD_\"")
                .d("SCORE", "452")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "997")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"_5MWLHFClfAl9x_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 52L)
                .d("ID", "98")
                .d("SNAPSHOT_DATE", "\"2091-02-12 03:09:01\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "561")
                .d("ALL_STARS_COUNT", "687")
                .d("MEMBERS_COUNT", "454")
                .d("ORGANIZATION_NAME", "\"_EM_336_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "-1130794446")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "693")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=QKKxO7ZD2rNAPBy&" + 
                    "end_date=ZQJoJmH1uu8&" + 
                    "q=PBI8IY5hUC&" + 
                    "offset=_EM_338_XYZ_&" + 
                    "limit=_EM_339_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string QKKxO7ZD2rNAPBy."));
    }
    
    
    @Test(timeout = 60000)
    public void test_23_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 44L)
                .d("ID", "337")
                .d("SNAPSHOT_DATE", "\"1937-06-24 20:10:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "0")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "107")
                .d("ALL_STARS_COUNT", "824")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"496\"")
                .d("PRIVATE_PROJECT_COUNT", "307")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "473")
                .d("TAGS_COUNT", "101")
                .d("TEAMS_COUNT", "0")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "558")
            .and().insertInto("CONTRIBUTOR", 45L)
                .d("ID", "617")
                .d("ORGANIZATION_ID", "496")
                .d("SNAPSHOT_DATE", "\"1964-01-02 20:41:13\"")
                .d("NAME", "\"_EM_273_XXX[\"")
                .d("ORGANIZATION_NAME", "\"_EM_274_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "514")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "1958")
                .d("PERSONAL_PROJECTS_COUNT", "240")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> Response status 400 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "dL")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=216&" + 
                    "start_date=2060-06-11T18%3A04%3A36.225Z&" + 
                    "end_date=2080-08-15T19%3A22%3A43%2B06%3A50&" + 
                    "sortBy=%2C&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_24_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> Response status 400 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=_EM_21_XYZ_&" + 
                    "limit=178&" + 
                    "offset=990&" + 
                    "start_date=2034-05-25T23%3A28%3A50.718Z&" + 
                    "end_date=2042-00-11T-1%3A17%3A52.063Z&" + 
                    "language=_EM_23_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'exception'", containsString("org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"))
                .body("'message'", containsString("Failed to convert value of type 'java.lang.String' to required type 'java.util.Date'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@io.swagger.annotations.ApiParam @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.util.Date] for value '2042-00-11T-1:17:52.063Z'; nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [2042-00-11T-1:17:52.063Z]"))
                .body("'path'", containsString("/projects"));
    }
    
    
    @Test(timeout = 60000)
    public void test_25_getOnDeleteReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/delete?limit=StZ5fl_v1KSlmWYF")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    @Test(timeout = 60000)
    public void test_26_getOnInitReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init?" + 
                    "end_date=JNlc_Wc2g0WLk&" + 
                    "q=J1ustb5s&" + 
                    "offset=_EM_548_XYZ_&" + 
                    "organizations=iug45JYiu&" + 
                    "limit=De1m7")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    @Test(timeout = 60000)
    public void test_27_getOnInitReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 67L)
                .d("ID", "317")
                .d("ORGANIZATION_ID", "292")
                .d("SNAPSHOT_DATE", "\"1907-08-30 17:26:10\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "160")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "322")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "992")
                .d("URL", "NULL")
            .and().insertInto("STATISTICS", 68L)
                .d("ID", "404")
                .d("SNAPSHOT_DATE", "\"1997-09-07 12:09:07\"")
                .d("ALL_CONTRIBUTORS_COUNT", "129")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "107")
                .d("ALL_STARS_COUNT", "21")
                .d("MEMBERS_COUNT", "465")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "632")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "969")
            .and().insertInto("PROJECT", 69L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "173")
                .d("DESCRIPTION", "\"5CC93Rr54dK\"")
                .d("FORKS_COUNT", "755")
                .d("GIT_HUB_PROJECT_ID", "734")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"Bdp4M_252VdZyNqf\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "54")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"O\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    @Test(timeout = 60000)
    public void test_28_getOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/fetch -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/fetch?access_token=HzCNT")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_29_getOnConfigReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config?access_token=WEBh")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_30_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"externalContributorsCount\": 662, " + 
                    " \"forksCount\": 551, " + 
                    " \"languageList\": [ " + 
                    " \"1fCibX\" " + 
                    " ], " + 
                    " \"maintainers\": [ " + 
                    " \"ZZW70_NL\", " + 
                    " \"_Vr8ou5llwPcdp11\" " + 
                    " ], " + 
                    " \"name\": \"_EM_34_XYZ_\", " + 
                    " \"organizationName\": \"l\", " + 
                    " \"score\": 130, " + 
                    " \"snapshotDate\": \"2093-02-21T00:37:17+09:17\" " + 
                    " }, " + 
                    " { " + 
                    " \"externalContributorsCount\": 677, " + 
                    " \"forksCount\": 429, " + 
                    " \"image\": \"_EM_37_XYZ_\", " + 
                    " \"name\": \"6Ts5MIrYc_QBMkO\", " + 
                    " \"score\": 211, " + 
                    " \"title\": \"KJzUNdEuPkdHDC\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allContributorsCount\": 921, " + 
                    " \"allForksCount\": 956, " + 
                    " \"allSizeCount\": 727, " + 
                    " \"key\": { " + 
                    " \"snapshotDate\": \"1917-12-29T11:08:16-04:30\" " + 
                    " }, " + 
                    " \"organizationName\": \"jjZDwms_Pu\", " + 
                    " \"privateProjectCount\": 564, " + 
                    " \"publicProjectCount\": 359, " + 
                    " \"teamsCount\": 426 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 117, " + 
                    " \"allSizeCount\": 3, " + 
                    " \"key\": {}, " + 
                    " \"membersCount\": 229, " + 
                    " \"privateProjectCount\": 620, " + 
                    " \"publicProjectCount\": 259, " + 
                    " \"snapshotDate\": \"1950-00-28T19:57:28.974+22:38\", " + 
                    " \"tagsCount\": 915 " + 
                    " }, " + 
                    " { " + 
                    " \"allStarsCount\": 469, " + 
                    " \"privateProjectCount\": 729, " + 
                    " \"publicProjectCount\": 302, " + 
                    " \"snapshotDate\": \"2048-02-14T06:31:-1Z\" " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 170, " + 
                    " \"allSizeCount\": 20, " + 
                    " \"externalContributorsCount\": 500, " + 
                    " \"membersCount\": 188, " + 
                    " \"programLanguagesCount\": 59, " + 
                    " \"publicProjectCount\": 657, " + 
                    " \"teamsCount\": 512 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 18, " + 
                    " \"externalContributorsCount\": 757, " + 
                    " \"organizationName\": \"_EM_44_XYZ_\", " + 
                    " \"privateProjectCount\": 579, " + 
                    " \"programLanguagesCount\": 130, " + 
                    " \"publicProjectCount\": 803, " + 
                    " \"tagsCount\": 134 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    @Test(timeout = 60000)
    public void test_31_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"url\": \"_EM_115_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"contributorsCount\": 576, " + 
                    " \"description\": \"_EM_116_XYZ_\", " + 
                    " \"externalContributorsCount\": 348, " + 
                    " \"forksCount\": 286, " + 
                    " \"languageList\": [ " + 
                    " \"\", " + 
                    " \"_EM_117_XYZ_\" " + 
                    " ], " + 
                    " \"lastPushed\": \"_EM_118_XYZ_\", " + 
                    " \"maintainers\": [ " + 
                    " \"UL8GNxUHpxX1OB\" " + 
                    " ], " + 
                    " \"organizationName\": \"_EM_119_XYZ_\", " + 
                    " \"snapshotDate\": \"1908-13-17T25:00:05Z\", " + 
                    " \"title\": \"nvl\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?access_token=3_oX6HX694q")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_32_postOnScoring_projectReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 49L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "705")
                .d("GIT_HUB_PROJECT_ID", "878")
                .d("LAST_PUSHED", "\"5fCj3dbrkVd\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"gDdIrzI8impG1am\"")
                .d("PRIMARY_LANGUAGE", "\"\"")
                .d("SCORE", "21")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "778")
                .d("URL", "\"tIv2yLTXiiXfhN\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"mHQIw9Ed8r5o8BRy\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "468")
            .and().insertInto("STATISTICS", 50L)
                .d("ID", "549")
                .d("SNAPSHOT_DATE", "\"2000-05-25 11:59:25\"")
                .d("ALL_CONTRIBUTORS_COUNT", "388")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "754")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "634")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "441387573")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "gDdIrzI8impG1am")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "end_date=gDdIrzI8impG1am&" + 
                    "start_date=gDdIrzI8impG1am")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    @Test(timeout = 60000)
    public void test_33_postOnScoring_projectReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 22L)
                .d("COMMITS_COUNT", "329")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"2ieHNNd9oGYQ\"")
                .d("FORKS_COUNT", "118")
                .d("GIT_HUB_PROJECT_ID", "389")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"ZJ\"")
                .d("PRIMARY_LANGUAGE", "\"Ffbu6f4tFImyT6\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1990-01-13 20:15:24\"")
                .d("STARS_COUNT", "294")
                .d("URL", "NULL")
                .d("TITLE", "\"yidY1_ZUVK2tZ\"")
                .d("IMAGE", "\"U\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 23L)
                .d("ID", "415")
                .d("SNAPSHOT_DATE", "\"2069-09-06 09:54:05\"")
                .d("ALL_CONTRIBUTORS_COUNT", "740")
                .d("ALL_FORKS_COUNT", "758")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "15")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "843")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "719")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_186_XYZ_\" ")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    @Test(timeout = 60000)
    public void test_34_getOnDeleteReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "hEv2cKwuJ8y0D")
                .get(baseUrlOfSut + "/delete?" + 
                    "access_token=FCH57FhXEW86GvE&" + 
                    "q=PIkMCE&" + 
                    "offset=F1&" + 
                    "organizations=T&" + 
                    "limit=LYoUAd46l")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_35_getOnDeleteReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/delete?" + 
                    "access_token=_EM_718_XYZ_&" + 
                    "organizations=3c")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_36_getOnContributorsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 18L)
                .d("ID", "220")
                .d("ORGANIZATION_ID", "294")
                .d("SNAPSHOT_DATE", "\"2010-07-19 01:35:55\"")
                .d("NAME", "\"NTexyTZ\"")
                .d("ORGANIZATION_NAME", "\"_EM_158_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "584")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "196")
                .d("URL", "\"SESSION_STATE\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=294&" + 
                    "start_date=_EM_160_XYZ_&" + 
                    "end_date=_EM_161_XYZ_&" + 
                    "access_token=n4C8C_Ifi8_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_37_getOnLanguagesReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 44L)
                .d("ID", "337")
                .d("SNAPSHOT_DATE", "\"1937-06-24 20:10:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "0")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "107")
                .d("ALL_STARS_COUNT", "824")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"496\"")
                .d("PRIVATE_PROJECT_COUNT", "307")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "473")
                .d("TAGS_COUNT", "101")
                .d("TEAMS_COUNT", "0")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "558")
            .and().insertInto("CONTRIBUTOR", 45L)
                .d("ID", "617")
                .d("ORGANIZATION_ID", "496")
                .d("SNAPSHOT_DATE", "\"1964-01-02 20:41:13\"")
                .d("NAME", "\"_EM_273_XXX[\"")
                .d("ORGANIZATION_NAME", "\"_EM_274_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "514")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "1958")
                .d("PERSONAL_PROJECTS_COUNT", "240")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=496&" + 
                    "offset=-3282&" + 
                    "q=_EM_585_XYZ_&" + 
                    "access_token=yYoRP")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_38_getOnContributorsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 32L)
                .d("ID", "611")
                .d("ORGANIZATION_ID", "574")
                .d("SNAPSHOT_DATE", "\"2083-05-26 00:48:29\"")
                .d("NAME", "\"_EM_215_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "574")
                .header("X-Organizations", "_EM_217_XYZ_")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "access_token=Bb&" + 
                    "offset=wfTAF2k6UyJCn")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_39_getOnLanguagesReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "04F_iLP")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "start_date=TVD5GJx&" + 
                    "access_token=IzKFtNqX&" + 
                    "q=_EM_776_XYZ_&" + 
                    "offset=ipkj&" + 
                    "limit=_fbv&" + 
                    "sortBy=wVYj")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_40_getOnContributorsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "bp23D")
                .header("X-Organizations", "vVfUyuPAwI")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=004PEGakR&" + 
                    "start_date=lLFJC&" + 
                    "access_token=w&" + 
                    "offset=3C407a2J&" + 
                    "limit=LO7zAZ6fl60A8b")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_41_getOnContributorsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 30L)
                .d("ID", "392")
                .d("ORGANIZATION_ID", "768")
                .d("SNAPSHOT_DATE", "\"2019-07-24 13:26:08\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "44")
                .d("URL", "\"_EM_209_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "_EM_211_XYZ_")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "start_date=EsmnswUGx5ANApi&" + 
                    "end_date=9z4n_8FO2iXuYJj&" + 
                    "access_token=k4SBSo")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_42_getOnExportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "")
                .get(baseUrlOfSut + "/export?" + 
                    "access_token=a&" + 
                    "end_date=wK&" + 
                    "organizations=OTAp02kRg6vZ4Xse&" + 
                    "limit=gxbeVqJjuzUHHm3")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_43_postOnScoring_projectReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"sx4zBvtr\" ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=_sIBc51tCC2&" + 
                    "end_date=oIy4K4&" + 
                    "q=EVIn97")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_44_getOnLanguagesReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_18_XYZ_&" + 
                    "limit=27&" + 
                    "offset=775&" + 
                    "q=9rTDHgNt1Wp&" + 
                    "access_token=Jps76OFk")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_45_getOnLanguagesReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 44L)
                .d("ID", "337")
                .d("SNAPSHOT_DATE", "\"1937-06-24 20:10:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "0")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "107")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"496\"")
                .d("PRIVATE_PROJECT_COUNT", "307")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "473")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "511")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "558")
            .and().insertInto("CONTRIBUTOR", 45L)
                .d("ID", "617")
                .d("ORGANIZATION_ID", "496")
                .d("SNAPSHOT_DATE", "\"1964-01-02 20:41:13\"")
                .d("NAME", "\"_EM_273_XXX[\"")
                .d("ORGANIZATION_NAME", "\"_EM_274_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "514")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "934")
                .d("PERSONAL_PROJECTS_COUNT", "240")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=496&" + 
                    "limit=-7552&" + 
                    "offset=814&" + 
                    "q=qjzdfX&" + 
                    "access_token=yYmRP")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_46_postOnScoring_projectReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "N91in3v_K0sgYB")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=Roa7KdPs2u&" + 
                    "end_date=LCDk&" + 
                    "limit=8HuxkhCgSs1t3")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_47_getOnExportReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 75L)
                .d("ID", "663")
                .d("SNAPSHOT_DATE", "\"2041-07-21 19:37:45\"")
                .d("ALL_CONTRIBUTORS_COUNT", "275")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "441")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"oB6zOee9rA\"")
                .d("PRIVATE_PROJECT_COUNT", "307")
                .d("PROGRAM_LANGUAGES_COUNT", "177")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "442")
                .d("TEAMS_COUNT", "772")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "3")
            .and().insertInto("PROJECT", 76L)
                .d("COMMITS_COUNT", "854")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"JCrvJY0jMkDh8Cu\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "238")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"_EM_550_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"oB6zOee9rA\"")
                .d("PRIMARY_LANGUAGE", "\"s\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"xevpXXSqsRUuss\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "access_token=kzjxXk3ogk4&" + 
                    "end_date=wAQGULbe&" + 
                    "q=IZnsZIpyxt&" + 
                    "offset=mL5Dw6&" + 
                    "organizations=ouSzuIGRd2FLFs&" + 
                    "limit=MaGxfooPwxLWs15&" + 
                    "sortBy=wcll&" + 
                    "start_date=wrNm1lXj4Hqq")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_48_postOnScoring_projectReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 22L)
                .d("COMMITS_COUNT", "329")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"2ieHNNd9oGYQ\"")
                .d("FORKS_COUNT", "118")
                .d("GIT_HUB_PROJECT_ID", "389")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"ZJ\"")
                .d("PRIMARY_LANGUAGE", "\"Ffbu6f4tFImyT6\"")
                .d("SCORE", "795")
                .d("SNAPSHOT_DATE", "\"1990-01-13 20:15:24\"")
                .d("STARS_COUNT", "294")
                .d("URL", "NULL")
                .d("TITLE", "\"yidY1_ZUVK2tZ\"")
                .d("IMAGE", "\"U\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 23L)
                .d("ID", "415")
                .d("SNAPSHOT_DATE", "\"2069-09-06 09:54:05\"")
                .d("ALL_CONTRIBUTORS_COUNT", "740")
                .d("ALL_FORKS_COUNT", "758")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "15")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "843")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "975")
                .d("TEAMS_COUNT", "309")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_186_XYZ_\" ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=ZJ&" + 
                    "end_date=FWfveACNO13&" + 
                    "organizations=lbJR&" + 
                    "start_date=J5_rSXt0aA638RSU&" + 
                    "q=6by8LWtob2_WL&" + 
                    "offset=NcHlgXjr3RieE&" + 
                    "limit=cj&" + 
                    "sortBy=hu6mfF3s3x")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_49_getOnInitReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "N7HhkydS_rw7")
                .get(baseUrlOfSut + "/init?" + 
                    "access_token=SDICiF&" + 
                    "end_date=Zkvrl&" + 
                    "limit=kxKVr9fypGgh0zI&" + 
                    "language=WN_28JTtZo&" + 
                    "start_date=4nO1Q")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_50_getOnStatisticsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 30L)
                .d("ID", "392")
                .d("ORGANIZATION_ID", "768")
                .d("SNAPSHOT_DATE", "\"2019-07-24 13:26:08\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "44")
                .d("URL", "\"_EM_209_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=cLqH&" + 
                    "access_token=B1Ct&" + 
                    "sortBy=Ndu")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_51_getOnInitReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "NLWgSoaHQjJ{")
                .get(baseUrlOfSut + "/init?" + 
                    "access_token=yQ0BrxueM5EVmzCg&" + 
                    "end_date=JNlc_Wc2g0WLk&" + 
                    "q=J1ustb5s&" + 
                    "offset=mauIHB8im0CNw&" + 
                    "organizations=iug45JYiu&" + 
                    "limit=Ce1m7&" + 
                    "sortBy=DIBI4zbs4dNK4eZ&" + 
                    "language=78ojKrIoZES5&" + 
                    "start_date=iTxCnd")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_52_getOnStatisticsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "k9")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=KVveg2G&" + 
                    "start_date=wBOm0vinat3Hk4Et&" + 
                    "end_date=favMJpeHPzQ2KiX&" + 
                    "access_token=R58&" + 
                    "q=ycYrmbhQJD22HnJ&" + 
                    "sortBy=eGRnBUtZ_DXm")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_53_getOnStatisticsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 44L)
                .d("ID", "337")
                .d("SNAPSHOT_DATE", "\"1937-06-24 20:10:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "654")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "107")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"596\"")
                .d("PRIVATE_PROJECT_COUNT", "307")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "473")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "1049087")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "558")
            .and().insertInto("CONTRIBUTOR", 45L)
                .d("ID", "617")
                .d("ORGANIZATION_ID", "596")
                .d("SNAPSHOT_DATE", "\"1964-01-02 20:41:13\"")
                .d("NAME", "\"_EM_273_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"1938-10-06 12:13:47\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "934")
                .d("PERSONAL_PROJECTS_COUNT", "-3600")
                .d("URL", "\"_EM_275_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "lny0keN7bAMUk")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=P&" + 
                    "start_date=Ni1ykRb_fMbINl&" + 
                    "access_token=jgb&" + 
                    "offset=HFLy&" + 
                    "limit=")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_54_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "3PGwFae1e")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=o6&" + 
                    "start_date=&" + 
                    "access_token=_EM_566_XYZ_&" + 
                    "q=OMQ0OSTy&" + 
                    "offset=iL1QUfBCHmFv&" + 
                    "limit=gUJ3q16cmZlsLaC&" + 
                    "sortBy=_EM_567_XYZ_&" + 
                    "language=6rPMbGnbsi")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_55_getOnContributorsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "aYzZb")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=vqGNpGiHihvtUT&" + 
                    "offset=-939576265&" + 
                    "start_date=gdNu2jMwM&" + 
                    "end_date=_Vlm2T&" + 
                    "access_token=bYk25LWlhu72vNI")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_56_getOnContributorsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 61L)
                .d("ID", "814")
                .d("ORGANIZATION_ID", "-9053609443416025088")
                .d("SNAPSHOT_DATE", "\"2025-07-22 08:25:55\"")
                .d("NAME", "\"cdOlj\"")
                .d("ORGANIZATION_NAME", "\"GGPfS2Ln2Z6Sj9lZ\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "238")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "969")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "-9053609443416025088")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=&" + 
                    "limit=927&" + 
                    "start_date=_EM_460_XYZ_&" + 
                    "sortBy=LDCJEcDvNypy&" + 
                    "access_token=iK13kfy_6zEdP")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_57_getOnContributorsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_333_XYZ_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=9eD0&" + 
                    "limit=552&" + 
                    "offset=644&" + 
                    "start_date=OdsNJa1tU8EL&" + 
                    "end_date=&" + 
                    "sortBy=dca&" + 
                    "q=UU8hAUUjz%5CuP&" + 
                    "access_token=txXU9Cz")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_58_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 16L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "909")
                .d("DESCRIPTION", "\"_EM_137_XYZ_\"")
                .d("FORKS_COUNT", "6")
                .d("GIT_HUB_PROJECT_ID", "982")
                .d("LAST_PUSHED", "\"_EM_138_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"bLWYZc8yH\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"2022-07-13 20:26:13\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "NULL")
                .d("TITLE", "\"_EM_139_XYZ_\"")
                .d("IMAGE", "\"txYzb9\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "641")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=694&" + 
                    "start_date=1909-11-01T25%3A07%3A26-19%3A09&" + 
                    "end_date=1957-01-10T00%3A-1%3A59Z&" + 
                    "q=pUyg35xo&" + 
                    "language=bLWYZc8yH&" + 
                    "access_token=LCYdaeAz")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_59_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 21L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "520")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"q5\"")
                .d("PRIMARY_LANGUAGE", "\"Fytt\"")
                .d("SCORE", "410")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"jeFZ\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=q5&" + 
                    "start_date=1987-08-27T14%3A09%3A45-04%3A23&" + 
                    "end_date=2084-06-25T15%3A23%3A06.696-00%3A23&" + 
                    "sortBy=XOzT&" + 
                    "q=L2kj06hqTX&" + 
                    "access_token=eaqU0WwLPbDy3")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }


}
