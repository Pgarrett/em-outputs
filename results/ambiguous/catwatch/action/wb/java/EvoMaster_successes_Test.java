import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-07T00:41:25.910-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 18 tests
 * <br>
*  Covered targets: 189
 * <br>
*  Used time: 0h 14m 21s
 * <br>
*  Needed budget for current results: 100%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.org.zalando.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CONTRIBUTOR","LANGUAGE_LIST","MAINTAINERS","PROJECT","STATISTICS"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    @Test(timeout = 60000)
    public void test_1_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_5_XYZ_")
                .get(baseUrlOfSut + "/statistics/languages?EMextraParam123=_EM_4_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_2_getOnStatisticsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 22L)
                .d("COMMITS_COUNT", "329")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"2ieHNNd9oGYQ\"")
                .d("FORKS_COUNT", "118")
                .d("GIT_HUB_PROJECT_ID", "389")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"ZJ\"")
                .d("PRIMARY_LANGUAGE", "\"Ffbu6f4tFImyT6\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1990-01-13 20:15:24\"")
                .d("STARS_COUNT", "294")
                .d("URL", "NULL")
                .d("TITLE", "\"yidY1_ZUVK2tZ\"")
                .d("IMAGE", "\"U\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 23L)
                .d("ID", "415")
                .d("SNAPSHOT_DATE", "\"2069-09-06 09:54:05\"")
                .d("ALL_CONTRIBUTORS_COUNT", "740")
                .d("ALL_FORKS_COUNT", "758")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "15")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "843")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "719")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "start_date=1998-11-02T22%3A43%3A25Z&" + 
                    "end_date=2099-07-23T04%3A42%3A32.812Z")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_3_getOnLanguagesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 73L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "972")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "850")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"hQjFkBQAVuAqqpO\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"KpZbWGSX\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 74L)
                .d("ID", "660")
                .d("SNAPSHOT_DATE", "\"1969-08-09 13:14:19\"")
                .d("ALL_CONTRIBUTORS_COUNT", "654")
                .d("ALL_FORKS_COUNT", "182")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "879")
                .d("ORGANIZATION_NAME", "\"QSxoLP\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "337")
                .d("PUBLIC_PROJECT_COUNT", "827")
                .d("TAGS_COUNT", "782")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "558")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_cBYGu")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=QSxoLP&" + 
                    "start_date=2008-09-24T02%3A16%3A52.677Z")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_4_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_20_XYZ_")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_18_XYZ_&" + 
                    "offset=807&" + 
                    "q=9rTDHgNt1Wp&" + 
                    "EMextraParam123=_EM_19_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_5_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "Y")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=v_2Km&" + 
                    "limit=981")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_6_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=5Fe45v0&" + 
                    "limit=722&" + 
                    "offset=105&" + 
                    "q=QxG_XUHniX&" + 
                    "EMextraParam123=_EM_19_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_7_getOnLanguagesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 56L)
                .d("ID", "333")
                .d("SNAPSHOT_DATE", "\"1960-08-18 00:57:38\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "182")
                .d("ALL_SIZE_COUNT", "107")
                .d("ALL_STARS_COUNT", "407")
                .d("MEMBERS_COUNT", "557066510")
                .d("ORGANIZATION_NAME", "\"31-\"")
                .d("PRIVATE_PROJECT_COUNT", "808")
                .d("PROGRAM_LANGUAGES_COUNT", "679")
                .d("PUBLIC_PROJECT_COUNT", "-178")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "364")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "993")
            .and().insertInto("CONTRIBUTOR", 57L)
                .d("ID", "901")
                .d("ORGANIZATION_ID", "411")
                .d("SNAPSHOT_DATE", "\"2071-12-25 09:00:56\"")
                .d("NAME", "\"r\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "632")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "422")
                .d("PERSONAL_PROJECTS_COUNT", "42")
                .d("URL", "\"78uYAZpROIbOdI8\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "foo")
                .header("X-Organizations", "foo")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=&" + 
                    "limit=301&" + 
                    "offset=305")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_8_getOnExportReturnsObject() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "H8Fb6gq8TJQcqAL0")
                .get(baseUrlOfSut + "/export?" + 
                    "EMextraParam123=_EM_16_XYZ_&" + 
                    "end_date=RSB9buNsLmbz&" + 
                    "organizations=V&" + 
                    "start_date=hVCgl7gyc18qNXA")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_9_getOnExportReturnsObject() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "organizations=&" + 
                    "sortBy=&" + 
                    "start_date=u")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_10_getOnContributorsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 67L)
                .d("ID", "317")
                .d("ORGANIZATION_ID", "292")
                .d("SNAPSHOT_DATE", "\"1907-08-30 17:26:10\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "160")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "322")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "992")
                .d("URL", "NULL")
            .and().insertInto("STATISTICS", 68L)
                .d("ID", "404")
                .d("SNAPSHOT_DATE", "\"1997-09-07 12:09:07\"")
                .d("ALL_CONTRIBUTORS_COUNT", "129")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "107")
                .d("ALL_STARS_COUNT", "21")
                .d("MEMBERS_COUNT", "465")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "632")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "969")
            .and().insertInto("PROJECT", 69L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "173")
                .d("DESCRIPTION", "\"5CC93Rr54dK\"")
                .d("FORKS_COUNT", "755")
                .d("GIT_HUB_PROJECT_ID", "734")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"Bdp4M_252VdZyNqf\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "54")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"O\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "292")
                .get(baseUrlOfSut + "/contributors?organizations=292")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_11_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 73L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "972")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "850")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"hQjFkBQAVuAqqpO\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"KpZbWGSX\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 74L)
                .d("ID", "660")
                .d("SNAPSHOT_DATE", "\"1969-08-09 13:14:19\"")
                .d("ALL_CONTRIBUTORS_COUNT", "654")
                .d("ALL_FORKS_COUNT", "182")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "879")
                .d("ORGANIZATION_NAME", "\"QSxoLP\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "337")
                .d("PUBLIC_PROJECT_COUNT", "827")
                .d("TAGS_COUNT", "782")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "558")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=QSxoLP&" + 
                    "limit=531&" + 
                    "offset=616&" + 
                    "q=Mp8PNI9wMkFXc7AK")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_12_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 46L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "524")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "169")
                .d("LAST_PUSHED", "\"AML023kq7cJ\"")
                .d("NAME", "\"RE2V_KuRO036li7x\"")
                .d("ORGANIZATION_NAME", "\"609\"")
                .d("PRIMARY_LANGUAGE", "\"_EM_323_XYZ_\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1932-02-09 03:37:08\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"VSh_Dbzp4rYQgN9\"")
                .d("TITLE", "\"y2EqXwKs1PXJv\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "508")
            .and().insertInto("STATISTICS", 47L)
                .d("ID", "403")
                .d("SNAPSHOT_DATE", "\"1935-04-01 01:04:13\"")
                .d("ALL_CONTRIBUTORS_COUNT", "542")
                .d("ALL_FORKS_COUNT", "807")
                .d("ALL_SIZE_COUNT", "297")
                .d("ALL_STARS_COUNT", "705")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "123")
                .d("PROGRAM_LANGUAGES_COUNT", "491")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "509")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "869")
            .and().insertInto("CONTRIBUTOR", 48L)
                .d("ID", "788")
                .d("ORGANIZATION_ID", "609")
                .d("SNAPSHOT_DATE", "\"1914-02-02 10:29:04\"")
                .d("NAME", "\"TGd56YulL\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "850")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"_EM_325_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "UmibJKo32")
                .get(baseUrlOfSut + "/projects?" + 
                    "end_date=1931-04-29T07%3A05%3A28Z&" + 
                    "sortBy=688dPeIkjYlWD&" + 
                    "language=Ag")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_13_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "Kmg4w4j")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=539&" + 
                    "start_date=2028-09-16T12%3A50%3A18.903Z&" + 
                    "sortBy=DCRxXj0g1&" + 
                    "q=cAf")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_14_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 67L)
                .d("ID", "317")
                .d("ORGANIZATION_ID", "292")
                .d("SNAPSHOT_DATE", "\"1907-08-30 17:26:10\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "160")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "322")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "992")
                .d("URL", "NULL")
            .and().insertInto("STATISTICS", 68L)
                .d("ID", "404")
                .d("SNAPSHOT_DATE", "\"1997-09-07 12:09:07\"")
                .d("ALL_CONTRIBUTORS_COUNT", "129")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "107")
                .d("ALL_STARS_COUNT", "21")
                .d("MEMBERS_COUNT", "465")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "632")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "969")
            .and().insertInto("PROJECT", 69L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "173")
                .d("DESCRIPTION", "\"5CC93Rr54dK\"")
                .d("FORKS_COUNT", "755")
                .d("GIT_HUB_PROJECT_ID", "734")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"Bdp4M_252VdZyNqf\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "54")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"O\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "292")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=294&" + 
                    "start_date=1940-12-08T02%3A18%3A26.500%2B16%3A35")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_15_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "Kmg4w4j")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=R2o0_Rkqb4ia&" + 
                    "limit=539&" + 
                    "start_date=2028-09-16T12%3A50%3A18.903Z&" + 
                    "q=cAf")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_16_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 22L)
                .d("COMMITS_COUNT", "329")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"2ieHNNd9oGYQ\"")
                .d("FORKS_COUNT", "118")
                .d("GIT_HUB_PROJECT_ID", "389")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"ZJ\"")
                .d("PRIMARY_LANGUAGE", "\"Ffbu6f4tFImyT6\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1990-01-13 20:15:24\"")
                .d("STARS_COUNT", "294")
                .d("URL", "NULL")
                .d("TITLE", "\"yidY1_ZUVK2tZ\"")
                .d("IMAGE", "\"U\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 23L)
                .d("ID", "415")
                .d("SNAPSHOT_DATE", "\"2069-09-06 09:54:05\"")
                .d("ALL_CONTRIBUTORS_COUNT", "740")
                .d("ALL_FORKS_COUNT", "758")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "15")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "843")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "719")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "ZJ")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=ZJ&" + 
                    "limit=3&" + 
                    "start_date=1998-11-02T22%3A43%3A25Z&" + 
                    "sortBy=_EM_185_XYZ_&" + 
                    "q=1k3Ge2")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_17_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "86iBq1T256TTP3Et")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=AusWm_hL4B&" + 
                    "limit=976&" + 
                    "start_date=2013-11-28T00%3A23%3A47.870Z&" + 
                    "sortBy=&" + 
                    "q=PeJmVQRhhx3xxYg&" + 
                    "language=Ek")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }


}
