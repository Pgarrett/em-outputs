import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-07T09:31:08.798-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 116 tests
 * <br>
*  Covered targets: 321
 * <br>
*  Used time: 0h 10m 43s
 * <br>
*  Needed budget for current results: 95%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.org.cbioportal.session_service.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_deleteOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/L1YdLnZga/group/8hLkg5T;cPO%5Eyx")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/L1YdLnZga/group/8hLkg5T;cPO%5Eyx"));
    }
    
    
    @Test(timeout = 60000)
    public void test_1_deleteOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/=;YnLnZga/main_session/_EM_4459_XYZ_")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/=;YnLnZga/main_session/_EM_4459_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_2_deleteOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/9kaTKdGKV_EAaBk/comparison_session/pNTV8G;jMW")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/9kaTKdGKV_EAaBk/comparison_session/pNTV8G;jMW"));
    }
    
    
    @Test(timeout = 60000)
    public void test_3_deleteOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. framework_code DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/L;YdQnZga/settings/_EM_4476_XYZ_")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/L;YdQnZga/settings/_EM_4476_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_4_postOnFetchShowsFaults_100_200UsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db4d369bd54db764c11480b9\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_4059_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"comparison_session\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"ad3ccffcee23d1f2f959e9c9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvT\", \"checksum\":\"mUgU7UUKUm6G\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"N^\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"33da6b80b7fd635ba8f632bb\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uN3ZE7qtY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9tMWPPui8tE33Ee\", \"checksum\":\"gTjP27U@\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"7edfbebafc1e6d80f3da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd53\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"GpUMpJ6Jv4W5t\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fU8vUU]NUXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac689afcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"zMC\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"42\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYDgz\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Cfa78fz5V0OY6w\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef1aaf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc14ccea5687e59b975cabd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Dihnzbexb1\", \"checksum\":\"UFMUUoUUS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"settings\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"kCMSCenbADBtWLYeq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"e319a86fc89c56faf4bcdd9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code POST:/api/sessions/{source}/{type}/query/fetch
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"HhDqqnqwT\" ")
                .post(baseUrlOfSut + "/api/sessions/G;US7mE/main_session/query/fetch")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/G;US7mE/main_session/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_5_putOnSessionShowsFaults_100_200UsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"itk9ql\", \"checksum\":\"qd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"F_QMGK7TVdx6zI3\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d5ff1da92be60bd7f735b104\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"Z\", \"checksum\":\"P8y6Kl_s\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L_3ZJO9DvWx\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"65fe5ccd0323e65c2f06bf1a\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1019_XYZ_")
                .contentType("application/json")
                .body(" \"_EM_1018_XYZ_\" ")
                .put(baseUrlOfSut + "/api/sessions/;/genomic_chart/_EM_1017_XYZ_")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/;/genomic_chart/_EM_1017_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_6_postOnSessionShowsFaults_100_200UsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "virtual_study")
                .d("{\"id\":\"BQGj\", \"checksum\":\"kKO\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"0D<1LOW4kFU9JLFy\", \"type\":\"settings\", \"_id\":{\"$oid\":\"df8adc8b5b6a6defd7a9ddcd\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"AN\", \"checksum\":\"Ds_SXtT6q0H0HLUN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_852_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"95301a7ffef2b9bddea82bed\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"EVOMASTER\" ")
                .post(baseUrlOfSut + "/api/sessions/EVOMASTER/comparison_session?EMextraParam123=42")
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/EVOMASTER/comparison_session"));
    }
    
    
    @Test(timeout = 60000)
    public void test_7_getOnSessionShowsFaults_100_200UsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"5e9721fb778f6fc44557c8c0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fedf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUiU7UUKUmU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"settings\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"EM_tainted_map\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"6ec0bfbaed1e6d90e5da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"v8NBIx\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"]EMU17U0_XYZU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"N7\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"a26bcb9ccb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoEc\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b75\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_4027_XYZ_\", \"checksum\":\"Ac8RvUTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"0dd04ddda6677e59ba65aacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDL\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYUUU\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"956cfdbc8ac1aeaef4e154e3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4r9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"ieCOL5kk_3cF97fE7\", \"checksum\":\"KIlQ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"40rSR\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"c8f480dce2a89d67144d6da6\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. framework_code GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_254_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/comparison_session")
                .then()
                .statusCode(500)// framework_code
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22EM_tainted_map%22:%22_EM_254_XYZ_%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D/comparison_session"));
    }
    
    
    @Test(timeout = 60000)
    public void test_8_postOnSessionShowsFaults_100_200UsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"L1AC9Q\", \"checksum\":\"9lX97\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"6hx1WBcVTXd\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"8e35868903cba2d8d44df4a7\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"WuUpdmyp05i\", \"checksum\":\"ojqoWNdLJwMN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"8MvLaJCBGT7RHwAc\", \"type\":\"settings\", \"_id\":{\"$oid\":\"4c2bdc2f4b93766fb1393c8f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"9NBa7g8\", \"checksum\":\"OugXLAbfxMU9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"1E3JB2t_m\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"59143377d246cbfff826c797\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_367_XYZ_\", \"checksum\":\"_EM_467_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"En3yAIqyFNsh0r\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"f0e3406fdbb6a8491fdb2d8f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"UUM_U6U_XYZU\", \"checksum\":\"A8u4\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_369_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"9dade9c77d3edf1a98cfb9a9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"1yB\", \"checksum\":\"_EM_370_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"eLaMZz\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f62c554642a5f4caa1e2e52e\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"FM2JOZiPgmnPDY3\", \"checksum\":\"_EM_371_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_468_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"ebfdf74e6db4dc8aa9b375e0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"<H5oobv4AK0WWW09\", \"checksum\":\"\u0086meI5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Tcw\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"dd1dbd2f7cb041df6dbd4ac7\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"UU<WUUTkpUfUeUU\", \"checksum\":\"YOQO1Dk\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"v7nMZZLKRQ\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"c366813bbfd8bb4d8dcded65\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"CUHbcc\", \"checksum\":\"OUvUK4\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_469_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4598aabdb21775f32a7019c\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"awAVb24gwyip_1\", \"checksum\":\"SZbeTWruA\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"rqFRx17Zai9cMAX\", \"type\":\"group\", \"_id\":{\"$oid\":\"948cad4938efb6aeb0be6c2a\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"Bc3RZ\", \"checksum\":\"H\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SfwWsUvD6lyQxzg\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"67b6fa49e3f169a79dcffb0b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_470_XYZ_\", \"checksum\":\"8Y\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"rL1VLC6Smrh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"84b2ceb1e1f8ba6f395eb2ec\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_471_XYZ_\", \"checksum\":\"_EM_472_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_473_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"4e2b4b94d67e1febde9851d3\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"cM3Hu2_PalSWTFr\", \"checksum\":\"aLzzze3WAHLWw1l\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Fdo\", \"type\":\"settings\", \"_id\":{\"$oid\":\"b378f2b6edf1aa3a51d92c00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_RaDCWTz\", \"checksum\":\"qLHydpkS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"61OYkPVly\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"6f0b40010b3eab0fd807b7c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/Session_74_setData POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" NaN ")
                .post(baseUrlOfSut + "/api/sessions/group/custom_gene_list?EMextraParam123=42")
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/Session_74_setData
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/group/custom_gene_list"));
    }
    
    
    @Test(timeout = 60000)
    public void test_9_getOnQueryShowsFaults_100_200UsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"L1AC9\", \"checksum\":\"_EM_1068_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"6hx1WBcVTXd\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"8e35868903cba2d8d44df5a7\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"WuUpdmyp05i\", \"checksum\":\"ojqoWNdLJwMN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"8MvLaJCBGT7RHwAc\", \"type\":\"settings\", \"_id\":{\"$oid\":\"4c2bdc2f4b93766fb1393c8f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"9>Ba7c8\", \"checksum\":\"_EM_1077_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"1E3JB*t_m\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"5a153366c155bbfff726a786\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"7QX2Rh2pgxc\", \"checksum\":\"lPL7I\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"En3yAIqyFNsh0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f0e3407fdbb6a8491fdb2d8f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"mEZ9nF\", \"checksum\":\"lppV8KeSdPj\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1078_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"9dade9c87e3edf1a98cfb9a9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"KGZQB2j4mOCbDEg\", \"checksum\":\"qpd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1079_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"f62c644642a5f4caa1e2e53e\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"FI2JOZiPgmnPDY3\", \"checksum\":\"qH2uZp5XB\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"zsP4G_ut77wiSJu\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"fbfc074f5db4dd8aa9c475ef\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"UUUUobzUUU0WUWU:\", \"checksum\":\"vmeI\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_278_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"dc2dae2f6cb041ee7dbd49d7\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"fieMcXyDE4Wd00F\", \"checksum\":\"CIdZdIlrC5pOo\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Wu\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"dad7bb99ca2bd2abfeedfddb\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"PBwJE\", \"checksum\":\"kOIDZ5s\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1070_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"6902dae80d5df1ede0fc1632\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"\", \"checksum\":\"VKCuHErWi\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"36OtFelWRnUNH9\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ad7dd3ead6b0ba0b2bd84ca6\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"7p_j\", \"checksum\":\"mTiS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"80b754e2989480a84fe03b28\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/cbioportal/session_service/domain/internal/SessionRepositoryImpl_104_findBySourceAndTypeAndQuery GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/MjEQZ63F/main_session/query?" + 
                    "field=_%24RESTRICTED_TYPES&" + 
                    "value=_EM_97_XYZ_")
                .then()
                .statusCode(500)// org/cbioportal/session_service/domain/internal/SessionRepositoryImpl_104_findBySourceAndTypeAndQuery
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/MjEQZ63F/main_session/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_10_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_43_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/xd/comparison_session?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_11_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/aWJONemUVwVZxjYb/custom_gene_list")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_12_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8_XYZ_")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/zIY1/custom_data/query/fetch")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_13_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8_XYZ_")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/_EM_1340_XYZ_/comparison_session/query/fetch?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_14_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"L1AC9Q\", \"checksum\":\"9lX97\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"6hx1WBcVTXd\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"8e35868903cba2d8d44df4a7\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"WuUpdmyp05i\", \"checksum\":\"ojqoWNdLJwMN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"8MvLaJCBGT7RHwAc\", \"type\":\"settings\", \"_id\":{\"$oid\":\"4c2bdc2f4b93766fb1393c8f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"9NBa7g8\", \"checksum\":\"OugXLAbfxMU9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"1E3JB2t_m\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"59143377d246cbfff826c797\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_367_XYZ_\", \"checksum\":\"_EM_467_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"En3yAIqyFNsh0r\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"f0e3406fdbb6a8491fdb2d8f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"UUM_U6U_XYZU\", \"checksum\":\"A8u4\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_369_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"9dade9c77d3edf1a98cfb9a9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"1yB\", \"checksum\":\"_EM_370_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"eLaMZz\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f62c554642a5f4caa1e2e52e\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"FM2JOZiPgmnPDY3\", \"checksum\":\"_EM_371_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_468_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"ebfdf74e6db4dc8aa9b375e0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"<H5oobv4AK0WWW09\", \"checksum\":\"\u0086meI5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Tcw\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"dd1dbd2f7cb041df6dbd4ac7\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"UU<WUUTkpUfUeUU\", \"checksum\":\"YOQO1Dk\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"v7nMZZLKRQ\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"c366813bbfd8bb4d8dcded65\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"CUHbcc\", \"checksum\":\"OUvUK4\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_469_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4598aabdb21775f32a7019c\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"awAVb24gwyip_1\", \"checksum\":\"SZbeTWruA\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"rqFRx17Zai9cMAX\", \"type\":\"group\", \"_id\":{\"$oid\":\"948cad4938efb6aeb0be6c2a\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"Bc3RZ\", \"checksum\":\"H\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SfwWsUvD6lyQxzg\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"67b6fa49e3f169a79dcffb0b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_470_XYZ_\", \"checksum\":\"8Y\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"rL1VLC6Smrh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"84b2ceb1e1f8ba6f395eb2ec\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_471_XYZ_\", \"checksum\":\"_EM_472_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_473_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"4e2b4b94d67e1febde9851d3\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"cM3Hu2_PalSWTFr\", \"checksum\":\"aLzzze3WAHLWw1l\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Fdo\", \"type\":\"settings\", \"_id\":{\"$oid\":\"b378f2b6edf1aa3a51d92c00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_RaDCWTz\", \"checksum\":\"qLHydpkS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"61OYkPVly\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"6f0b40010b3eab0fd807b7c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/group/group?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_15_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F0\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3984_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"db3c279bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"Ep2rqOgHwH\", \"checksum\":\"_EM_3980_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3981_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6G3\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"43db8c80c8ec745ba8f6529b\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uUUZE;UtU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93ySX\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c687dfeee20be5b2ae8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"gTjP27U@\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_L\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd53\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"GpeNpJ6Jv3W5x\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"czzgBcSZZ\", \"checksum\":\"_EM_3985_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3986_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3987_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"pKUSYDUz\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTng\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc15ccda5687e59b885cabe\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzbexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYeq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3acdc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"e6d3a744d902abd6bd1effe8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/gnn1gIdZmbDpMSRPx/settings")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_16_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_1788_XYZ_\", \"checksum\":\"UGUZoRRVXUUSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1789_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db2c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"UEM_632UUUZU\", \"checksum\":\"oiubUGleUVpUUUUh\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhF\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"ad4cc0fddf23e212f969eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"Fq~\", \"checksum\":\"eLgO7M;Kmm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"V\", \"type\":\"settings\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1794_XYZ_\", \"checksum\":\"UR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1795_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877397d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6MfD\", \"checksum\":\"j5HXA2cam\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"QMjsLI5\", \"type\":\"group\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"NrvcvfmMEf\", \"checksum\":\"_EM_1791_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9746c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"Bv\", \"checksum\":\"2fVK\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"9\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a27bbc9cdb56cc25cd866d24\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1796_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d10e1baad6899fdb7b9af99d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_l43sVkNw1CjVeXs\", \"checksum\":\"bQU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoE\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f6b413281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1797_XYZ_\", \"checksum\":\"_EM_1792_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"e\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8d4f0a2cbfe06a246ef15a10\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1793_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"3eCiIQjiDh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7f6021dafcaff1abf4a741ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"uQVsY_\", \"checksum\":\"9c8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677d59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lUpL_Eoo\\\\\", \"checksum\":\"5T\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Q\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"307ab69f9874028a50a05475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5N\", \"checksum\":\"_DM_1099_XUUW\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"55915706ef9cf3a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"UUUnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"845c0ebb8ac0adaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cBUSCenbAUUlWLYd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97f\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4c[9huVEjl4bdEf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_1798_XYZ_\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1799_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1ee0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/genomic_chart/genomic_chart")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_17_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"UGUZURUUXYoSSU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6Pu\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd54db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"cUUUUUsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8a0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FUvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"group\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"EExmvuJ57NJk\", \"checksum\":\"_EM_3672_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"custom_gene_list\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_3673_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"c675dfde02eae6c2ac8b42f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"H\", \"checksum\":\"_EM_U930_UUb_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e33\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_3674_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3675_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azUw;wuGoE\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e6c402271bcda9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bSV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E5\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_5781_XUU_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"7e6011e9eb9ef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGN\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"ffc14ebda6777d5aba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"`\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2569_XYZ_\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55915706ef9c03a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/virtual_study/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_18_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_2888_XYZ_Y\", \"checksum\":\"_EM_2890_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269cd33db864c11480b9\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_2891_XYZ_\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"ad4cc0fddf22e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqxU\", \"checksum\":\"_EM_2892_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1222_XYZ_\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"1142b1aeb7a9756c9fcabd44\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_9U2U_XYX_\", \"checksum\":\"JuqfRoxXB_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7v\", \"type\":\"settings\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoEo\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"f7c402371bcea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYUYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Tl3\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"7e6010eaebaee0baf49751bb\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNKr\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"group\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_2567_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2569_XYZ_\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55915706ef9c03a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_/cF97fE\", \"checksum\":\"ZuZhGT\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"b8f57fdbffaa9c46134b4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"2TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/main_session/main_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_19_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"B7\", \"checksum\":\"drEBFDsvL\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"409721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1222_XYZ_\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoE\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f7c402371bcea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_2567_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5575\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2569_XYZ_\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55915706ef9c03a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/group/group")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_20_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "custom_data")
                .d("{\"id\":\"eFqBoMBwtf\", \"checksum\":\"vB5dEFwdYOjeK\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UnAqS5dALsY\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"46a7c9a63aaf5b98ffabce54\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\")\", \"checksum\":\"NCcks;M331D7vNF0\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"RyU:BOleKf\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"bbecec9398fade6364f655c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/_EM_118_XYZ_/custom_gene_list/query?" + 
                    "field=_EM_119_XYZ_&" + 
                    "value=9vnVF3nt2yjwY__g&" + 
                    "EMextraParam123=_EM_120_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_21_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_0_XYZ_/custom_gene_list/query?" + 
                    "field=_EM_1_XYZ_&" + 
                    "value=_EM_2_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_22_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oH1F\", \"checksum\":\"UGUZUVUUXYoSSU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3587_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db4c269bd54db864c10471ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"nFGSBw\", \"checksum\":\"cUUUUUsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8a0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"WEM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Ub\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f6429b\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1222_XYZ_\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"c676dfeef2fbd5b2bd9a3200\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"settings\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_H\", \"checksum\":\"UKunUUUj0?e6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9ddacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"Nx\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"lKQUS3_C\", \"checksum\":\"_EM_3589_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoE\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f7b503371bdea9931f501b86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_5781_XUU_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"A[8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TZSR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"fec14dcda6676e48ba76babd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_2567_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_fj4Pziz_97s\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"56a157f6df9c13a724f3607a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/custom_data/custom_data")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_23_getOnQueryReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_496_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/A/comparison_session/query?" + 
                    "field=_EM_493_XYZ_&" + 
                    "value=_EM_494_XYZ_&" + 
                    "EMextraParam123=_EM_495_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_24_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"wC1\", \"checksum\":\"_EM_671_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"P6aRPSpLbR0dwr2\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"cb4c28bbc25db754c1239fb9\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"44Cf7\u0084ualHNBg56u\", \"checksum\":\"hrEBFD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_672_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"5e6842e9979d7ed44347d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"jUjjYZ8GPLH\", \"checksum\":\"gauZ_Gle8UqckvD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_642_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"9d4cc0ffee24e312c968daca\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"aIPOILS20Oc\", \"checksum\":\"j3Z0Tt\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"4\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f652ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_673_XYZ_\", \"checksum\":\"_EM_674_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e5fa6ffc6ea8fac767297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_192_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39W\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"d687dfedf2fcd5c2bd8a22f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33EeH\", \"checksum\":\"_EM_193]XYZ_X\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_551_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"6dd0afbafd2d7e90f5da3433\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"UEM_55UUUZU_\", \"checksum\":\"R\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJ\", \"type\":\"settings\", \"_id\":{\"$oid\":\"0140b0aed798956dafbaac54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_675_XYZ_\", \"checksum\":\"HNPWHPh8U_M4g\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_676_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"247be02eafc61e1a6eec68fe\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_553_XYZ_\", \"checksum\":\"_EM_554_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Z_dO5qxx0zBOEBpqIz\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"0ecea338afd96b9ecffaa363\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_677_XYZ_\", \"checksum\":\"AgPEKgVO9VaDcQ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"r5ggW\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"c9fca4e0f1a3bbc18d27182a\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"cUOh\", \"checksum\":\"_EM_256_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"d8WChPc1mghB3aH\", \"type\":\"settings\", \"_id\":{\"$oid\":\"ee3f1c7bfdce643da4e0a0e6\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_643_XYZ_\", \"checksum\":\"0VS8__wxtVBfRlV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_644_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"faaccaaae5e3ed48908d353f\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Oi2bmljvG\", \"checksum\":\"_EM_678_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"vV3\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ce69a1de784aa0f697fbd6cc\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/r5ggW/settings/query?" + 
                    "field=8&" + 
                    "value=aPt_1vR3wQnSk&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_25_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"L1AC9\", \"checksum\":\"_EM_1068_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"6hx1WBcVTXd\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"8e35868903cba2d8d44df5a7\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"WuUpdmyp05i\", \"checksum\":\"ojqoWNdLJwMN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"8MvLaJCBGT7RHwAc\", \"type\":\"settings\", \"_id\":{\"$oid\":\"4c2bdc2f4b93766fb1393c8f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"9>Ba7c8\", \"checksum\":\"_EM_1077_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"1E3JB*t_m\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"5a153366c155bbfff726a786\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"7QX2Rh2pgxc\", \"checksum\":\"lPL7I\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"En3yAIqyFNsh0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f0e3407fdbb6a8491fdb2d8f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"mEZ9nF\", \"checksum\":\"lppV8KeSdPj\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1078_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"9dade9c87e3edf1a98cfb9a9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"KGZQB2j4mOCbDEg\", \"checksum\":\"qpd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1079_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"f62c644642a5f4caa1e2e53e\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"FI2JOZiPgmnPDY3\", \"checksum\":\"qH2uZp5XB\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"zsP4G_ut77wiSJu\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"fbfc074f5db4dd8aa9c475ef\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"UUUUobzUUU0WUWU:\", \"checksum\":\"vmeI\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_278_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"dc2dae2f6cb041ee7dbd49d7\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"fieMcXyDE4Wd00F\", \"checksum\":\"CIdZdIlrC5pOo\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Wu\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"dad7bb99ca2bd2abfeedfddb\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"PBwJE\", \"checksum\":\"kOIDZ5s\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1070_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"6902dae80d5df1ede0fc1632\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"\", \"checksum\":\"VKCuHErWi\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"36OtFelWRnUNH9\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ad7dd3ead6b0ba0b2bd84ca6\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"7p_j\", \"checksum\":\"mTiS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"80b754e2989480a84fe03b28\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/_EM_1075_XYZ_/group/query?" + 
                    "field=3&" + 
                    "value=_EM_1076_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_26_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db4d369bd54db764c11480b9\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_4059_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"comparison_session\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"ad3ccffcee23d1f2f959e9c9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvT\", \"checksum\":\"mUgU7UUKUm6G\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"N^\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"33da6b80b7fd635ba8f632bb\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uN3ZE7qtY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9tMWPPui8tE33Ee\", \"checksum\":\"gTjP27U@\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"7edfbebafc1e6d80f3da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd53\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"GpUMpJ6Jv4W5t\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fU8vUU]NUXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac689afcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"zMC\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"42\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYDgz\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Cfa78fz5V0OY6w\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef1aaf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc14ccea5687e59b975cabd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Dihnzbexb1\", \"checksum\":\"UFMUUoUUS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"settings\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"kCMSCenbADBtWLYeq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"e319a86fc89c56faf4bcdd9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/gXHBxmSINPK2P/custom_data/query?" + 
                    "field=gXHBxmSINPK2P&" + 
                    "value=gXHBxmSINPK2P")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_27_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_4111_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad3cdf0ede33d201e877e9ca\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6A\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"43da8a70c8fc736ba8f642ac\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"UUUXA2_a\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a31f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"ieo0w9q529RvDFqH\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[u\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTnO\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR9fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"54914806ed8bf4961403619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4r9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/YI7DYJA/genomic_chart/query?" + 
                    "field=NSXAsbUS%3CHDd&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_28_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"L1AC9Q\", \"checksum\":\"9lX97\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"6hx1WBcVTXd\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"8e35868903cba2d8d44df4a7\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"WuUpdmyp05i\", \"checksum\":\"ojqoWNdLJwMN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"8MvLaJCBGT7RHwAc\", \"type\":\"settings\", \"_id\":{\"$oid\":\"4c2bdc2f4b93766fb1393c8f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"9NBa7g8\", \"checksum\":\"OugXLAbfxMU9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"1E3JB2t_m\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"59143377d246cbfff826c797\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_367_XYZ_\", \"checksum\":\"_EM_467_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"En3yAIqyFNsh0r\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"f0e3406fdbb6a8491fdb2d8f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"UUM_U6U_XYZU\", \"checksum\":\"A8u4\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_369_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"9dade9c77d3edf1a98cfb9a9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"1yB\", \"checksum\":\"_EM_370_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"eLaMZz\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f62c554642a5f4caa1e2e52e\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"FM2JOZiPgmnPDY3\", \"checksum\":\"_EM_371_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_468_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"ebfdf74e6db4dc8aa9b375e0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"<H5oobv4AK0WWW09\", \"checksum\":\"\u0086meI5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Tcw\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"dd1dbd2f7cb041df6dbd4ac7\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"UU<WUUTkpUfUeUU\", \"checksum\":\"YOQO1Dk\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"v7nMZZLKRQ\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"c366813bbfd8bb4d8dcded65\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"CUHbcc\", \"checksum\":\"OUvUK4\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_469_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4598aabdb21775f32a7019c\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"awAVb24gwyip_1\", \"checksum\":\"SZbeTWruA\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"rqFRx17Zai9cMAX\", \"type\":\"group\", \"_id\":{\"$oid\":\"948cad4938efb6aeb0be6c2a\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"Bc3RZ\", \"checksum\":\"H\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SfwWsUvD6lyQxzg\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"67b6fa49e3f169a79dcffb0b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_470_XYZ_\", \"checksum\":\"8Y\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"rL1VLC6Smrh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"84b2ceb1e1f8ba6f395eb2ec\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_471_XYZ_\", \"checksum\":\"_EM_472_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_473_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"4e2b4b94d67e1febde9851d3\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"cM3Hu2_PalSWTFr\", \"checksum\":\"aLzzze3WAHLWw1l\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Fdo\", \"type\":\"settings\", \"_id\":{\"$oid\":\"b378f2b6edf1aa3a51d92c00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_RaDCWTz\", \"checksum\":\"qLHydpkS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"61OYkPVly\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"6f0b40010b3eab0fd807b7c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/lbo/settings/query?" + 
                    "field=_EM_96_XYZ_&" + 
                    "value=_EM_97_XYZ_&" + 
                    "EMextraParam123=_EM_98_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_29_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"UGUZURUUXYoSSU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6Pu\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd54db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"cUUUUUsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8a0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FUvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"group\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"EExmvuJ57NJk\", \"checksum\":\"_EM_3672_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"custom_gene_list\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_3673_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"c675dfde02eae6c2ac8b42f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"H\", \"checksum\":\"_EM_U930_UUb_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e33\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_3674_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3675_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azUw;wuGoE\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e6c402271bcda9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bSV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E5\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_5781_XUU_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"7e6011e9eb9ef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGN\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"ffc14ebda6777d5aba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"`\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2569_XYZ_\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55915706ef9c03a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/YI7DYJA/comparison_session/query?" + 
                    "field=NTXAsbUS%3CHEd&" + 
                    "value=ypZ6QiOm")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_30_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oC1\", \"checksum\":\"4vqPa0aeJlQGz\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"cb4c27aad34ec763c1248fba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"HhUmUGsXb\", \"checksum\":\"hrEBFD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"LZ42kE_uI7\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"5e6842e9979d7ed44348d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"jUjjYZ:GPLH\", \"checksum\":\"gauZ_Gle8UqckvD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_534_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"9e4cb0fec022d302e967dac8\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"aIPOILS20Oc\", \"checksum\":\"j3Z0Tt\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"4\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f652ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"1qjXwLcVZiyrDS\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877397d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"NmKy\", \"checksum\":\"j5IUUBca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_535_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"d688dfedf2fcd5c2bd8a22f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33EeH\", \"checksum\":\"_EM_193_XYZ_X\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DYJA\", \"type\":\"settings\", \"_id\":{\"$oid\":\"6ed0bfbafc2e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTcawcSg\", \"checksum\":\"_EM_194_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"settings\", \"_id\":{\"$oid\":\"0140b0aed798956dafbaac54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_536_XYZ_\", \"checksum\":\"HNPWHPh8U_M4g\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_537_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"266cf03fbfc4fe2b5ffb87ff\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"sbwG5imtGzw1d\", \"checksum\":\"_EM_538_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Z_dO5qxx0zBOEBpqI\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"0ecea338afd96b9ecffaa363\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"hm\", \"checksum\":\"k2Np46SSdR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"r5ggW\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c9fda4e0f1a3bbc18d27182a\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"cUOh\", \"checksum\":\"_EM_256_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"pPX3mxMw496bI\", \"type\":\"settings\", \"_id\":{\"$oid\":\"ed4e0c6cecbe543d94e0a0e6\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"WWxxwAID2m7V6yUR\", \"checksum\":\"K4k0fOMqzw2UQnp\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"cC372wPBJ\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"14dbc0d01b57edd6bcbfa2ec\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Ss\", \"checksum\":\"ZZgY1bP79yjw\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"f8\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"c456395ccec48fdb49fbe8d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_110_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/SZR1fXa39/main_session/query?" + 
                    "field=class&" + 
                    "value=_EM_195_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_31_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1\", \"checksum\":\"_EM_240_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db774c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"HhUmUGsXd\", \"checksum\":\"hrEBFDsu\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_541_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5e6842e9979d7ed44348d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"z\", \"checksum\":\"_EM_651_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3Nnh\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"9d3ccf0ed013e112ea58fac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_543_XYZ_\", \"checksum\":\"j3Z0TtK\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"4\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"32d96b8fc70d844ba9f752ba\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"1qjXwLcVZiyrDS7\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877397d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_192_XYZ_\", \"checksum\":\"h5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_652_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a22f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_544_XYZ_\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DYJ\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTcawcSg\", \"checksum\":\"_EM_653_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpsJI\", \"type\":\"group\", \"_id\":{\"$oid\":\"0150b0bde688957d9faa9b64\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_545_XYZ_\", \"checksum\":\"ErcSlpgYcGSUHqY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"i\", \"type\":\"group\", \"_id\":{\"$oid\":\"826bcc8deb55bd25cc767e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"L\", \"checksum\":\"P6wpbuS1\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"rG503ZTj\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d0fe2aabc78aafcb6caafa9e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_654_XYZ_\", \"checksum\":\"ZQU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"rCBu\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"17c6222629bd9b920f2f0c85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"l\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8f4d0a2cbeff8a255fe03bf1\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"oDbTKqQ1BM0Dh\", \"checksum\":\"i0GDI7YfMh2m5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"KF8fcbaE\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"ad919e66f4caeeccfe37e097\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Ux1UU9UVUxuFU_UH\", \"checksum\":\"UUB\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_655_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"e496acaa24383521bff47587\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/d8WChPc1mghB3aH/virtual_study/query?" + 
                    "field=_EM_108_XYZ_&" + 
                    "value=_EM_195_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_32_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1\", \"checksum\":\"_EM_240_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db774c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"HhUmUGsXd\", \"checksum\":\"hrEBFDsu\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_541_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5e6842e9979d7ed44348d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"z\", \"checksum\":\"_EM_651_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3Nnh\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"9d3ccf0ed013e112ea58fac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_543_XYZ_\", \"checksum\":\"j3Z0TtK\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"4\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"32d96b8fc70d844ba9f752ba\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"1qjXwLcVZiyrDS7\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877397d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_192_XYZ_\", \"checksum\":\"h5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_652_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a22f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_544_XYZ_\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DYJ\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTcawcSg\", \"checksum\":\"_EM_653_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpsJI\", \"type\":\"group\", \"_id\":{\"$oid\":\"0150b0bde688957d9faa9b64\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_545_XYZ_\", \"checksum\":\"ErcSlpgYcGSUHqY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"i\", \"type\":\"group\", \"_id\":{\"$oid\":\"826bcc8deb55bd25cc767e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"L\", \"checksum\":\"P6wpbuS1\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"rG503ZTj\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d0fe2aabc78aafcb6caafa9e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_654_XYZ_\", \"checksum\":\"ZQU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"rCBu\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"17c6222629bd9b920f2f0c85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"l\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8f4d0a2cbeff8a255fe03bf1\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"oDbTKqQ1BM0Dh\", \"checksum\":\"i0GDI7YfMh2m5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"KF8fcbaE\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"ad919e66f4caeeccfe37e097\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Ux1UU9UVUxuFU_UH\", \"checksum\":\"UUB\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_655_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"e496acaa24383521bff47587\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/_EM_112_XYZ_/group/query?" + 
                    "field=_EM_659_XYZ_&" + 
                    "value=aPt_1vR3wQnSk&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_33_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"L1AC9\", \"checksum\":\"_EM_1068_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"6hx1WBcVTXd\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"8e35868903cba2d8d44df5a7\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"WuUpdmyp05i\", \"checksum\":\"ojqoWNdLJwMN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"8MvLaJCBGT7RHwAc\", \"type\":\"settings\", \"_id\":{\"$oid\":\"4c2bdc2f4b93766fb1393c8f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"9NBa7c8\", \"checksum\":\"OughLAbfxMU9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"1E3JB2t_m\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"5a153366c155bbfff726a786\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"7aX2Rh2pgxc\", \"checksum\":\"lPL7I\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"En3yAIqyFNsh0r\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f0e3407fdbb6a8491fdb2d8f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"mEZ9nF\", \"checksum\":\"_EM_275_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"9dade9c87e3edf1a98cfb9a9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1069_XYZ_\", \"checksum\":\"qpd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_277_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f62c544642a5f4caa1e2e53e\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"FI2JOZiPgmnPDY3\", \"checksum\":\"qH2uZp5XB\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"zsP4G_ut77wiSJu\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"fbfc074f5db4dd8aa9c475ef\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"UUUUobzUUU0WUWU:\", \"checksum\":\"vmeI\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_278_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"dc2dae2f6cb041ee7dbd49d7\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"fiaMcXyDE4Wd00F\", \"checksum\":\"CIdZdIlrC5pOo\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Wu\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"cbd7cc8aba2cd2abedfdeddb\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"PBwJE\", \"checksum\":\"kOIDZ5s\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1070_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"6902dae80d5df1ede0fc1632\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/_EM_1071_XYZ_/group/query?" + 
                    "field=_EM_96_XYZ_&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_34_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_456_XYZ_\", \"checksum\":\"9lX9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_457_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"7e34758a03bcb2d9d44c05a7\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"WuUpdmyq05i\", \"checksum\":\"_EM_458_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_459_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"4c2bdc2f4b93766fb1393c8f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_460_XYZ_\", \"checksum\":\"OughLAbfxMU9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"1E3JB2t_m\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"5a143376d156cc0ff726b886\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"7aX2Rh2pgxc\", \"checksum\":\"lPL7I\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"En3yAIqyFNsh0r\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f0e3407fdbb6a8491fdb2d8f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"mEZ9nF\", \"checksum\":\"_EM_275_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"9dade9c87e3edf1a98cfb9a9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_276_XYZ_\", \"checksum\":\"qpd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_277_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f62c554642a5f4caa1e2e53e\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_461_XYZ_\", \"checksum\":\"qH2uZp5XB\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"zsP4G_ut77wiSJu\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"fbfcf73f5cb4ec7aa9d584ff\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"4H5oobv4AK0WWW093\", \"checksum\":\"vmeI\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_278_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"dc2dbe2f6cb041ee7dad49d7\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"FGzk3sFnuacz0xMa\", \"checksum\":\"9V57ebCs017\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"tSS1XhiT\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"a98e51bb83cafbfc27af758a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"r1YlvVD9aMW\", \"checksum\":\"19\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"jRHm8I\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d71babd324f4e8e2c9271ba2\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"fNTZT2Jn4sYtFkj\", \"checksum\":\"_q7fFAZ_h\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"c\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"5cdd84deccdbe5ad7fc6aedd\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"tTBmYhdA2cuxmK\", \"checksum\":\"b5_jbVRh\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ecd5ced3a186c0fb2b8ed312\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJyQ5l5axEaT\", \"checksum\":\"BFkft5y\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"kefSud3_Bq03\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"887f8a538e3b80dc4c190f15\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"b\", \"checksum\":\"1Os3GFgrt\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"n6_tfnKqxrb\", \"type\":\"settings\", \"_id\":{\"$oid\":\"db19bf8d147a8157ee0c5a66\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"9DliGn7\", \"checksum\":\"j\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"9VEMKD2mpeTnCvY\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"6da0b9eabab8ddb6b1bf327d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"S08tW5nTF\", \"checksum\":\"JwSaMR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"9y6\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"4e640a0dd432c3a1f226a0e9\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/eLaMZz9/genomic_chart/query?" + 
                    "field=_EM_462_XYZ_&" + 
                    "value=_EM_109_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_35_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_456_XYZ_\", \"checksum\":\"9lX9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_457_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"7e34758a03bcb2d9d44c05a7\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"WuUpdmyq05i\", \"checksum\":\"_EM_458_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_459_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"4c2bdc2f4b93766fb1393c8f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_460_XYZ_\", \"checksum\":\"_EM_1458_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"1E3JB2t_m\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"5a143376d156cc0ff726b886\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"7aX2Rh2pgxcv\", \"checksum\":\"UPL7U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"En3yAIqyFNsh0r\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"f0e3407fdbb6a7491fdb2d8f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"mEZ9nF\", \"checksum\":\"_EM_275_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"9dade9c87e3edf1a98cfb9a9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_276_XYZ_\", \"checksum\":\"qpd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_277_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f62c554642a5f4caa1e2e53e\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_461_XYZ_\", \"checksum\":\"qH2uZp5XB\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"zsP4G_ut77wiSJu\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"fbfcf73f5cb4ec7aa9d584ff\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"4H5oobv4AK0WWW093\", \"checksum\":\"vmeI\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_278_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"dc2dbe2f6cb041ee7dad49d7\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"FGzk3sFnuacz0xMa\", \"checksum\":\"9V57ebCs017\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"tSS1XhiT\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"a98e51bb83cafbfc27af758a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"r1YlvVD9aMW\", \"checksum\":\"19\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"jRHm8I\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d71babd324f4e8e2c9271ba2\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"pXgZ\", \"checksum\":\"pjy1weEZa\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"settings\", \"_id\":{\"$oid\":\"c4ffda9b2b84f1adb30f4ee4\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"WGOz4EQ7\", \"checksum\":\"XK_jrAo\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"dqajqean3\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"fd6683e55e6fab1e0adac097\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"5oUpUBVt2m6iLj\", \"checksum\":\"lV`\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"K1UU7unUUkgiMctU\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8a7f99b3ea5bf04c7a6e8963\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"PYZ7c\", \"checksum\":\"Ur69dgYzSfNnn1l\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"qbGaza7hxTcpRas\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5bec9668dafb20e3bf78f2e2\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"imnVJaNb4KG2\", \"checksum\":\"uBt_LoC\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd99b8veP08N7j\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"4d6bf4aec532d7c9d85ceb2a\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"qOPy3JN9ZANp\", \"checksum\":\"\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"buB\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"fdcb812944c5892c6d610ae1\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_463_XYZ_/main_session/query?" + 
                    "field=_EM_96_XYZ_&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_36_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_1749_XYZ_\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"V6PQ\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"dc4c169bc43da755d11580aa\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"cFHT\", \"checksum\":\"oiubUGleUVpUUUUhq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhF\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"ad4cc0fddf23e212f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_1755_XYZ_\", \"checksum\":\"eLgO7MCKmm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"V\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"pDUufkysqG4W09Ul\", \"checksum\":\"GJ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"custom_gene_list\", \"type\":\"group\", \"_id\":{\"$oid\":\"d4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6MfDE\", \"checksum\":\"_EM_1750_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_Y\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"7ed1cecafc1d5ca0d4ca2435\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_k\", \"checksum\":\"_EM_1756_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"juhw5\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2152b19eb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"1FTDAK_PpebzKnZH\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"a26bcc9bda44cc24cd666e24\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"Ug\", \"checksum\":\"GpeNpJ6Jv3W5Q\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1757_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"c0002aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_l43sVkNw1CjVeXsq\", \"checksum\":\"bQU8UUBl_j\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoER\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f6b313281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1758_XYZ_\", \"checksum\":\"jU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"U\", \"type\":\"group\", \"_id\":{\"$oid\":\"8e4e091cbee07a255ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_1751_XYZ_\", \"checksum\":\"u44cZ9ym3qu\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"3eCiIQjiDh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7f6021dafcaff1abf4a741ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_1731_XYZ_W\", \"checksum\":\"Ac8NUmUnp\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"LZ42kE_uI7\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"fec15dcdb6677d59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZW\", \"checksum\":\"5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1759_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"307bb68f9784118960a06465\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5N\", \"checksum\":\"_DM_1099_XUUW\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"46915606de8cf49615f2619a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0adaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"_EM_1752_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1753_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ab66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97f\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4c[9huVEjl4bdEf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3dCVo\", \"checksum\":\"_EM_1760_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPx\", \"type\":\"group\", \"_id\":{\"$oid\":\"e7d49744e9f3bbc7ad2ee1d7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_112_XYZ_/virtual_study/query?" + 
                    "field=NPXAsaeSDHEd&" + 
                    "value=UTtUUvU3UUnSs")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_37_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"UG1G\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"cb3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"egFcuLit_83QV8kW\", \"checksum\":\"drEBFDsv7h\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"5f8721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"U\", \"checksum\":\"_EM_1136_XYZ_m\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3Nnh\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc00ddf23e212f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_1097_XYZ_\", \"checksum\":\"1OLB9EkhAjEjTeKJ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"w9_K18HJF2PBo\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8ec735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1140_XYZ_\", \"checksum\":\"7C99g5oQ7b0\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"custom_gene_list\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"f4fb70dc6da9ead877397d6f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6Mf\", \"checksum\":\"j5HXI2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"c687eeeef2edd5b2be9932e0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1883_XYZ_\", \"checksum\":\"_EM_1884_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DaJG\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"6ed0bfaaec0f5d9004da3444\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTcawcSg\", \"checksum\":\"_EM_633_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YnuJIq\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"1151b0aec6a9856c9ecabd55\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"*eL2cubd\", \"checksum\":\"5sZMPJE\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"EM_tainted_map\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"926bdb9ccc44bc15db865e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1507_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpSPvXJ0y\", \"type\":\"group\", \"_id\":{\"$oid\":\"c00f19aab6799ebb7c9ae98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_lU3sVkUUUCjUUT\", \"checksum\":\"bQU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UAnOhtoru1n\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f6b413281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_2115_XYZ_\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2116_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"8e300a1dbddf7a154ff23a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"3s\", \"checksum\":\"q4USZ9Uo3UY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UeCiUQUiDh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"8e6132eafcaff2bce5a831cc\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJh69DT0By4Rg\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"eed13dcea6766d68b985bbcd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"iIv6y\", \"checksum\":\"_EM_1508_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1509_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"307ab69f9874028a50ae5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2117_XYZ_\", \"checksum\":\"IQ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"J7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"56814707ef9df2a715f3519a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"90tjJlw2UZfug\", \"checksum\":\"JIjpBU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"JSptE\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"745a1fbc9bcfcdbd04f155c2\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"MN4W9UEUISUSUUVUU\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"XMN9JhTmBkhm\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e319a96fb8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"kUCOL1kkU+cHI7f2\", \"checksum\":\"OW0nAOHhA4\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2118_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"c8f58edcefaa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_1512_XYZ_ZU\", \"checksum\":\"_EM_2119_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2120_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"c5c4a645ca039bd6bc1ee1c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_112_XYZ_/genomic_chart/query?" + 
                    "field=_EM_2123_XYZ_&" + 
                    "value=_EM_1139_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_38_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"UG1G\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"cb3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"y6UPIVBN3v\", \"checksum\":\"drEBFDsv7\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"E\", \"checksum\":\"_EM_1136_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3Nnh\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc00ddf23e212f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"XyHAzUzupEikg\", \"checksum\":\"1OLB9EkhAjEjTeKJ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_262_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"24d97b80d8fc734aa8f642ac\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1140_XYZ_\", \"checksum\":\"UE\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"u_67ITxBQ\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f4fb70ec6da9ead877397d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6MbD\", \"checksum\":\"j5HXI2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d687dffdf3fcd5c1be8b3300\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33EeHL\", \"checksum\":\"_EM_193_XYZ_7\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DaJG\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfaaec0f5d90f4da3444\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IUUcGU8SSTcawcSg\", \"checksum\":\"_EM_633_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YnuJI\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"1151b1aec6a9856c9ecabd55\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_2221_XYZ_\", \"checksum\":\"h2h5Ew9doBaEQry\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"N5\", \"type\":\"settings\", \"_id\":{\"$oid\":\"926bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1507_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpSPvXJ0y\", \"type\":\"group\", \"_id\":{\"$oid\":\"c00f19aab6799ebb7c9ae98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_lU3sVkUUUCjUUT5\", \"checksum\":\"_EM_2222_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UAnOhtoru1n\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f6b413281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e3f0a1dbddf7a154ff23a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_1137_XYZ_\", \"checksum\":\"q4USZ9Uo3UY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UeCiUQUiDh\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"7f6021dafcaff1acf4a741bc\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJh69DT0By4Rg\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"eed14dcea6766d68b985bbcd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"aIv6y\", \"checksum\":\"_EM_1508_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1509_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"307ab5909873f27a60a04476\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5\", \"checksum\":\"_EM_2223_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"J7\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"56814707ef9df2a715f4519a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"90tjJlg2UZfug\", \"checksum\":\"UIlpBW\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"FQQg8ydAk\", \"type\":\"settings\", \"_id\":{\"$oid\":\"745a1fac8cbfbdbd04f255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"MN4W9UEUISUSUUVU7\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2224_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"kUCOL1kkU3cHI7f2\", \"checksum\":\"CKVXGF9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4UY9huVEjhUbdUf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"c8f58edce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_1512_XYZ_\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPx\", \"type\":\"group\", \"_id\":{\"$oid\":\"c5c4a645ca039bd6bc1ee1c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/LZ42kE_uI7/main_session/query?" + 
                    "field=_EM_2225_XYZ_&" + 
                    "value=zRxmVSR6LxQiGa1l")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_39_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6G\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uN7ZE7qtY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_3904_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8b32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"gTjP27U@\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7EYJ\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_i\", \"checksum\":\"OLunpX3j0Ae6j\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"group\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd53\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"_EM_3903_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgzU\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc14ccea5687e59b975cabd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzbexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYeq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3acdc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/LZ42kE_uI7/custom_gene_list/query?" + 
                    "field=_EM_3905_XYZ_&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_40_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F0\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3984_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"db3c279bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"Ep2rqOgHwH\", \"checksum\":\"_EM_3980_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3981_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6G3\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"43db8c80c8ec745ba8f6529b\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uUUZE;UtU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93ySX\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c687dfeee20be5b2ae8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"gTjP27U@\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_L\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd53\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"GpeNpJ6Jv3W5x\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"czzgBcSZZ\", \"checksum\":\"_EM_3985_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3986_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3987_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"pKUSYDUz\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTng\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc15ccda5687e59b885cabe\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzbexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYeq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3acdc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"e6d3a744d902abd6bd1effe8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/LZ42kE_uI7/custom_gene_list/query?" + 
                    "field=NSXAsbUS%3CH%3Cd&" + 
                    "value=YIYPfKc4")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_41_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1Fz\", \"checksum\":\"vGGZoRRVXYkSSNl\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"U6U\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd44db764c11380ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv7\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_5SCj4a_0oXJwiev\", \"checksum\":\"oiubUGleUVpUUUUh\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3Nnh\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"ad4cc0fddf23e212f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_1097_XYZ_\", \"checksum\":\"_EM_261_XYZ_6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_262_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642bb\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"1qjXwLcVZiyrDS7\", \"checksum\":\"_EM_1371_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"e4fb7fec6da9e9d877397d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6MfD\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33EeH\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DYJ\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTcawcSg\", \"checksum\":\"_EM_633_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1372_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"1151b1aec6a9856c9ecabd55\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"*eL2cubd\", \"checksum\":\"_EM_263_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"U5\", \"type\":\"group\", \"_id\":{\"$oid\":\"926bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"M9\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpSPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f29aac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_l43sVkNw1CnVeX\", \"checksum\":\"bQU8UUB6l_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"xN6J9osURDE\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f6b413281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1373_XYZ_\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"U\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"9e4e091bbee16a346fe03900\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1374_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"3eCiIQjiDh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7f6021dafcaff1abf4a741ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJh69DT0By$Rg\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"bu4gQ_d7LR9JcxY\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"fec14dcda6677d59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"aIv6y\", \"checksum\":\"EM_tainted_map\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Q\", \"type\":\"group\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5\", \"checksum\":\"_EM_1099_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1100_XYZ_I\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"55915706ef9cf3a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"kPt1jNlh4qbYrxKV\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1102_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"845b0eac8bb0bebef4f255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_1375_XYZ_\", \"checksum\":\"_EM_1376_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYz]\", \"type\":\"settings\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"s\", \"checksum\":\"1x1kX8kM7QCxt\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1377_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"0b9b31c310fafcd1913ccbf1\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_1378_XYZ_\", \"checksum\":\"lCv3nD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"zC_iP6bfI\", \"type\":\"group\", \"_id\":{\"$oid\":\"a86fbfbab9ef4a1f0afc738a\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_110_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/_EM_107_XYZ_/custom_data/query?" + 
                    "field=6E361UsqHYZKs46&" + 
                    "value=rhAEkhAyaC")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_42_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_4111_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad3cdf0ede33d201e877e9ca\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6A\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"43da8a70c8fc736ba8f642ac\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"UUUXA2_a\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a31f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"ieo0w9q529RvDFqH\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[u\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTnO\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR9fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"54914806ed8bf4961403619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4r9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/SMHU/virtual_study/query?" + 
                    "field=6E361UsqHYZKs46&" + 
                    "value=rhAEkhAyaCx")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_43_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_3246_XYZ_\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"da2b258bd44da864d11571a9\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5f9721fa889f6fd43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_3242_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnfFf\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"9d3cb0ecef14d202fa69eac8\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_3247_XYZ_\", \"checksum\":\"_EM_3248_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"eNZahbIP\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4fb71ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"IXikc8C\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJo\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"6dc0bfc90c1e6d91d4da3533\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3249_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cb25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"T\", \"checksum\":\"GxeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"az[w;wuGoE\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f7c402371bcea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"V\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8f4f081cbeef8a355ff14a0f\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYS[Lgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6112e9faaeffbaf49851ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_2567_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"cf\", \"checksum\":\"_EM_3243_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"54a06706ee9b04a624f3607a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"_EM_3244_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"settings\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_3250_XYZ_\", \"checksum\":\"_EM_3251_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"q\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_112_XYZ_/custom_gene_list/query?" + 
                    "field=_EM_3245_XYZ_&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_44_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db4d369bd54db764c11480b9\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_4059_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"comparison_session\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"ad3ccffcee23d1f2f959e9c9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvT\", \"checksum\":\"mUgU7UUKUm6G\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"N^\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"33da6b80b7fd635ba8f632bb\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uN3ZE7qtY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9tMWPPui8tE33Ee\", \"checksum\":\"gTjP27U@\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"7edfbebafc1e6d80f3da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd53\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"GpUMpJ6Jv4W5t\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fU8vUU]NUXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac689afcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"zMC\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"42\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYDgz\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Cfa78fz5V0OY6w\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef1aaf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc14ccea5687e59b975cabd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Dihnzbexb1\", \"checksum\":\"UFMUUoUUS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"settings\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"kCMSCenbADBtWLYeq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"e319a86fc89c56faf4bcdd9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/NSXAsbUS%3CHDd/main_session/query?" + 
                    "field=6E361UsqHYZKs46&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_45_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"UG1G\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"cb3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"y6UPIVBN3v\", \"checksum\":\"drEBFDsv7\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"E\", \"checksum\":\"_EM_1136_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3Nnh\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc00ddf23e212f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"XyHAzUzupEikg\", \"checksum\":\"1OLB9EkhAjEjTeKJ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_262_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"24d97b80d8fc734aa8f642ac\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1140_XYZ_\", \"checksum\":\"UE\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"u_67ITxBQ\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f4fb70ec6da9ead877397d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6MbD\", \"checksum\":\"j5HXI2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d687dffdf3fcd5c1be8b3300\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33EeHL\", \"checksum\":\"_EM_193_XYZ_7\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DaJG\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfaaec0f5d90f4da3444\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IUUcGU8SSTcawcSg\", \"checksum\":\"_EM_633_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YnuJI\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"1151b1aec6a9856c9ecabd55\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_2221_XYZ_\", \"checksum\":\"h2h5Ew9doBaEQry\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"N5\", \"type\":\"settings\", \"_id\":{\"$oid\":\"926bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1507_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpSPvXJ0y\", \"type\":\"group\", \"_id\":{\"$oid\":\"c00f19aab6799ebb7c9ae98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_lU3sVkUUUCjUUT5\", \"checksum\":\"_EM_2222_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UAnOhtoru1n\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f6b413281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e3f0a1dbddf7a154ff23a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_1137_XYZ_\", \"checksum\":\"q4USZ9Uo3UY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UeCiUQUiDh\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"7f6021dafcaff1acf4a741bc\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJh69DT0By4Rg\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"eed14dcea6766d68b985bbcd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"aIv6y\", \"checksum\":\"_EM_1508_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1509_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"307ab5909873f27a60a04476\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5\", \"checksum\":\"_EM_2223_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"J7\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"56814707ef9df2a715f4519a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"90tjJlg2UZfug\", \"checksum\":\"UIlpBW\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"FQQg8ydAk\", \"type\":\"settings\", \"_id\":{\"$oid\":\"745a1fac8cbfbdbd04f255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"MN4W9UEUISUSUUVU7\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2224_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"kUCOL1kkU3cHI7f2\", \"checksum\":\"CKVXGF9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4UY9huVEjhUbdUf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"c8f58edce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_1512_XYZ_\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPx\", \"type\":\"group\", \"_id\":{\"$oid\":\"c5c4a645ca039bd6bc1ee1c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/H/genomic_chart/query?" + 
                    "field=6E361UsqHYZKs46&" + 
                    "value=rhAEkhAyaC")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_46_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_UYZU\", \"checksum\":\"drEBFDsvR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_3855_XYZ_\", \"checksum\":\"mUgU7UUKUm6K\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f643ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"zUUDUH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec5da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"GpeNpJ6Jv3W5x\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rnQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"f7d403472bdea9921e4f1a85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR9fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55924806ee9bf4961403618a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/SZR1fXa39/virtual_study/query?" + 
                    "field=6E361UsqHYZKs46&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_47_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"cPY6hy\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"ACSWet3ee3K2C\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"4f9731fa889f6fc43446d7b1\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_4111_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ad3cdf0ede33d201e877e9ca\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6A\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"43da8a70c8fc736ba8f642ac\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a31f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"ieo0w9q529RvDFqH\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_UUcUU02_UUZ[\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"c00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw<wuFoE\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f7c402370bdfa9921e4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_4197_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYUUUp\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4r9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/SMHU/settings/query?" + 
                    "field=6E361UsqHYZKs46&" + 
                    "value=rhAEkhAyaCx")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_48_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1\", \"checksum\":\"_EM_240_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"UhQUUGkX\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"5e8832fa989e7ed44448d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"USjiUU8GPUJ\", \"checksum\":\"gauZ_Gle8UqckvD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3Nnhj\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad3cc0fddf23e212e958eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"aIPOILS20Oc0Q\", \"checksum\":\"gEM_261_XYZ_b\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"F9lNVBD\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b7fc80d635ab7f653ac\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1083_XYZ_\", \"checksum\":\"_EM_1084_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d4fc70ed6b9aeac896396d7d\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6Mf\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa3\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a22f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33EeH\", \"checksum\":\"yyBmnp\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"5ed0c0cb0c2e6c90d3d92545\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTcaocSg\", \"checksum\":\"_EM_245_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI3\", \"type\":\"group\", \"_id\":{\"$oid\":\"1040b19ec798866daebabc54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"*eL2cubd\", \"checksum\":\"_EM_263_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"U\", \"type\":\"group\", \"_id\":{\"$oid\":\"926bcb9ccb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"M\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpSPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"ofYUklU7wTUgUU\", \"checksum\":\"bQU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"rCBm\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f7b5122729ccab83203f0a85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bVL\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"l\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8f4d0a2cbeff8a255fe03bf1\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_1085_XYZ_\", \"checksum\":\"y44cZ9ym3\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"3eCiIQjiD`\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7f6022dafcaff1abf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJh69DT0By4Rg\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_264_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"eed14cccb6677d68ab75bbdc\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"eYimLayDtk\", \"checksum\":\"Mmn9XjCAj4zL5ZN9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"CAC6Q8I_YAsVkP3\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"b2ee7fb8279ce86facf18e60\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Zf848ZAca\", \"checksum\":\"ifa36d40\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"nDnbk<AzluMwH1F\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"27dbbb98d9ab5d36b0dea2a7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_110_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/_EM_107_XYZ_/custom_gene_list/query?" + 
                    "field=_EM_1086_XYZ_8&" + 
                    "value=rhAEkfAyaC")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_49_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"B7\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"409721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FrvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"34ca7b70c7fc735bb7f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"g5fTbybWiLHPsUt\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"LZ42kE_uI7\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fb9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoE\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f7c402371bcea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGLK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_2567_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5575\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EK_2U69_XYU_\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55915706ef9c03a613f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"g\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d3a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/SZR1fXa39/virtual_study/query?" + 
                    "field=type&" + 
                    "value=rhAEkhAyaCx")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_50_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"B7\", \"checksum\":\"drEBFDsvL\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"409721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1222_XYZ_\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoE\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f7c402371bcea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_2567_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5575\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2569_XYZ_\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55915706ef9c03a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/SZR1fXa39/settings/query?" + 
                    "field=_EM_108_XYZ_&" + 
                    "value=rhAEkhAyaCx")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_51_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_2888_XYZ_Y\", \"checksum\":\"_EM_2890_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269cd33db864c11480b9\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_2891_XYZ_\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"ad4cc0fddf22e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqxU\", \"checksum\":\"_EM_2892_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1222_XYZ_\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"1142b1aeb7a9756c9fcabd44\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_9U2U_XYX_\", \"checksum\":\"JuqfRoxXB_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7v\", \"type\":\"settings\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoEo\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"f7c402371bcea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYUYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Tl3\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"7e6010eaebaee0baf49751bb\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNKr\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"group\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_2567_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2569_XYZ_\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55915706ef9c03a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_/cF97fE\", \"checksum\":\"ZuZhGT\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"b8f57fdbffaa9c46134b4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"2TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/SZR1fXa3/group/query?" + 
                    "field=_class&" + 
                    "value=rhAEkhAyaC%7C")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_52_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"UG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd44db664c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"aqRYqjL\", \"checksum\":\"_EM_2943_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"50a721ea988f50c44547d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1222_XYZ_\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2944_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoE\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f7c402371bcea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"X\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgzn\", \"checksum\":\"UEM_U7UU_XYU_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"7e5011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"_EM_2945_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"group\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_2567_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2569_XYZ_\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55915706ef9c03a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPry\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/SZR1fXa39/virtual_study/query?" + 
                    "field=id&" + 
                    "value=rhAEkhAyaCx")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_53_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"UGUZURUUXYoSSU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6Pu\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd54db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"cUUUUUsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8a0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FUvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"group\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"EExmvuJ57NJk\", \"checksum\":\"_EM_3672_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"custom_gene_list\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_3673_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"c675dfde02eae6c2ac8b42f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"H\", \"checksum\":\"_EM_U930_UUb_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e33\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_3674_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3675_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azUw;wuGoE\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e6c402271bcda9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bSV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E5\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_5781_XUU_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"7e6011e9eb9ef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGN\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"ffc14ebda6777d5aba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"`\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2569_XYZ_\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55915706ef9c03a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/UUID/custom_data/query?" + 
                    "field=6E361UsqHYZKs46&" + 
                    "value=rhAEkhAyaCx")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_54_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fedf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYUUU\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4r9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/UUID/settings/query?" + 
                    "field=checksum&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_55_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6G\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uN3ZE7qtY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"gTjP27U@E\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_4030_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"group\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"1152b1aeb7b9847c9edadd52\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"GpeNpJ6Jv3W5x\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f7c402471bdea992104f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc14ccea5687e59b975cabd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzbexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_4031_XYZ_\", \"checksum\":\"cCMSCenbADBtWLYdq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3acdc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/NSXAsbUS%3CHDdU/virtual_study/query?" + 
                    "field=_id&" + 
                    "value=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_56_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_1749_XYZ_\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6PQ\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"cFH\", \"checksum\":\"oiubUGleUVpUUUUhq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhF\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"ad4cc0fddf23e212f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"Fqv\", \"checksum\":\"eLgO7MCKmm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"V\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"pDUufkysqG4W09Ul\", \"checksum\":\"GJ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"custom_gene_list\", \"type\":\"group\", \"_id\":{\"$oid\":\"d4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6MfD\", \"checksum\":\"_EM_1750_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_Z\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"6ed1bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"5Kn\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2152b19eb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"0FTBAU_UqUbzKnUU\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"a26bcc9bda44cc24cd666e24\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5Q\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d0002aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_l43sVkNw1CjVeXsq\", \"checksum\":\"bQU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoER\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f6b313281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"U\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a255ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_1751_XYZ_\", \"checksum\":\"u44cZ9ym3qu\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"3eCiIQjiDh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7f6021dafcaff1abf4a741ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_1731_XYZ_\", \"checksum\":\"Ac8RvmTnp\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec15dcda6677d59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5N\", \"checksum\":\"_DM_1099_XUUW\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"46915606de8cf49615f2619a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0adaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"_EM_1752_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1753_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ab66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97f\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4c[9huVEjl4bdEf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3365_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1ee0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_3366_XYZ_/genomic_chart/query?" + 
                    "field=6E361UsqHYZKs46&" + 
                    "value=rhAElhAyaC")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_57_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_1749_XYZ_\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6PQ\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db4c169cd44db775c21570aa\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_w\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_3367_XYZ_\", \"checksum\":\"oisbUGleUVpUUUUhq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhF\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"ad4cc0fddf23e212f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"Fqv\", \"checksum\":\"eLgO7MCKmm6Z\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"V\", \"type\":\"settings\", \"_id\":{\"$oid\":\"33ca7b80c8fc845ca8f541ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"pDUufkysqG4W09Ul\", \"checksum\":\"GJ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"d4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6MfD\", \"checksum\":\"_EM_1750_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_-93_XYZ_Z\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA5DYJ\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"6ed1bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"NOXbQ\", \"checksum\":\"_EM_3368_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"5Kn\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2141c09ec7b8755d9ed9cd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"0FTBAU_UqUbzKnUU\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"a26bcc9bda44cc24cd666e24\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"_EM_3369_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d0002aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_l43sVkNw1CjVeXsq\", \"checksum\":\"bQU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoER\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f6b312271bbdbb911f3e0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"U\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a255ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_1751_XYZ_\", \"checksum\":\"u44cZ9ym3qu\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"3eCiIQjiDh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7f6021dafcaff1abf4a741ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_1731_XYZ_\", \"checksum\":\"Ac8RvmTnp\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec15dcda6677d59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"1\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"settings\", \"_id\":{\"$oid\":\"317ac68e9885019a5f9f5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5N\", \"checksum\":\"_DM_1099_XUUW\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"46915606de8cf49615f2619a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0adaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"_EM_1752_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_U35U[\\\\UUU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ab66eaf3addb9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97f\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4c[9huVEjl4bdEf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"q\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3365_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1ee0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/UUID/settings/query?" + 
                    "field=6E361UsqHYZKs46&" + 
                    "value=rhAElhAyaC")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_58_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"UVHuVgtiTkI_nN\", \"checksum\":\"UGUUoRUVXUSSSU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1789_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"dc2c279bc34dc763c0159faa\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_2677_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"6096310998807fb34437e8c1\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"UEM_632UUUZU\", \"checksum\":\"oiubUGleUVpUUUUh\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhF\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"ad4cc0fddf23e212f969eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"Fq~\", \"checksum\":\"ehLgO7M;Kmm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"V\", \"type\":\"settings\", \"_id\":{\"$oid\":\"43da8b71c8ed736aa8e642aa\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1794_XYZ_\", \"checksum\":\"UR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1795_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877397d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6MfD\", \"checksum\":\"j5HXA2cam\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"QMjsLI5\", \"type\":\"group\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"NrvcvfmMEf\", \"checksum\":\"_EM_1791_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9746c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"BvE\", \"checksum\":\"2fVKL\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"9\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a27bbc9cdb56cc25cd866d24\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1796_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d10e1baad6899fdb7b9af99d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_l43sVkNw1CjVeXs\", \"checksum\":\"_EM_2675_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoF\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f6b413281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1797_XYZ_\", \"checksum\":\"_EM_1792_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"e\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8d4f0a2cbfe06a246ef15a10\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1793_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"3eCiIQjiDh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7f6021dafcaff1abf4a741ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"uQVsY_\", \"checksum\":\"9c8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677d59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lUpL_Eoo\\\\0\", \"checksum\":\"5T\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"S\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"316aa6a08874127a61af5365\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5N\", \"checksum\":\"_DM_1099_XUUW\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"55915706ef9cf3a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"UUUnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"845c0ebb8ac0adaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cBUSCenbAUUlWLYd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"settings\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97f\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4c[9huVEjl4bdEf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_1798_XYZ_\", \"checksum\":\"h\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"CVErgFB\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e7c4b644e902abc7cc1ef0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Instance type (array) does not match any allowed primitive type (allowed: ["object"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_2678_XYZ_/group/query?" + 
                    "field=_EM_2676_XYZ_&" + 
                    "value=rhAEkhAyaC")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_59_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/I/EVOMASTER/_EM_610_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/I/EVOMASTER/_EM_610_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_60_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/_EM_4460_XYZ_/main_session/s3sY%5CCxp%5EKcccX")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_61_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" _EM_7_XYZ_ ")
                .post(baseUrlOfSut + "/api/sessions/zII1/EVOMASTER/query/fetch?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/zII1/EVOMASTER/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_62_postOnFetchReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_1788_XYZ_\", \"checksum\":\"UGUZoRRVXUUSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1789_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db2c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"UEM_632UUUZU\", \"checksum\":\"oiubUGleUVpUUUUh\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhF\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"ad4cc0fddf23e212f969eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"Fq~\", \"checksum\":\"eLgO7M;Kmm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"V\", \"type\":\"settings\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1794_XYZ_\", \"checksum\":\"UR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1795_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877397d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6MfD\", \"checksum\":\"j5HXA2cam\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"QMjsLI5\", \"type\":\"group\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"NrvcvfmMEf\", \"checksum\":\"_EM_1791_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9746c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"Bv\", \"checksum\":\"2fVK\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"9\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a27bbc9cdb56cc25cd866d24\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1796_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d10e1baad6899fdb7b9af99d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_l43sVkNw1CjVeXs\", \"checksum\":\"bQU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoE\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f6b413281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1797_XYZ_\", \"checksum\":\"_EM_1792_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"e\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8d4f0a2cbfe06a246ef15a10\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1793_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"3eCiIQjiDh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7f6021dafcaff1abf4a741ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"uQVsY_\", \"checksum\":\"9c8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677d59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lUpL_Eoo\\\\\", \"checksum\":\"5T\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Q\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"307ab69f9874028a50a05475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5N\", \"checksum\":\"_DM_1099_XUUW\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"55915706ef9cf3a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"UUUnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"845c0ebb8ac0adaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cBUSCenbAUUlWLYd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97f\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4c[9huVEjl4bdEf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_1798_XYZ_\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1799_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1ee0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"VMqbMdM\" ")
                .post(baseUrlOfSut + "/api/sessions/BA/settings/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/BA/settings/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_63_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "virtual_study")
                .d("{\"id\":\"BQGj\", \"checksum\":\"kKO\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"0D<1LOW4kFU9JLFy\", \"type\":\"settings\", \"_id\":{\"$oid\":\"df8adc8b5b6a6defd7a9ddcd\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"AN\", \"checksum\":\"Ds_SXtT6q0H0HLUN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_852_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"95301a7ffef2b9bddea82bed\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/EVOMASTER/EVOMASTER?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/EVOMASTER/EVOMASTER"));
    }
    
    
    @Test(timeout = 60000)
    public void test_64_postOnFetchReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_4111_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad3cdf0ede33d201e877e9ca\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6A\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"43da8a70c8fc736ba8f642ac\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"UUUXA2_a\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a31f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"ieo0w9q529RvDFqH\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[u\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTnO\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR9fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"54914806ed8bf4961403619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4r9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"mxy4jBpOg1ZgW6m\" ")
                .post(baseUrlOfSut + "/api/sessions/G1nS3m/group/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/G1nS3m/group/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_65_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"_EM_3972_XYZ_\" ")
                .post(baseUrlOfSut + "/api/sessions/_EM_3971_XYZ_/virtual_study/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_3971_XYZ_/virtual_study/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_66_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" genomic_chart ")
                .post(baseUrlOfSut + "/api/sessions/DM/genomic_chart/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/DM/genomic_chart/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_67_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" custom_gene_list ")
                .post(baseUrlOfSut + "/api/sessions/_EM_2440_XYZ_/custom_gene_list/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_2440_XYZ_/custom_gene_list/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_68_postOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"WEM_U32_UYU`2\", \"checksum\":\"_EM_4059_XYZ_d\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_4060_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"ad3ccffcee23d1f2f959e9c9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6G\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"V^\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"33da6b80b7fd635ba8f632bb\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uN3ZE7qtY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE13Ee\", \"checksum\":\"gRjP27U@\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJr\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd53\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"GpeNpJ6Jv3W5x\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc14ccea5687e59b975cabd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Dihnzbexb1\", \"checksum\":\"UFMUUoUUS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGihrdL\", \"checksum\":\"cCMSCenbADBtWLYeq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3901_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3acdc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"custom_\\\\ata\" ")
                .post(baseUrlOfSut + "/api/sessions/custom_%5Cata/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_69_postOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F0\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3984_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"db3c279bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"Ep2rqOgHwH\", \"checksum\":\"_EM_3980_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3981_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6G3\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"43db8c80c8ec745ba8f6529b\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uUUZE;UtU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93ySX\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c687dfeee20be5b2ae8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"gTjP27U@\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_L\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd53\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"GpeNpJ6Jv3W5x\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"czzgBcSZZ\", \"checksum\":\"_EM_3985_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3986_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3987_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"pKUSYDUz\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTng\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc15ccda5687e59b885cabe\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzbexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYeq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3acdc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"e6d3a744d902abd6bd1effe8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" UUID ")
                .post(baseUrlOfSut + "/api/sessions/%7B%7D/comparison_session")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/%7B%7D/comparison_session"));
    }
    
    
    @Test(timeout = 60000)
    public void test_70_postOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6G\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uN7ZE7qtY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_3904_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8b32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"gTjP27U@\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7EYJ\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_i\", \"checksum\":\"OLunpX3j0Ae6j\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"group\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd53\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"_EM_3903_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgzU\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc14ccea5687e59b975cabd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzbexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYeq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3acdc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" true ")
                .post(baseUrlOfSut + "/api/sessions/%7B%7D/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/%7B%7D/EVOMASTER"));
    }
    
    
    @Test(timeout = 60000)
    public void test_71_putOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_3810_XYZ_\", \"checksum\":\"oiubUGleUVpUUUUhfr\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wGUN3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fedf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"mawcACStzK\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_=U_U702_UYZ[\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpULvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fhRC]FLw\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"9f4e191bbde08a3550e14af0\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYUUU\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4r9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97gE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"nDCz9LM\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" gnn1gIdZmbDpMSRPx ")
                .put(baseUrlOfSut + "/api/sessions/DIeIoM/EVOMASTER/54914806ed8bf4961503619b")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/DIeIoM/EVOMASTER/54914806ed8bf4961503619b"));
    }
    
    
    @Test(timeout = 60000)
    public void test_72_postOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oH1F\", \"checksum\":\"UGUZUVUUXYoSSU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3587_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db4c269bd54db864c10471ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"nFGSBw\", \"checksum\":\"cUUUUUsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8a0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"WEM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Ub\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f6429b\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1222_XYZ_\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"c676dfeef2fbd5b2bd9a3200\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"settings\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_H\", \"checksum\":\"UKunUUUj0?e6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9ddacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"Nx\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"lKQUS3_C\", \"checksum\":\"_EM_3589_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoE\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f7b503371bdea9931f501b86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_5781_XUU_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"A[8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TZSR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"fec14dcda6676e48ba76babd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_2567_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_fj4Pziz_97s\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"56a157f6df9c13a724f3607a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" custom_data ")
                .post(baseUrlOfSut + "/api/sessions/HexData/settings")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/HexData/settings"));
    }
    
    
    @Test(timeout = 60000)
    public void test_73_postOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"B7\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"409721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1222_XYZ_\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoE\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f7c402371bcea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_2567_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5575\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2569_XYZ_\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55915706ef9c03a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" group ")
                .post(baseUrlOfSut + "/api/sessions/NumberLong/main_session")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/NumberLong/main_session"));
    }
    
    
    @Test(timeout = 60000)
    public void test_74_postOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"B7\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"409721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FrvU\", \"checksum\":\"mUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"34ca7b70c7fc735bb7f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"g5fTbybWiLHPsUt\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"LZ42kE_uI7\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"0dUd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fb9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoE\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f7c402371bcea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGLK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_2567_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5575\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EK_2U69_XYU_\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55915706ef9c03a613f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"g\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d3a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" Timestamp ")
                .post(baseUrlOfSut + "/api/sessions/null/main_session")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/null/main_session"));
    }
    
    
    @Test(timeout = 60000)
    public void test_75_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oC1\", \"checksum\":\"4vqPa0aeJlQGz\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"cb4c27aad34ec763c1248fba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"HhUmUGsXb\", \"checksum\":\"hrEBFD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"LZ42kE_uI7\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"5e6842e9979d7ed44348d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"jUjjYZ:GPLH\", \"checksum\":\"gauZ_Gle8UqckvD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_534_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"9e4cb0fec022d302e967dac8\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"aIPOILS20Oc\", \"checksum\":\"j3Z0Tt\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"4\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f652ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"1qjXwLcVZiyrDS\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877397d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"NmKy\", \"checksum\":\"j5IUUBca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_535_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"d688dfedf2fcd5c2bd8a22f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33EeH\", \"checksum\":\"_EM_193_XYZ_X\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DYJA\", \"type\":\"settings\", \"_id\":{\"$oid\":\"6ed0bfbafc2e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTcawcSg\", \"checksum\":\"_EM_194_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"settings\", \"_id\":{\"$oid\":\"0140b0aed798956dafbaac54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_536_XYZ_\", \"checksum\":\"HNPWHPh8U_M4g\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_537_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"266cf03fbfc4fe2b5ffb87ff\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"sbwG5imtGzw1d\", \"checksum\":\"_EM_538_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Z_dO5qxx0zBOEBpqI\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"0ecea338afd96b9ecffaa363\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"hm\", \"checksum\":\"k2Np46SSdR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"r5ggW\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c9fda4e0f1a3bbc18d27182a\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"cUOh\", \"checksum\":\"_EM_256_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"pPX3mxMw496bI\", \"type\":\"settings\", \"_id\":{\"$oid\":\"ed4e0c6cecbe543d94e0a0e6\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"WWxxwAID2m7V6yUR\", \"checksum\":\"K4k0fOMqzw2UQnp\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"cC372wPBJ\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"14dbc0d01b57edd6bcbfa2ec\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Ss\", \"checksum\":\"ZZgY1bP79yjw\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"f8\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"c456395ccec48fdb49fbe8d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_102_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/wG2N3Nnh/EVOMASTER/ad3cc0fedf23e212e968eac9")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/wG2N3Nnh/EVOMASTER/ad3cc0fedf23e212e968eac9"));
    }
    
    
    @Test(timeout = 60000)
    public void test_76_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"L1AC9\", \"checksum\":\"_EM_1068_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"6hx1WBcVTXd\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"8e35868903cba2d8d44df5a7\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"WuUpdmyp05i\", \"checksum\":\"ojqoWNdLJwMN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"8MvLaJCBGT7RHwAc\", \"type\":\"settings\", \"_id\":{\"$oid\":\"4c2bdc2f4b93766fb1393c8f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"9>Ba7c8\", \"checksum\":\"_EM_1077_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"1E3JB*t_m\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"5a153366c155bbfff726a786\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"7QX2Rh2pgxc\", \"checksum\":\"lPL7I\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"En3yAIqyFNsh0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f0e3407fdbb6a8491fdb2d8f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"mEZ9nF\", \"checksum\":\"lppV8KeSdPj\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1078_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"9dade9c87e3edf1a98cfb9a9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"KGZQB2j4mOCbDEg\", \"checksum\":\"qpd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1079_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"f62c644642a5f4caa1e2e53e\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"FI2JOZiPgmnPDY3\", \"checksum\":\"qH2uZp5XB\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"zsP4G_ut77wiSJu\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"fbfc074f5db4dd8aa9c475ef\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"UUUUobzUUU0WUWU:\", \"checksum\":\"vmeI\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_278_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"dc2dae2f6cb041ee7dbd49d7\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"fieMcXyDE4Wd00F\", \"checksum\":\"CIdZdIlrC5pOo\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Wu\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"dad7bb99ca2bd2abfeedfddb\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"PBwJE\", \"checksum\":\"kOIDZ5s\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1070_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"6902dae80d5df1ede0fc1632\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"\", \"checksum\":\"VKCuHErWi\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"36OtFelWRnUNH9\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ad7dd3ead6b0ba0b2bd84ca6\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"7p_j\", \"checksum\":\"mTiS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"80b754e2989480a84fe03b28\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_102_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/En3yAIqyFNsh0r/group/query?EMextraParam123=_EM_101_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/En3yAIqyFNsh0r/group/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_77_putOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F0\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3984_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"db3c279bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"Ep2rqOgHwH\", \"checksum\":\"_EM_3980_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3981_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6G3\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"43db8c80c8ec745ba8f6529b\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uUUZE;UtU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93ySX\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SoavPpjQV\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2be8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"gTjP27U@\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd53\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"GpeNpJ6Jv3W5x\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"czzgBcSZZ\", \"checksum\":\"_EM_3985_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3986_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTng\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc15ccda5687e59b885cabe\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzbexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYeq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3acdc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"e6d3a744d902abd6bd1effe8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" Q9k_6OAQfBmfNN ")
                .put(baseUrlOfSut + "/api/sessions/DIeKoM/custom_data/%5C")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_78_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"L1AC9Q\", \"checksum\":\"9lX97\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"6hx1WBcVTXd\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"8e35868903cba2d8d44df4a7\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"WuUpdmyp05i\", \"checksum\":\"ojqoWNdLJwMN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"8MvLaJCBGT7RHwAc\", \"type\":\"settings\", \"_id\":{\"$oid\":\"4c2bdc2f4b93766fb1393c8f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"9NBa7g8\", \"checksum\":\"OugXLAbfxMU9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"1E3JB2t_m\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"59143377d246cbfff826c797\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_367_XYZ_\", \"checksum\":\"_EM_467_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"En3yAIqyFNsh0r\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"f0e3406fdbb6a8491fdb2d8f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"UUM_U6U_XYZU\", \"checksum\":\"A8u4\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_369_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"9dade9c77d3edf1a98cfb9a9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"1yB\", \"checksum\":\"_EM_370_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"eLaMZz\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f62c554642a5f4caa1e2e52e\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"FM2JOZiPgmnPDY3\", \"checksum\":\"_EM_371_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_468_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"ebfdf74e6db4dc8aa9b375e0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"<H5oobv4AK0WWW09\", \"checksum\":\"\u0086meI5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Tcw\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"dd1dbd2f7cb041df6dbd4ac7\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"UU<WUUTkpUfUeUU\", \"checksum\":\"YOQO1Dk\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"v7nMZZLKRQ\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"c366813bbfd8bb4d8dcded65\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"CUHbcc\", \"checksum\":\"OUvUK4\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_469_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4598aabdb21775f32a7019c\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"awAVb24gwyip_1\", \"checksum\":\"SZbeTWruA\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"rqFRx17Zai9cMAX\", \"type\":\"group\", \"_id\":{\"$oid\":\"948cad4938efb6aeb0be6c2a\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"Bc3RZ\", \"checksum\":\"H\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SfwWsUvD6lyQxzg\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"67b6fa49e3f169a79dcffb0b\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_470_XYZ_\", \"checksum\":\"8Y\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"rL1VLC6Smrh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"84b2ceb1e1f8ba6f395eb2ec\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_471_XYZ_\", \"checksum\":\"_EM_472_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_473_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"4e2b4b94d67e1febde9851d3\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"cM3Hu2_PalSWTFr\", \"checksum\":\"aLzzze3WAHLWw1l\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Fdo\", \"type\":\"settings\", \"_id\":{\"$oid\":\"b378f2b6edf1aa3a51d92c00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_RaDCWTz\", \"checksum\":\"qLHydpkS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"61OYkPVly\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"6f0b40010b3eab0fd807b7c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/cLaMZz/settings/query?" + 
                    "field=%24undefined&" + 
                    "value=&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/cLaMZz/settings/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_79_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"L1AC9\", \"checksum\":\"_EM_1068_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"6hx1WBcVTXd\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"8e35868903cba2d8d44df5a7\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"WuUpdmyp05i\", \"checksum\":\"ojqoWNdLJwMN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"8MvLaJCBGT7RHwAc\", \"type\":\"settings\", \"_id\":{\"$oid\":\"4c2bdc2f4b93766fb1393c8f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"9NBa7c8\", \"checksum\":\"OughLAbfxMU9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"1E3JB2t_m\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"5a153366c155bbfff726a786\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"7aX2Rh2pgxc\", \"checksum\":\"lPL7I\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"En3yAIqyFNsh0r\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f0e3407fdbb6a8491fdb2d8f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"mEZ9nF\", \"checksum\":\"_EM_275_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"9dade9c87e3edf1a98cfb9a9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1069_XYZ_\", \"checksum\":\"qpd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_277_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f62c544642a5f4caa1e2e53e\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"FI2JOZiPgmnPDY3\", \"checksum\":\"qH2uZp5XB\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"zsP4G_ut77wiSJu\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"fbfc074f5db4dd8aa9c475ef\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"UUUUobzUUU0WUWU:\", \"checksum\":\"vmeI\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_278_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"dc2dae2f6cb041ee7dbd49d7\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"fiaMcXyDE4Wd00F\", \"checksum\":\"CIdZdIlrC5pOo\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Wu\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"cbd7cc8aba2cd2abedfdeddb\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"PBwJE\", \"checksum\":\"kOIDZ5s\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1070_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"6902dae80d5df1ede0fc1632\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_110_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/e%5CaMZz/custom_gene_list/query?" + 
                    "field=_EM_108_XYZ__&" + 
                    "value=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_80_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_2888_XYZ_Y\", \"checksum\":\"_EM_2890_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269cd33db864c11480b9\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_2891_XYZ_\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"ad4cc0fddf22e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqxU\", \"checksum\":\"_EM_2892_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1222_XYZ_\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"1142b1aeb7a9756c9fcabd44\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_9U2U_XYX_\", \"checksum\":\"JuqfRoxXB_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7v\", \"type\":\"settings\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoEo\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"f7c402371bcea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYUYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Tl3\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"7e6010eaebaee0baf49751bb\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNKr\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"group\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_2567_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2569_XYZ_\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55915706ef9c03a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_/cF97fE\", \"checksum\":\"ZuZhGT\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"b8f57fdbffaa9c46134b4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"2TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/zVjK19ZjMi6kUsN/custom_data/query")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/zVjK19ZjMi6kUsN/custom_data/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_81_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"5e9721fb778f6fc44557c8c0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fedf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUiU7UUKUmU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"settings\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"EM_tainted_map\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"6ec0bfbaed1e6d90e5da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"v8NBIx\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"]EMU17U0_XYZU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"N7\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"a26bcb9ccb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoEc\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b75\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_4027_XYZ_\", \"checksum\":\"Ac8RvUTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"0dd04ddda6677e59ba65aacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDL\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYUUU\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"956cfdbc8ac1aeaef4e154e3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4r9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"ieCOL5kk_3cF97fE7\", \"checksum\":\"KIlQ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"40rSR\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"c8f480dce2a89d67144d6da6\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/UUID/virtual_study/query?" + 
                    "field=%24maxKey&" + 
                    "value=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/UUID/virtual_study/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_82_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"UG1G\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"cb3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv7\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_2930_XYZ_U\", \"checksum\":\"_EM_1136_XYZ_X\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2937_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"ad4cc00ddf23e222f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_1097_XYZ_\", \"checksum\":\"1OLB9EkhAjEjTeKJ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_262_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8ec735ba8f6429b\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1140_XYZ_\", \"checksum\":\"UE\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2931_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f4fb70ec6da9ead877397d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_2932_XYZ_\", \"checksum\":\"_EM_2933_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33EeHL\", \"checksum\":\"_EM_193_XYZ_7\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DaJG\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfaaec0f5d90f4da3444\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTc`wcSg\", \"checksum\":\"z1pf6qynRLmlI\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YnuJI\", \"type\":\"settings\", \"_id\":{\"$oid\":\"1151b1aec6a9856c9ecabd55\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"*UL2UUUd\", \"checksum\":\"_EM_263_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"M5\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"926bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_2934_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5d\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpSPvXJ0y\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"c00f19aab6799ebb7c9ae98d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_lU3sVkUUUCjUUT\", \"checksum\":\"_EM_2938_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UAnOhtoru1n\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"f6b413281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"`U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e3f0a1dbddf7a154ff23a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_1137_XYZ_\", \"checksum\":\"q4USZ9Uo3UY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UeCiUQUiDh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7f6021dafcaff1acf4a741bc\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJh69DT0By4Rg\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"eed14dcea6766d68b985bbcd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"aAv6y\", \"checksum\":\"nfNqbRJYy_42_cK\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"vSaIyPxUSIPb\", \"type\":\"group\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5\", \"checksum\":\"U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2939_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"56814707ef9df2a715e4519a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"90tjJlg2UZfug\", \"checksum\":\"JIlpBU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1102_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"745a1fac8cbfbdbd04f255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"MN4W9UEUISUSUUVU\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1510_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"kUCOL1kkU3cHI7f2q\", \"checksum\":\"_EM_2940_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4UY9huVEjhUbdUf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"c8f58edce0aa9d47134c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_2935_XYZ_\", \"checksum\":\"iS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2941_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"c4c4a555c9f39bd6ac1fd2b8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/UUID/EVOMASTER/query?" + 
                    "field=%24type&" + 
                    "value=rhAEkhAyaC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/UUID/EVOMASTER/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_83_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"UG1G\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"U6U\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"cb3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_2878_XYZ_\", \"checksum\":\"_EM_2879_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"LZ42kE_uI7\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5f9721fa889f6fc42447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"W\", \"checksum\":\"_EM_1136_XYZ_m\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3Nnp\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"ad3db01eef23e322f867ead8\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_1097_XYZ_\", \"checksum\":\"1OLB9EkhAjEjTeKJ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"w9_K18HJF2PBo\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8ec735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1140_XYZ_\", \"checksum\":\"_EM_1882_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"u_67ITxBQ\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f4fb70ec6da9ead877397d6f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6MfD\", \"checksum\":\"j5HXI2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1883_XYZ_\", \"checksum\":\"_EM_1884_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DaJG\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"6ed0bfaaec0f5d9004da3444\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTcawcSg\", \"checksum\":\"_EM_633_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YnuJI\", \"type\":\"settings\", \"_id\":{\"$oid\":\"1151b1aec6a9856c9ecabd55\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"*eL2cubd\", \"checksum\":\"5sZMPJE\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"EM_tainted_map\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"926bdb9ccc44bc15db865e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1507_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpSPvXJ0y\", \"type\":\"group\", \"_id\":{\"$oid\":\"c00f19aab6799ebb7c9ae98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_lU3sVkUUUCjUUS\", \"checksum\":\"bQT8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UAnNhtoru1n\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7b403280bccaa92112ffa85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xUTYU9j0U\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"8e3f0a1dbdef7a154ff23a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_1137_XYZ_\", \"checksum\":\"qUQSZUMoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2880_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7f6021dafcaff1acf4a741bc\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJh69DT0By4Rgg\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"eed14dcea6766d68b985bbcd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"aIv6y\", \"checksum\":\"_EM_1508_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1509_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"307ab69f9874028a50ae5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5\", \"checksum\":\"I\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"J7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"56814707ef9df2a715f4519a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"90tjJlw2UZfug\", \"checksum\":\"JIlpBU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"JSpuE\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"745a1fbc9bcfcdbd04f155c2\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"MN4W9UEUISUSUUVU\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1510_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"kUCOL1kkU3cHI7f2\", \"checksum\":\"_EM_1511_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4UY9huVEjhUbdUf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"c8f58edcefaa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_1512_XYZ_Z\", \"checksum\":\"_EM_2881_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPx\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"c5c4a645ca039bd6bc1ee1c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/U/group/query?" + 
                    "field=%24binary&" + 
                    "value=rhAEkhAyaC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/U/group/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_84_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"UG1G\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"cb3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"egFcuLit_83QV8kW\", \"checksum\":\"drEBFDsv7h\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"5f8721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"U\", \"checksum\":\"_EM_1136_XYZ_m\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3Nnh\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc00ddf23e212f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_1097_XYZ_\", \"checksum\":\"1OLB9EkhAjEjTeKJ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"w9_K18HJF2PBo\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8ec735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1140_XYZ_\", \"checksum\":\"7C99g5oQ7b0\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"custom_gene_list\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"f4fb70dc6da9ead877397d6f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6Mf\", \"checksum\":\"j5HXI2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"c687eeeef2edd5b2be9932e0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1883_XYZ_\", \"checksum\":\"_EM_1884_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DaJG\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"6ed0bfaaec0f5d9004da3444\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTcawcSg\", \"checksum\":\"_EM_633_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YnuJIq\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"1151b0aec6a9856c9ecabd55\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"*eL2cubd\", \"checksum\":\"5sZMPJE\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"EM_tainted_map\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"926bdb9ccc44bc15db865e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1507_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpSPvXJ0y\", \"type\":\"group\", \"_id\":{\"$oid\":\"c00f19aab6799ebb7c9ae98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_lU3sVkUUUCjUUT\", \"checksum\":\"bQU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UAnOhtoru1n\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f6b413281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_2115_XYZ_\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2116_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"8e300a1dbddf7a154ff23a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"3s\", \"checksum\":\"q4USZ9Uo3UY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UeCiUQUiDh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"8e6132eafcaff2bce5a831cc\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJh69DT0By4Rg\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"eed13dcea6766d68b985bbcd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"iIv6y\", \"checksum\":\"_EM_1508_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1509_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"307ab69f9874028a50ae5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2117_XYZ_\", \"checksum\":\"IQ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"J7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"56814707ef9df2a715f3519a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"90tjJlw2UZfug\", \"checksum\":\"JIjpBU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"JSptE\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"745a1fbc9bcfcdbd04f155c2\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"MN4W9UEUISUSUUVUU\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"XMN9JhTmBkhm\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e319a96fb8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"kUCOL1kkU+cHI7f2\", \"checksum\":\"OW0nAOHhA4\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2118_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"c8f58edcefaa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_1512_XYZ_ZU\", \"checksum\":\"_EM_2119_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2120_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"c5c4a645ca039bd6bc1ee1c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/U/main_session/query?" + 
                    "field=%24symbol&" + 
                    "value=rhAEkhAyaC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/U/main_session/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_85_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"UG1G\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"cb3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv7\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"E2\", \"checksum\":\"_EM_1136_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"EM_tainted_map\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc00dde23e212f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_1097_XYZ_\", \"checksum\":\"1OLB9EkhAjEjTeKJ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"vzqtqH26kOv\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8ec735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"M\", \"checksum\":\"UE\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UU63ITUBQ\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f4fb70ec6da9ead877397d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6MfD\", \"checksum\":\"j5HYI2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d777cfddf2fbd6b2cd8a21f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33EeHL\", \"checksum\":\"_EM_193_XYZ_7\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DaJG\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfaaec0f5d90f4da3444\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTcawcSg\", \"checksum\":\"M53Tg09khb1\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YouJI\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"1151b1aec6a9856c9ecabd55\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"*eL2cubd\", \"checksum\":\"_EM_263_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"M5\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"926bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1507_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpSPvXJ0y\", \"type\":\"group\", \"_id\":{\"$oid\":\"c00f19aab6799ebb7c9ae98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_lU3sVkUUUCjUUT\", \"checksum\":\"bQU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UAnOhtoru1nr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f6b413281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e3f0a1dbddf7a154ff23a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"iUbqUVnHZJ\", \"checksum\":\"q4USZ9Uo3UY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UeCiUQUiDh\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"7f6021dafcaff1acf4a741bc\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJh69DT0By4Rg\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"eed14dcea6766d68b985bbcd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2422_XYZ_\", \"checksum\":\"_EM_1508_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"b2KINVqqg1s\", \"type\":\"group\", \"_id\":{\"$oid\":\"3079b69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5\", \"checksum\":\"_EM_2423_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"J7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"56823707ef9de2a815e350aa\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"90tjJlg2UZfug\", \"checksum\":\"JIlpBU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1102_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"745a1fac8cbfbdbd04f255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"MN4W9UEUISUSUUVU_\", \"checksum\":\"cCMSCUnbADUUWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"pLDIKVX4MjhhXxCE\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"kUCOL1kkU3cHI7f2\", \"checksum\":\"_EM_1511_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4UY9huVEjhUbdUf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"c8f58edce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_1512_XYZ_\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxh\", \"type\":\"group\", \"_id\":{\"$oid\":\"c4c3a644cb048ae6cc1ee2c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/H/genomic_chart/query?" + 
                    "field=%24oid&" + 
                    "value=rhAEkhAyaC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/H/genomic_chart/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_86_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"group\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FyUW\", \"checksum\":\"mUgU7UUKUm6a\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb2\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1222_XYZ_\", \"checksum\":\"GR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"yfiE\", \"checksum\":\"j5GXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2162b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoE\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f7c402371bcea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"_EM_2567_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2569_XYZ_\", \"checksum\":\"_EM_2570_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"55915706ef9c03a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_3652_XYZ_\", \"checksum\":\"i9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/SZR1fXa39/virtual_study/query?" + 
                    "field=%24numberLong&" + 
                    "value=rhAEkhAyaCxP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/SZR1fXa39/virtual_study/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_87_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_4059_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_4060_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"ad3ccffcee23d1f2f959e9c9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6G\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"V^\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"33da6b80b7fd635ba8f632bb\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uN3ZE7qtY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"gTjP27U@\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd53\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_4183_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5x\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc14ccea5687e59b975cabd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"54914806ec8c0596050360ab\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_4184_XYZ_\", \"checksum\":\"UFMUUoUUS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYeq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3acdc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/NSXAsbUS%3CHDd/main_session/query?" + 
                    "field=%24dbPointer&" + 
                    "value=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/NSXAsbUS%3CHDd/main_session/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_88_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UUP\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd44cb764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDov\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"group\", \"_id\":{\"$oid\":\"5f86200a888f60d53446d7b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_4191_XYZ_\", \"checksum\":\"oiubUGleUVpUUUUhe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"qUgU7UUKUm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1222_XYZ_\", \"checksum\":\"_EM_4192_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fEGRoj\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e3fb71ec6da9eac876398d7d\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"cxw\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7D]J\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0afb9ed0d6c91e4da3544\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j.Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"2143b1afb7b9756c9edadd44\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_3654_XYZ_\", \"checksum\":\"R7NZ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"Y\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"f`AvqpVPUUJ0\", \"type\":\"group\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_1779_XYZ_\", \"checksum\":\"^QU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_4193_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f7c402371bcea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYu9j0S\", \"checksum\":\"_EM_3655_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e5f090caee17a355ef149f0\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"j5HXA2ca\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"cdhRsmuU0kDyr9_1\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"XTmbgmx\", \"checksum\":\"kGolJ9ja\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"55915706ef9c03a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"845c0ebc8acfaeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtoBYzU\", \"type\":\"settings\", \"_id\":{\"$oid\":\"e319a95fc8bb66ea03addd9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPxe\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/false/main_session/query?" + 
                    "field=%24date&" + 
                    "value=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/false/main_session/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_89_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oGUF\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_4111_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad3cdf0ede33d201e877e9ca\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6A\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"43da8a70c8fc736ba8f642ac\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a31f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"ieo0w9q529RvDFqH\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"cEU_U702_UYZ[u\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_4338_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLUEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5465\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"54914806ed8bf4961403619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb3\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPqYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"855c0ecd8ab0adaef5e245d4\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_4339_XYZ_\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e219a96fc7ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/SMHU/virtual_study/query?" + 
                    "field=%24numberInt&" + 
                    "value=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/SMHU/virtual_study/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_90_getOnQueryReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6Pf\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_\", \"checksum\":\"oiubUGleUVpUUUUh\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhF\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"ad4cc0fddf23e212f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"Fqv\", \"checksum\":\"eLgO7MCKmm6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"V\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1222_XYZ_\", \"checksum\":\"_EM_1772_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297e6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6MfD\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d687dfeef2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"FQs0nPl\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"6eefafcbed2f6d80e5db2545\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1728_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"U\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUPvXJ0\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_l43sVkNw1CjVeXs\", \"checksum\":\"bQU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuGoE\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f6b413281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9n0S\", \"checksum\":\"rV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"U\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a255ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lU]SYLUU\", \"checksum\":\"_EM_1773_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"3eCiIQjiDh\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"7f6021dafcaff1abf4a741ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"LZ42kE_uI7\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"fec14dcda6677d59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"settings\", \"_id\":{\"$oid\":\"216ab78f8764f2796fb05465\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5N\", \"checksum\":\"_DM_1099_XUUW\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"55915706ef9cf3a614f3608a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"845c0ebc8ac0adaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzU\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97f\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4c[9huVEjl4bdEf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3TCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPx\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1ee0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_1774_XYZ_/genomic_chart/query?" + 
                    "field=%24type&" + 
                    "value=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/_EM_1774_XYZ_/genomic_chart/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_91_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/8aJXv/custom_data/nE4TmmkCt5iLno0f")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/8aJXv/custom_data/nE4TmmkCt5iLno0f"));
    }
    
    
    @Test(timeout = 60000)
    public void test_92_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/8aJWv/custom_gene_list/nE4TmmkCt5iLno0?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/8aJWv/custom_gene_list/nE4TmmkCt5iLno0"));
    }
    
    
    @Test(timeout = 60000)
    public void test_93_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/_EM_182_XYZ_/virtual_study/J")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_182_XYZ_/virtual_study/J"));
    }
    
    
    @Test(timeout = 60000)
    public void test_94_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 404 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/sessions/_EM_759_XYZ_/genomic_chart/cY?EMextraParam123=_EM_760_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_759_XYZ_/genomic_chart/cY"));
    }
    
    
    @Test(timeout = 60000)
    public void test_95_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" _EM_15_XYZ_ ")
                .put(baseUrlOfSut + "/api/sessions/_EM_13_XYZ_/main_session/_EM_14_XYZ_?EMextraParam123=_EM_16_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_13_XYZ_/main_session/_EM_14_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_96_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "comparison_session")
                .d("{\"id\":\"I1blmj\", \"checksum\":\"twKgrow2DPg\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"WNFSLq8\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"f3e3583f476e015b51aec78d\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_GcMdrNdf5Nkb\", \"checksum\":\"q\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"K4K8J1Jo4\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"126fced2107c529cd01c06df\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lXkoNU\", \"checksum\":\"mRs3Jo11\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7BSo\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"f742def8560fa00e27cb42db\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"KPl8iLmlGZLhtVs\", \"checksum\":\"jxJk\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"P3qjoGOPtaV\", \"type\":\"group\", \"_id\":{\"$oid\":\"ba2e615222d955b8cf5a7165\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/WK8pAmwzlpy01R8/custom_gene_list/_EM_29_XYZ_?EMextraParam123=_EM_3_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/WK8pAmwzlpy01R8/custom_gene_list/_EM_29_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_97_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/sessions/Schj_CRykls0/main_session/_EM_203_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/Schj_CRykls0/main_session/_EM_203_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_98_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_466_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/9mTjM/genomic_chart/_EM_464_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/9mTjM/genomic_chart/_EM_464_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_99_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_505_XYZ_")
                .contentType("application/json")
                .body(" \"EBqpWdb6LXAQs7ya\" ")
                .put(baseUrlOfSut + "/api/sessions/3jWXqnC4mgZ/group/_EM_503_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/3jWXqnC4mgZ/group/_EM_503_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_100_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" 8moOr ")
                .put(baseUrlOfSut + "/api/sessions/_EM_854_XYZ_/custom_gene_list/_EM_855_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_854_XYZ_/custom_gene_list/_EM_855_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_101_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" YIOFuUSGJPGBRzW ")
                .put(baseUrlOfSut + "/api/sessions/c6hSFOUd9Nvp/virtual_study/_EM_1514_XYZ_?EMextraParam123=_EM_1515_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/c6hSFOUd9Nvp/virtual_study/_EM_1514_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_102_putOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_3960_XYZ_\", \"checksum\":\"vGG[oRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"5e9721fb778f6fc44557c8c0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubQUleTUp]UWUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3961_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fedf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"EM_tainted_map\", \"checksum\":\"mUiU7UWKUmU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"fq5MlcsO8n5j\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"EM_tainted_map\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6d\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ka\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"v8NBIx\", \"checksum\":\"OLunpX3j8Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"group\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"]EMU17U0_XYZU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"N7\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"a26bcb9ccb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZq\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f7c402470cdfa9910e40fb85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e3f081cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKY[YLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3962_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e5112f9eb9ef0ca04a751ab\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmT\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"LZ42kE_uI\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"0dd04ddda6677e59ba75aacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDL\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"956cfdbc8ac1aeaef4e154e3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4r9uDQI2HGhrdM\", \"checksum\":\"_EM_3963_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"ieCOL9kk_3cF97fE7\", \"checksum\":\"KIlQ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"40rSZ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce1a99d57144d5da6\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" Q9k_8OAQfBmfN ")
                .put(baseUrlOfSut + "/api/sessions/DAeIoI/comparison_session/e319a96fc8ac66eaf3addc9d")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/DAeIoI/comparison_session/e319a96fc8ac66eaf3addc9d"));
    }
    
    
    @Test(timeout = 60000)
    public void test_103_putOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"5e9721fb778f6fc44557c8c0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc0fedf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUiU7UUKUmU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"settings\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"EM_tainted_map\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"6ec0bfbaed1e6d90e5da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"v8NBIx\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"]EMU17U0_XYZU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"N7\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"a26bcb9ccb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoEc\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b75\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_4027_XYZ_\", \"checksum\":\"Ac8RvUTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"0dd04ddda6677e59ba65aacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDL\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYUUU\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"956cfdbc8ac1aeaef4e154e3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4r9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"ieCOL5kk_3cF97fE7\", \"checksum\":\"KIlQ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"40rSR\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"c8f480dce2a89d67144d6da6\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" Q9k_8OAQfBmfN ")
                .put(baseUrlOfSut + "/api/sessions/_EM_4028_XYZ_/comparison_session/845c0ebc8ac0aeaef4e255d3")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_4028_XYZ_/comparison_session/845c0ebc8ac0aeaef4e255d3"));
    }
    
    
    @Test(timeout = 60000)
    public void test_104_putOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_4111_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad3cdf0ede33d201e877e9ca\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6A\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"43da8a70c8fc736ba8f642ac\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"UUUXA2_a\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a31f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"ieo0w9q529RvDFqH\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[u\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTnO\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR9fXa39\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"54914806ed8bf4961403619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4r9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" _EM_4682_XYZ_ ")
                .put(baseUrlOfSut + "/api/sessions/_EM_4112_XYZ_/comparison_session/_EM_3797_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_4112_XYZ_/comparison_session/_EM_3797_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_105_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_456_XYZ_\", \"checksum\":\"9lX9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_457_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"7e34758a03bcb2d9d44c05a7\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"WuUpdmyq05i\", \"checksum\":\"_EM_458_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_459_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"4c2bdc2f4b93766fb1393c8f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_460_XYZ_\", \"checksum\":\"OughLAbfxMU9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"1E3JB2t_m\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"5a143376d156cc0ff726b886\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"7aX2Rh2pgxc\", \"checksum\":\"lPL7I\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"En3yAIqyFNsh0r\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f0e3407fdbb6a8491fdb2d8f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"mEZ9nF\", \"checksum\":\"_EM_275_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"9dade9c87e3edf1a98cfb9a9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_276_XYZ_\", \"checksum\":\"qpd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_277_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f62c554642a5f4caa1e2e53e\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_461_XYZ_\", \"checksum\":\"qH2uZp5XB\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"zsP4G_ut77wiSJu\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"fbfcf73f5cb4ec7aa9d584ff\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"4H5oobv4AK0WWW093\", \"checksum\":\"vmeI\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_278_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"dc2dbe2f6cb041ee7dad49d7\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"FGzk3sFnuacz0xMa\", \"checksum\":\"9V57ebCs017\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"tSS1XhiT\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"a98e51bb83cafbfc27af758a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"r1YlvVD9aMW\", \"checksum\":\"19\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"jRHm8I\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d71babd324f4e8e2c9271ba2\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"fNTZT2Jn4sYtFkj\", \"checksum\":\"_q7fFAZ_h\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"c\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"5cdd84deccdbe5ad7fc6aedd\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"tTBmYhdA2cuxmK\", \"checksum\":\"b5_jbVRh\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ecd5ced3a186c0fb2b8ed312\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJyQ5l5axEaT\", \"checksum\":\"BFkft5y\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"kefSud3_Bq03\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"887f8a538e3b80dc4c190f15\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"b\", \"checksum\":\"1Os3GFgrt\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"n6_tfnKqxrb\", \"type\":\"settings\", \"_id\":{\"$oid\":\"db19bf8d147a8157ee0c5a66\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"9DliGn7\", \"checksum\":\"j\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"9VEMKD2mpeTnCvY\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"6da0b9eabab8ddb6b1bf327d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"S08tW5nTF\", \"checksum\":\"JwSaMR\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"9y6\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"4e640a0dd432c3a1f226a0e9\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_279_XYZ_/settings/_EM_100_XYZ_?EMextraParam123=_EM_101_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_279_XYZ_/settings/_EM_100_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_106_putOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F0\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3984_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"db3c279bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"Ep2rqOgHwH\", \"checksum\":\"_EM_3980_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3981_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6G3\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"43db8c80c8ec745ba8f6529b\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uUUZE;UtU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93ySX\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"c687dfeee20be5b2ae8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"gTjP27U@\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_L\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd53\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"GpeNpJ6Jv3W5x\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"czzgBcSZZ\", \"checksum\":\"_EM_3985_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3986_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3987_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"pKUSYDUz\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTng\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc15ccda5687e59b885cabe\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzbexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYeq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3acdc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"e6d3a744d902abd6bd1effe8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" Q9k_6OAQfBmfNN ")
                .put(baseUrlOfSut + "/api/sessions/DIeKqM/settings/844c1dbc9ad1aeaff4e355d3")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/DIeKqM/settings/844c1dbc9ad1aeaff4e355d3"));
    }
    
    
    @Test(timeout = 60000)
    public void test_107_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"_EM_456_XYZ_\", \"checksum\":\"9lX9\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_457_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"7e34758a03bcb2d9d44c05a7\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"WuUpdmyq05i\", \"checksum\":\"_EM_458_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_459_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"4c2bdc2f4b93766fb1393c8f\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_460_XYZ_\", \"checksum\":\"_EM_1458_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"1E3JB2t_m\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"5a143376d156cc0ff726b886\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"7aX2Rh2pgxcv\", \"checksum\":\"UPL7U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"En3yAIqyFNsh0r\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"f0e3407fdbb6a7491fdb2d8f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"mEZ9nF\", \"checksum\":\"_EM_275_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"9dade9c87e3edf1a98cfb9a9\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_276_XYZ_\", \"checksum\":\"qpd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_277_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f62c554642a5f4caa1e2e53e\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_461_XYZ_\", \"checksum\":\"qH2uZp5XB\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"zsP4G_ut77wiSJu\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"fbfcf73f5cb4ec7aa9d584ff\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"4H5oobv4AK0WWW093\", \"checksum\":\"vmeI\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_278_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"dc2dbe2f6cb041ee7dad49d7\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"FGzk3sFnuacz0xMa\", \"checksum\":\"9V57ebCs017\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"tSS1XhiT\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"a98e51bb83cafbfc27af758a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"r1YlvVD9aMW\", \"checksum\":\"19\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"jRHm8I\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d71babd324f4e8e2c9271ba2\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"pXgZ\", \"checksum\":\"pjy1weEZa\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"settings\", \"_id\":{\"$oid\":\"c4ffda9b2b84f1adb30f4ee4\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"WGOz4EQ7\", \"checksum\":\"XK_jrAo\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"dqajqean3\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"fd6683e55e6fab1e0adac097\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"5oUpUBVt2m6iLj\", \"checksum\":\"lV`\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"K1UU7unUUkgiMctU\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8a7f99b3ea5bf04c7a6e8963\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"PYZ7c\", \"checksum\":\"Ur69dgYzSfNnn1l\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"qbGaza7hxTcpRas\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5bec9668dafb20e3bf78f2e2\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"imnVJaNb4KG2\", \"checksum\":\"uBt_LoC\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd99b8veP08N7j\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"4d6bf4aec532d7c9d85ceb2a\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"qOPy3JN9ZANp\", \"checksum\":\"\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"buB\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"fdcb812944c5892c6d610ae1\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_279_XYZ_/virtual_study/_EM_100_XYZ_?EMextraParam123=_EM_101_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_279_XYZ_/virtual_study/_EM_100_XYZ_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_108_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"wC1\", \"checksum\":\"_EM_671_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"P6aRPSpLbR0dwr2\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"cb4c28bbc25db754c1239fb9\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"44Cf7\u0084ualHNBg56u\", \"checksum\":\"hrEBFD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_672_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"5e6842e9979d7ed44347d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"jUjjYZ8GPLH\", \"checksum\":\"gauZ_Gle8UqckvD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_642_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"9d4cc0ffee24e312c968daca\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"aIPOILS20Oc\", \"checksum\":\"j3Z0Tt\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"4\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f652ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_673_XYZ_\", \"checksum\":\"_EM_674_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_191_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"e5fa6ffc6ea8fac767297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_192_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39W\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"d687dfedf2fcd5c2bd8a22f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33EeH\", \"checksum\":\"_EM_193]XYZ_X\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_551_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"6dd0afbafd2d7e90f5da3433\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"UEM_55UUUZU_\", \"checksum\":\"R\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJ\", \"type\":\"settings\", \"_id\":{\"$oid\":\"0140b0aed798956dafbaac54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_675_XYZ_\", \"checksum\":\"HNPWHPh8U_M4g\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_676_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"247be02eafc61e1a6eec68fe\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_553_XYZ_\", \"checksum\":\"_EM_554_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Z_dO5qxx0zBOEBpqIz\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"0ecea338afd96b9ecffaa363\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_677_XYZ_\", \"checksum\":\"AgPEKgVO9VaDcQ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"r5ggW\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"c9fca4e0f1a3bbc18d27182a\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"cUOh\", \"checksum\":\"_EM_256_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"d8WChPc1mghB3aH\", \"type\":\"settings\", \"_id\":{\"$oid\":\"ee3f1c7bfdce643da4e0a0e6\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_643_XYZ_\", \"checksum\":\"0VS8__wxtVBfRlV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_644_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"faaccaaae5e3ed48908d353f\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Oi2bmljvG\", \"checksum\":\"_EM_678_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"vV3\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ce69a1de784aa0f697fbd6cc\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_102_XYZ_")
                .get(baseUrlOfSut + "/api/sessions/wG2N3Nnh/comparison_session/42d97a7fc8ec825cb7e5539c")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/wG2N3Nnh/comparison_session/42d97a7fc8ec825cb7e5539c"));
    }
    
    
    @Test(timeout = 60000)
    public void test_109_putOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_4111_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad3cdf0ede33d201e877e9ca\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6A\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"43da8a70c8fc736ba8f642ac\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"_EM_4313_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a31f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"ieo0w9q529RvDFqH\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"settings\", \"_id\":{\"$oid\":\"e7c512471bcda9821f400b84\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYUUUp\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4r9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzMi\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"i\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" Q9k_8OAQfBmfN ")
                .put(baseUrlOfSut + "/api/sessions/_EM_4112_XYZ_/comparison_session/54914806ed8bf4961503619b")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_4112_XYZ_/comparison_session/54914806ed8bf4961503619b"));
    }
    
    
    @Test(timeout = 60000)
    public void test_110_putOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1F\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_4316_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_g\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f8721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_4111_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad3cdf0ede33d201e877e9ca\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6A\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"43da8a70c8fc736ba8f642ac\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"jeDXLyH3x2ecl\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70fc7da9e9d978297d7e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a31f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"ieo0w9q529RvDFqH\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[u\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j2S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_R\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4d091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"507ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"54914806ed8bf4961403619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"845c0ebc8ac0aeaef4e255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4r9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"kW\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8058fcce0b99d47145c4ea5\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" _EM_4317_XYZ_ ")
                .put(baseUrlOfSut + "/api/sessions/_EM_4112_XYZ_/settings/407ab69f9874028a50af5475")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_4112_XYZ_/settings/407ab69f9874028a50af5475"));
    }
    
    
    @Test(timeout = 60000)
    public void test_111_putOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oGUF\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"_EM_4111_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad3cdf0ede33d201e877e9ca\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6A\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"43da8a70c8fc736ba8f642ac\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"_EM_3700_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1778_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a31f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"_EM_193_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7DYJ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_\", \"checksum\":\"OLunpX3j0Ae6\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd54\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"ieo0w9q529RvDFqH\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"cEU_U702_UYZ[u\", \"checksum\":\"_EM_3809_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_4338_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgz\", \"checksum\":\"_EM_1780_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"fec14dcda6677e59ba76bacd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLUEooZ\", \"checksum\":\"T74\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5465\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjD\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"54914806ed8bf4961403619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzcexb3\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPqYPr\", \"type\":\"group\", \"_id\":{\"$oid\":\"855c0ecd8ab0adaef5e245d4\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_4339_XYZ_\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"TtsBYzM\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"e219a96fc7ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" Q9k_8OAQfBmfN ")
                .put(baseUrlOfSut + "/api/sessions/_EM_4112_XYZ_/comparison_session/407ab69f9874028a50af5475")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_4112_XYZ_/comparison_session/407ab69f9874028a50af5475"));
    }
    
    
    @Test(timeout = 60000)
    public void test_112_putOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"oG1\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"db3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_632_XYZ_2\", \"checksum\":\"oiubUGleUVpUUUUhf\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3NnhFf\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"ad4cc0fddf23e202f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"FqvU\", \"checksum\":\"mUgU7UUKUm6G\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"Vb\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"33da7b70c8fc735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"\u0081hUHuH\", \"checksum\":\"uN7ZE7qtY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"93yS\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"e4fb70ec6da9e9d877297d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_3904_XYZ_\", \"checksum\":\"j5HXA2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3701_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8b32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33Ee\", \"checksum\":\"gTjP27U@\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YA7EYJ\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"6ed0bfbafc1e6d90e4da3534\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1727_XYZ_i\", \"checksum\":\"OLunpX3j0Ae6j\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"group\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"2152b1aeb7b9756c9edacd53\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1729_XYZ_\", \"checksum\":\"_EM_1730_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"a26bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EU_U702_UYZ[\", \"checksum\":\"_EM_3903_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpUNvXJ0\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d00f2aaac6899fcb7c9af98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"rlQssZ\", \"checksum\":\"_EM_3767_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"azWw;wuFoE\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"f7c402471bdea9921f4f0b85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3795_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"8e4e091cbee07a355ff14a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"lKYSYLgzU\", \"checksum\":\"_EM_1780_XYZ_f\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1781_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7e6011e9ebaef0baf4a751ac\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"E8JFGNK\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"SZR1fXa39\", \"type\":\"group\", \"_id\":{\"$oid\":\"0dc14ccea5687e59b975cabd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"lPpLoEooZ\", \"checksum\":\"T73\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2568_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"407ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"X_gIq\", \"checksum\":\"UjDP\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1225_XYZ_c\", \"type\":\"group\", \"_id\":{\"$oid\":\"54914806ed8bf4961503619b\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"Djhnzbexb1\", \"checksum\":\"UFMUUoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DPtHSymBgPuYPr\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"844c1dbc9ad1aeaff4e355d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"5N4t9uDQI2HGhrdL\", \"checksum\":\"cCMSCenbADBtWLYeq\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"DIeIoM\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3acdc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"iaCOL9kk_3cF97fE7\", \"checksum\":\"_EM_1226_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2571_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"c8f58fdce0aa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"3PCVo\", \"checksum\":\"iy\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_3768_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"d6d4a744d902abd7bc1fe0d8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" Q9k_8OAQfBmfNN ")
                .put(baseUrlOfSut + "/api/sessions/DIeIoM/custom_data/8DKJEmy")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/DIeIoM/custom_data/8DKJEmy"));
    }
    
    
    @Test(timeout = 60000)
    public void test_113_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"UG1G\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"U6U\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"cb3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_2878_XYZ_\", \"checksum\":\"_EM_2879_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"LZ42kE_uI7\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5f9721fa889f6fc42447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"W\", \"checksum\":\"_EM_1136_XYZ_m\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3Nnp\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"ad3db01eef23e322f867ead8\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_1097_XYZ_\", \"checksum\":\"1OLB9EkhAjEjTeKJ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"w9_K18HJF2PBo\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8ec735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1140_XYZ_\", \"checksum\":\"_EM_1882_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"u_67ITxBQ\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"f4fb70ec6da9ead877397d6f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6MfD\", \"checksum\":\"j5HXI2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1883_XYZ_\", \"checksum\":\"_EM_1884_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DaJG\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"6ed0bfaaec0f5d9004da3444\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTcawcSg\", \"checksum\":\"_EM_633_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YnuJI\", \"type\":\"settings\", \"_id\":{\"$oid\":\"1151b1aec6a9856c9ecabd55\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"*eL2cubd\", \"checksum\":\"5sZMPJE\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"EM_tainted_map\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"926bdb9ccc44bc15db865e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1507_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpSPvXJ0y\", \"type\":\"group\", \"_id\":{\"$oid\":\"c00f19aab6799ebb7c9ae98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_lU3sVkUUUCjUUS\", \"checksum\":\"bQT8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UAnNhtoru1n\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f7b403280bccaa92112ffa85\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xUTYU9j0U\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"8e3f0a1dbdef7a154ff23a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_1137_XYZ_\", \"checksum\":\"qUQSZUMoUUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2880_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7f6021dafcaff1acf4a741bc\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJh69DT0By4Rgg\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"eed14dcea6766d68b985bbcd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"aIv6y\", \"checksum\":\"_EM_1508_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1509_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"307ab69f9874028a50ae5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5\", \"checksum\":\"I\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"J7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"56814707ef9df2a715f4519a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"90tjJlw2UZfug\", \"checksum\":\"JIlpBU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"JSpuE\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"745a1fbc9bcfcdbd04f155c2\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"MN4W9UEUISUSUUVU\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1510_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"kUCOL1kkU3cHI7f2\", \"checksum\":\"_EM_1511_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4UY9huVEjhUbdUf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"c8f58edcefaa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_1512_XYZ_Z\", \"checksum\":\"_EM_2881_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"gnn1gIdZmbDpMSRPx\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"c5c4a645ca039bd6bc1ee1c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/Q/comparison_session/42d97a7fc8ec825cb7e5539c")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/Q/comparison_session/42d97a7fc8ec825cb7e5539c"));
    }
    
    
    @Test(timeout = 60000)
    public void test_114_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"UG1G\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"cb3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1096_XYZ_\", \"checksum\":\"drEBFDsv7\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"5f9721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_2930_XYZ_U\", \"checksum\":\"_EM_1136_XYZ_X\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2937_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"ad4cc00ddf23e222f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_1097_XYZ_\", \"checksum\":\"1OLB9EkhAjEjTeKJ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_262_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8ec735ba8f6429b\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1140_XYZ_\", \"checksum\":\"UE\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2931_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"f4fb70ec6da9ead877397d6e\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_2932_XYZ_\", \"checksum\":\"_EM_2933_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"d687dfedf2fcd5b2bd8a32f0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"9uMWPPui8tE33EeHL\", \"checksum\":\"_EM_193_XYZ_7\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DaJG\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"6ed0bfaaec0f5d90f4da3444\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTc`wcSg\", \"checksum\":\"z1pf6qynRLmlI\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YnuJI\", \"type\":\"settings\", \"_id\":{\"$oid\":\"1151b1aec6a9856c9ecabd55\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"*UL2UUUd\", \"checksum\":\"_EM_263_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"M5\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"926bcb9cdb45cc25cc766e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_2934_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5d\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpSPvXJ0y\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"c00f19aab6799ebb7c9ae98d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_lU3sVkUUUCjUUT\", \"checksum\":\"_EM_2938_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UAnOhtoru1n\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"f6b413281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"xTTYm9j0S\", \"checksum\":\"`U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"8e3f0a1dbddf7a154ff23a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"_EM_1137_XYZ_\", \"checksum\":\"q4USZ9Uo3UY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UeCiUQUiDh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7f6021dafcaff1acf4a741bc\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJh69DT0By4Rg\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"eed14dcea6766d68b985bbcd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"aAv6y\", \"checksum\":\"nfNqbRJYy_42_cK\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"vSaIyPxUSIPb\", \"type\":\"group\", \"_id\":{\"$oid\":\"307ab69f9874028a50af5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"vE4JpB5\", \"checksum\":\"U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2939_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"56814707ef9df2a715e4519a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"90tjJlg2UZfug\", \"checksum\":\"JIlpBU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1102_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"745a1fac8cbfbdbd04f255d3\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"MN4W9UEUISUSUUVU\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1510_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"e319a96fc8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"kUCOL1kkU3cHI7f2q\", \"checksum\":\"_EM_2940_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"L4UY9huVEjhUbdUf\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"c8f58edce0aa9d47134c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_2935_XYZ_\", \"checksum\":\"iS\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2941_XYZ_\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"c4c4a555c9f39bd6ac1fd2b8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_1141_XYZ_/custom_data/42d97a7fc8ec825cb7e5539c")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_1141_XYZ_/custom_data/42d97a7fc8ec825cb7e5539c"));
    }
    
    
    @Test(timeout = 60000)
    public void test_115_getOnSessionReturnsSchemaInvalidResponseUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "group")
                .d("{\"id\":\"UG1G\", \"checksum\":\"vGGZoRRVXYkSSN\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"W6P\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"cb3c269bd44db764c11480ba\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"egFcuLit_83QV8kW\", \"checksum\":\"drEBFDsv7h\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_260_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"5f8721fa889f6fc43447d8b0\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"U\", \"checksum\":\"_EM_1136_XYZ_m\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"wG2N3Nnh\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"ad4cc00ddf23e212f968eac9\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"_EM_1097_XYZ_\", \"checksum\":\"1OLB9EkhAjEjTeKJ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"w9_K18HJF2PBo\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"33da7b70c8ec735ba8f642ab\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_1140_XYZ_\", \"checksum\":\"7C99g5oQ7b0\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"custom_gene_list\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"f4fb70dc6da9ead877397d6f\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"O6Mf\", \"checksum\":\"j5HXI2ca\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1098_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"c687eeeef2edd5b2be9932e0\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"_EM_1883_XYZ_\", \"checksum\":\"_EM_1884_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YI7DaJG\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"6ed0bfaaec0f5d9004da3444\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"IWYgGV8SSTcawcSg\", \"checksum\":\"_EM_633_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YnuJIq\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"1151b0aec6a9856c9ecabd55\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"*eL2cubd\", \"checksum\":\"5sZMPJE\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"EM_tainted_map\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"926bdb9ccc44bc15db865e34\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_1507_XYZ_\", \"checksum\":\"GpeNpJ6Jv3W5\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"fd9vqpSPvXJ0y\", \"type\":\"group\", \"_id\":{\"$oid\":\"c00f19aab6799ebb7c9ae98e\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_lU3sVkUUUCjUUT\", \"checksum\":\"bQU8UUBl_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UAnOhtoru1n\", \"type\":\"settings\", \"_id\":{\"$oid\":\"f6b413281abdaa92103f0a86\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_2115_XYZ_\", \"checksum\":\"bV\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2116_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"8e300a1dbddf7a154ff23a00\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"3s\", \"checksum\":\"q4USZ9Uo3UY\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"UeCiUQUiDh\", \"type\":\"settings\", \"_id\":{\"$oid\":\"8e6132eafcaff2bce5a831cc\"}}")
            .and().insertInto("session", "custom_data")
                .d("{\"id\":\"WJh69DT0By4Rg\", \"checksum\":\"Ac8RvmTn\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"YpuJI\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"eed13dcea6766d68b985bbcd\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"iIv6y\", \"checksum\":\"_EM_1508_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_1509_XYZ_\", \"type\":\"group\", \"_id\":{\"$oid\":\"307ab69f9874028a50ae5475\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"_EM_2117_XYZ_\", \"checksum\":\"IQ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"J7\", \"type\":\"settings\", \"_id\":{\"$oid\":\"56814707ef9df2a715f3519a\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"90tjJlw2UZfug\", \"checksum\":\"JIjpBU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"JSptE\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"745a1fbc9bcfcdbd04f155c2\"}}")
            .and().insertInto("session", "comparison_session")
                .d("{\"id\":\"MN4W9UEUISUSUUVUU\", \"checksum\":\"cCMSCenbADBtWLYe\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"XMN9JhTmBkhm\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e319a96fb8ac66eaf3addc9d\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"kUCOL1kkU+cHI7f2\", \"checksum\":\"OW0nAOHhA4\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2118_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"c8f58edcefaa9d47144c4e95\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_1512_XYZ_ZU\", \"checksum\":\"_EM_2119_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_24_XYZ_\"\n                    }, \"source\":\"_EM_2120_XYZ_\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"c5c4a645ca039bd6bc1ee1c7\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/sessions/_EM_2121_XYZ_/custom_data/ad3cc0fedf23e212e968eac9")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'path'", containsString("/api/sessions/_EM_2121_XYZ_/custom_data/ad3cc0fedf23e212e968eac9"));
    }


}
