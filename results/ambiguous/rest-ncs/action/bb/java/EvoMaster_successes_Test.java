import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-07T01:22:50.136-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 12 tests
 * <br>
*  Covered targets: 59
 * <br>
*  Used time: 0h 10m 41s
 * <br>
*  Needed budget for current results: 71%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    @Test(timeout = 60000)
    public void test_1_getOnRemaindReturnsObject() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/api/remainder/786/437")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(349.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    @Test(timeout = 60000)
    public void test_2_getOnGammqReturnsObject() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/api/gammq/0.4476054649198329/0.9914423950935758")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.13878164062620946));
    }
    
    
    @Test(timeout = 60000)
    public void test_3_getOnExpintReturnsObject() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/api/expint/133/0.21706671205872208")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.0060874607377235075));
    }
    
    
    @Test(timeout = 60000)
    public void test_4_getOnBessjReturnsObject() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/api/bessj/808/0.08072576229594208")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.0));
    }
    
    
    @Test(timeout = 60000)
    public void test_5_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/api/triangle/943/607/849")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(1.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    @Test(timeout = 60000)
    public void test_6_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/api/fisher/56/633/0.8998339775315162")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", numberMatches(0.3185939122482665));
    }
    
    
    @Test(timeout = 60000)
    public void test_7_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/api/triangle/292/473/-1433578135")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    @Test(timeout = 60000)
    public void test_8_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/api/fisher/479/-781161613/0.345223251594431")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", containsString("NaN"));
    }
    
    
    @Test(timeout = 60000)
    public void test_9_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/api/triangle/-1888577277/344/553")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    @Test(timeout = 60000)
    public void test_10_getOnTrianglReturnsObject() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/api/triangle/737/-1410183613/73")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", numberMatches(0.0))
                .body("'resultAsDouble'", nullValue());
    }
    
    
    @Test(timeout = 60000)
    public void test_11_getOnFisherReturnsObject() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/api/fisher/-105919288/25/0.3890316851467146")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'resultAsInt'", nullValue())
                .body("'resultAsDouble'", containsString("NaN"));
    }


}
