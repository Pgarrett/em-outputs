import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-12-25T19:53:11.158-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 84 tests
 * <br>
*  Covered targets: 348
 * <br>
*  Used time: 0h 15m 15s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_others_Test {

    
    private static final SutHandler controller = new em.embedded.se.devscout.scoutapi.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("ACTIVITY","ACTIVITY_DERIVED","ACTIVITY_PROPERTIES","ACTIVITY_PROPERTIES_MEDIA_FILE","ACTIVITY_PROPERTIES_TAG","ACTIVITY_RATING","ACTIVITY_RELATION","MEDIA_FILE","MEDIA_FILE_KEYWORDS","SYSTEM_MESSAGE","TAG","TAG_DERIVED","USERS","USER_IDENTITY"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * 1 - (200) POST:/api/v2/activities
    * 2 - (400) PUT:/api/v2/activities/{id}
    * 3 - (204) DELETE:/api/v2/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_0_deleteOnActivReturns204() throws Exception {
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_updated\": \"1902-06-03T05:41:10.236Z\", " + 
                    " \"description_prepare\": \"3i4q\", " + 
                    " \"description_main\": \"vTXPVE7cek6axgwD\", " + 
                    " \"description_notes\": \"5mK44Pe8kIets\", " + 
                    " \"age_min\": -194, " + 
                    " \"age_max\": -717, " + 
                    " \"time_min\": 909, " + 
                    " \"time_max\": 934, " + 
                    " \"activity\": { " + 
                    " \"id\": 365, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 428, " + 
                    " \"ratings_sum\": 144, " + 
                    " \"favourites_count\": 578 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-12-25T19:52:56.228Z"))
                .body("'properties_revisions'[0].'date_updated'", containsString("1902-06-03T05:41:10.236Z"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("3i4q"))
                .body("'properties_revisions'[0].'description_main'", containsString("vTXPVE7cek6axgwD"))
                .body("'properties_revisions'[0].'description_notes'", containsString("5mK44Pe8kIets"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-194.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-717.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(909.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(934.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'properties'.'date_created'", containsString("2024-12-25T19:52:56.228Z"))
                .body("'properties'.'date_updated'", containsString("1902-06-03T05:41:10.236Z"))
                .body("'properties'.'description_prepare'", containsString("3i4q"))
                .body("'properties'.'description_main'", containsString("vTXPVE7cek6axgwD"))
                .body("'properties'.'description_notes'", containsString("5mK44Pe8kIets"))
                .body("'properties'.'age_min'", numberMatches(-194.0))
                .body("'properties'.'age_max'", numberMatches(-717.0))
                .body("'properties'.'time_min'", numberMatches(909.0))
                .body("'properties'.'time_max'", numberMatches(934.0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 818, " + 
                    " \"date_published\": \"1941-10-09T23:16:55.822-18:10\", " + 
                    " \"date_created\": \"1963-08-18T06:21:04+21:30\", " + 
                    " \"description_material\": \"_EM_16154_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_16155_XYZ_\", " + 
                    " \"description_prepare\": \"N0SLJ\", " + 
                    " \"description_main\": \"\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"age_min\": -350, " + 
                    " \"participants_min\": 905, " + 
                    " \"participants_max\": 674, " + 
                    " \"time_min\": 954, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [], " + 
                    " \"media_files\": [] " + 
                    " } ")
                .put(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/818"))
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/818"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v2/tags
    */
    @Test(timeout = 60000)
    public void test_1_postOnTagsReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 40L)
            .and().insertInto("USERS", 630L)
                .d("AUTHORIZATION_LEVEL", "720")
                .d("NAME", "\"A9WbRdJpPG8qsIrQ\"")
            .and().insertInto("ACTIVITY", 629L)
            .and().insertInto("ACTIVITY", 628L)
            .and().insertInto("ACTIVITY_RELATION", 627L)
                .r("ACTIVITY_1_ID", 628L)
                .r("ACTIVITY_2_ID", 40L)
                .r("OWNER_ID", 630L)
            .and().insertInto("MEDIA_FILE", 2172L)
                .d("URI", "\"w6pOhM\"")
            .and().insertInto("TAG", 2171L)
                .d("GRP", "\"JZKDL1qaJxQ5yC9s\"")
                .d("NAME", "\"z9Lkv\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 355, " + 
                    " \"group\": \"KqQR1rFVLHeH\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 618, " + 
                    " \"capture_date\": \"2095-07-12T01:46:14.810+16:05\", " + 
                    " \"author\": \"EQg5EdPfEEqG77J7\" " + 
                    " }, " + 
                    " \"activities_count\": 6315506194952784729 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/media_files
    */
    @Test(timeout = 60000)
    public void test_2_postOnMedia_filesReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 195L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -1550702194, " + 
                    " \"mime_type\": \"Uio3yzT9hUKBwTM\", " + 
                    " \"uri\": \"owCuCDPpZskuQGwd\", " + 
                    " \"name\": \"LooMy97OMZwPFj\", " + 
                    " \"capture_date\": \"2092-04-05T17:10:55Z\", " + 
                    " \"copy_right\": \"drqFbomlc\", " + 
                    " \"author\": \"R\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/categories
    */
    @Test(timeout = 60000)
    public void test_3_postOnCategoriesReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"media_file\": { " + 
                    " \"id\": 896, " + 
                    " \"mime_type\": \"_EM_7572_XYZ_\", " + 
                    " \"capture_date\": \"2057-10-15T23:50:33-20:37\", " + 
                    " \"copy_right\": \"_g\", " + 
                    " \"author\": \"6_8W\" " + 
                    " }, " + 
                    " \"activities_count\": 689 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/users
    */
    @Test(timeout = 60000)
    public void test_4_postOnUsersReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 914L)
                .d("URI", "\"_EM_17837_XYZ_\"")
            .and().insertInto("USERS", 913L)
                .d("AUTHORIZATION_LEVEL", "2113085274")
                .d("NAME", "\"Qre\"")
            .and().insertInto("ACTIVITY", 912L)
            .and().insertInto("ACTIVITY", 911L)
            .and().insertInto("ACTIVITY_PROPERTIES", 910L)
                .r("ACTIVITY_ID", 911L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 909L)
                .r("ACTIVITY_PROPERTIES_ID", 910L)
                .r("MEDIA_FILE_ID", 914L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 916L)
                .d("URI", "\"0nO_SDJUlsG\"")
            .and().insertInto("TAG", 915L)
                .d("GRP", "\"YHPr7lGKCB4QG\"")
                .d("NAME", "\"asGZw\"")
                .r("MEDIA_FILE_ID", 914L)
            .and().insertInto("MEDIA_FILE", 923L)
                .d("URI", "\"Benli90MU\"")
            .and().insertInto("TAG", 922L)
                .d("GRP", "\"zWPEJ6Q6FfOlhsX\"")
                .d("NAME", "\"_EM_34223_XYZ_\"")
            .and().insertInto("USERS", 921L)
                .d("AUTHORIZATION_LEVEL", "-32586")
                .d("NAME", "\"J0\"")
            .and().insertInto("ACTIVITY", 920L)
            .and().insertInto("ACTIVITY", 919L)
            .and().insertInto("ACTIVITY_PROPERTIES", 918L)
                .r("ACTIVITY_ID", 912L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 917L)
                .r("ACTIVITY_PROPERTIES_ID", 918L)
                .r("TAG_ID", 915L)
            .and().insertInto("USERS", 3487L)
                .d("AUTHORIZATION_LEVEL", "695")
                .d("NAME", "\"twc7jWSVq2OGrM\"")
            .and().insertInto("ACTIVITY", 3486L)
            .and().insertInto("ACTIVITY", 3485L)
            .and().insertInto("ACTIVITY_RELATION", 3484L)
                .r("ACTIVITY_1_ID", 3485L)
                .r("ACTIVITY_2_ID", 3486L)
                .r("OWNER_ID", 921L)
            .and().insertInto("USERS", 3930L)
                .d("AUTHORIZATION_LEVEL", "980")
                .d("NAME", "\"DrXAL\"")
            .and().insertInto("ACTIVITY", 3929L)
            .and().insertInto("ACTIVITY_RATING", 3928L)
                .r("ACTIVITY_ID", 919L)
                .r("USER_ID", 3930L)
                .d("FAVOURITE", "false")
                .d("RATING", "738")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 535, " + 
                    " \"email_address\": \"uTwQ107W\", " + 
                    " \"authorization_level\": 700, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 188, " + 
                    " \"date_created\": \"2014-11-07T00:01:60+13:27\", " + 
                    " \"value\": \"6Q\" " + 
                    " }, " + 
                    " { " + 
                    " \"type\": \"GOOGLE\" " + 
                    " }, " + 
                    " { " + 
                    " \"type\": \"EVOMASTER\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 522, " + 
                    " \"type\": \"EVOMASTER\", " + 
                    " \"value\": \"DN4L9YfcZ_5F\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v2/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_5_putOnActivReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_13741_XYZ_\", " + 
                    " \"description_material\": \"_EM_13742_XYZ_\", " + 
                    " \"description_introduction\": \"Vby\", " + 
                    " \"description_main\": \"_EM_13744_XYZ_\", " + 
                    " \"description_safety\": \"i48aJvDSll4K2Vud\", " + 
                    " \"description_notes\": \"_EM_13745_XYZ_\", " + 
                    " \"age_max\": -2147483489, " + 
                    " \"participants_max\": 959, " + 
                    " \"time_max\": 867, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"YHpj9jKD\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 1071139817320812407, " + 
                    " \"group\": \"WWANF9QqiuUrbTGZ\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 864, " + 
                    " \"capture_date\": \"2049-07-21T12:55:18.708+13:43\", " + 
                    " \"copy_right\": \"_EM_13749_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 428 " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"UN2v6bZ\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"_Ytl9ek\", " + 
                    " \"media_file\": { " + 
                    " \"capture_date\": \"2092-11-17T24:18:50-01:24\", " + 
                    " \"author\": \"_EM_13755_XYZ_\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"VhPUY7eayqCB\", " + 
                    " \"name\": \"INTEGRATION TEST ADMINISTRATOR\", " + 
                    " \"activities_count\": -1643482897031544151 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": -1219200516, " + 
                    " \"name\": \"yy3paWhfX2yZRz6Y\", " + 
                    " \"copy_right\": \"biQ1CepHG\", " + 
                    " \"author\": \"_EM_13759_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"copy_right\": \"B_XAskdCeRVux\", " + 
                    " \"author\": \"UUj4o86\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 69, " + 
                    " \"authorization_level\": 626 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 901, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.756353376258345, " + 
                    " \"related\": [ " + 
                    " 93, " + 
                    " 188, " + 
                    " 648, " + 
                    " -6829534875927880373, " + 
                    " 244 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/activities/863")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v1/system_messages/{id}
    */
    @Test(timeout = 60000)
    public void test_6_putOnSystem_messagReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"JL1dqtD5GVov\", " + 
                    " \"value\": \"_EM_6614_XYZ_\", " + 
                    " \"valid_to\": \"1959-11-15T10:06:50Z\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/331")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v1/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_7_putOnActivReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 501L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 662, " + 
                    " \"name\": \"zG5zkWdT\", " + 
                    " \"date_updated\": \"2055-11-27T18:15:20.630Z\", " + 
                    " \"description_introduction\": \"tXtQ7F\", " + 
                    " \"description_safety\": \"InC_bQP\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"age_min\": -2147483201, " + 
                    " \"participants_min\": 875, " + 
                    " \"participants_max\": 413, " + 
                    " \"time_min\": -261149, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"dTcp0uQmKq:0\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 770801821, " + 
                    " \"activities_count\": -585635144 " + 
                    " }, " + 
                    " { " + 
                    " \"media_file\": { " + 
                    " \"id\": 349, " + 
                    " \"mime_type\": \"fko\", " + 
                    " \"capture_date\": \"2035-02-16T19:10:49.804-21:18\", " + 
                    " \"copy_right\": \"vdMtRNG\" " + 
                    " }, " + 
                    " \"activities_count\": 929 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": -130839, " + 
                    " \"mime_type\": \"jjJwCmTRLEc\", " + 
                    " \"uri\": \"zKX4FhMClyv0l\", " + 
                    " \"name\": \"_EM_17874_XYZ_\", " + 
                    " \"author\": \"wkN2cx\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 513, " + 
                    " \"mime_type\": \"y3pIakEI8cG6BC\", " + 
                    " \"uri\": \"_S4uINfvLoj3\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"7wDIEGK6bSXF\", " + 
                    " \"uri\": \"M6IwWo9tPAW\", " + 
                    " \"name\": \"m3A\", " + 
                    " \"author\": \"uhvptvDegY\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"ratings_count\": -5475054195312663455, " + 
                    " \"ratings_sum\": -6573832969421348830, " + 
                    " \"ratings_average\": 0.02010557726535811 " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/activities/726")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v1/media_files/{id}
    */
    @Test(timeout = 60000)
    public void test_8_putOnMedia_filReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"INTEGRATION TEST USER\", " + 
                    " \"capture_date\": \"2068-04-17T06:56:23.726+11:18\", " + 
                    " \"copy_right\": \"_EM_1224_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/749?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/system_messages
    */
    @Test(timeout = 60000)
    public void test_9_postOnSystem_messagesReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"_EM_27868_XYZ_\", " + 
                    " \"value\": \"_EM_27869_XYZ_\", " + 
                    " \"valid_from\": \"1927-08-22T01:22:45Z\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?attrs=UsGrZ78SyVa9H")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PATCH:/api/v1/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_10_patchOnV1ActivReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_published\": \"2025-09-23T09:01:06Z\", " + 
                    " \"date_created\": \"1956-04-07T17:11:10Z\", " + 
                    " \"description_material\": \"EDdXJWWuQfLnqi\", " + 
                    " \"description_main\": \"X\", " + 
                    " \"description_safety\": \"jAh\", " + 
                    " \"description_notes\": \"F7LdNo\", " + 
                    " \"age_min\": -647, " + 
                    " \"participants_max\": 906, " + 
                    " \"time_max\": 743, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"_EM_2062_XYZ_\" " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v1/activities/877")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v2/tags/{id}
    */
    @Test(timeout = 60000)
    public void test_11_putOnTagReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 591, " + 
                    " \"name\": \"_EM_9753_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 552, " + 
                    " \"mime_type\": \"_EM_9754_XYZ_\", " + 
                    " \"uri\": \"_EM_4300_XYZ_\", " + 
                    " \"capture_date\": \"1913-02-27T02:47:-1.511-23:40\", " + 
                    " \"copy_right\": \"_EM_4298_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 779 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/591")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v1/categories/{id}
    */
    @Test(timeout = 60000)
    public void test_12_putOnCategoriReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 65, " + 
                    " \"name\": \"_EM_9543_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"apjH5CytHfuc\", " + 
                    " \"name\": \"duC2\", " + 
                    " \"capture_date\": \"1907-01-23T21:60:21Z\", " + 
                    " \"copy_right\": \"_EM_4298_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 614 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/65")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v1/users/{id}
    */
    @Test(timeout = 60000)
    public void test_13_putOnUserReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"email_address\": \"QixB87Ofomk\", " + 
                    " \"authorization_level\": 580, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 418, " + 
                    " \"value\": \"administrator\" " + 
                    " }, " + 
                    " { " + 
                    " \"date_created\": \"1960-12-19T05:15:06-04:35\", " + 
                    " \"type\": \"EVOMASTER\", " + 
                    " \"value\": \"FIIUEo5yqk\" " + 
                    " }, " + 
                    " { " + 
                    " \"date_created\": \"2028-12-18T10:29:50.587Z\", " + 
                    " \"type\": \"GOOGLE\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 181, " + 
                    " \"date_created\": \"2007-10-03T07:40:45.123-20:51\", " + 
                    " \"value\": \"T3bXQHlq\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/257")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PATCH:/api/v2/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_14_patchOnV2ActivWithQueryParamReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"qc5_Gprqf8S2z\", " + 
                    " \"date_created\": \"2016-11-05T11:04:43.216Z\", " + 
                    " \"date_updated\": \"2043-07-10T14:31:12+15:56\", " + 
                    " \"description_prepare\": \"irthv\", " + 
                    " \"description_main\": \"UcHl\", " + 
                    " \"description_safety\": \"UzYfN4TELko\", " + 
                    " \"description_notes\": \"2Ev5Ja\", " + 
                    " \"age_min\": -608, " + 
                    " \"participants_min\": 955, " + 
                    " \"participants_max\": 558, " + 
                    " \"time_min\": 92, " + 
                    " \"time_max\": 387, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_22556_XYZ_\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 6751861716738540295, " + 
                    " \"copy_right\": \"5LtlnNFUA5N0e\", " + 
                    " \"author\": \"_EM_22568_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 56, " + 
                    " \"capture_date\": \"2002-01-02T11:09:22.563+05:26\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"0y4PrxVml0\", " + 
                    " \"uri\": \"\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -1052915664, " + 
                    " \"mime_type\": \"_EM_22572_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 32, " + 
                    " \"mime_type\": \"J1\", " + 
                    " \"uri\": \"5U13yw2LMvU12y2o\", " + 
                    " \"name\": \"44279\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v2/activities/185?attrs=_EM_22575_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/activities
    */
    @Test(timeout = 60000)
    public void test_15_postOnV1ActivitiesWithQueryParamsReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 3738L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("DATE_CREATED", "\"1915-09-29 02:26:14\"")
                .d("EMAIL_ADDRESS", "\"n_YcCQ9AE\"")
                .d("NAME", "\"6DkJrglaxrgA5f0\"")
            .and().insertInto("MEDIA_FILE", 4275L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1941-01-21 23:29:24\"")
                .d("COPY_RIGHT", "\"uom5_\"")
                .d("MIME_TYPE", "\"s5NqHWg\"")
                .d("NAME", "\"BS7hoa7R2No\"")
                .d("URI", "\"CTBbWnswXCeqzBmA\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -128721, " + 
                    " \"name\": \"gUUJUAMjxI5UT\", " + 
                    " \"date_published\": \"1959-03-19T00:45:26-13:28\", " + 
                    " \"date_created\": \"2052-12-05T04:52:58Z\", " + 
                    " \"description_material\": \"pDBpLayyfo\", " + 
                    " \"description_introduction\": \"cmxiU1RuQM24eZY\", " + 
                    " \"description_prepare\": \"_EM_38522_XYZ_\", " + 
                    " \"description_main\": \"mAYPhROuHdU4qZ\", " + 
                    " \"description_notes\": \"BG3cnMTWFYif_ew\", " + 
                    " \"age_min\": -84, " + 
                    " \"age_max\": -791, " + 
                    " \"participants_min\": 395, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 844300759, " + 
                    " \"name\": \"b\", " + 
                    " \"media_file\": { " + 
                    " \"name\": \"Eg\" " + 
                    " }, " + 
                    " \"activities_count\": 1773643934 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"1VPC\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 418, " + 
                    " \"group\": \"iS4VUa1g\", " + 
                    " \"name\": \"_EM_29945_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"\", " + 
                    " \"name\": \"HqJsLxop2r\", " + 
                    " \"copy_right\": \"uPThJPuy9\", " + 
                    " \"author\": \"_EM_7643_XYZ_\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"cPSgu07KEVtl1nC\", " + 
                    " \"uri\": \"o\", " + 
                    " \"name\": \"_EM_29946_XYZ_\", " + 
                    " \"copy_right\": \"W17f\", " + 
                    " \"author\": \"_EM_29948_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": -2821303415866874434, " + 
                    " \"name\": \"k7RvEwP5bfSvcUM\", " + 
                    " \"authorization_level\": 195, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"date_created\": \"1931-13-10T00:30:33.054+14:30\", " + 
                    " \"type\": \"GOOGLE\", " + 
                    " \"value\": \"_EM_29949_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 385, " + 
                    " \"ratings_count\": 290, " + 
                    " \"ratings_sum\": 916, " + 
                    " \"favourites_count\": 842, " + 
                    " \"ratings_average\": 0.63718368188886, " + 
                    " \"related\": [ " + 
                    " 315, " + 
                    " 432, " + 
                    " 148 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "valid=iiCiY_g_qtkZ&" + 
                    "attrs=L2pZZ6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_16_postOnV2ActivitiesWithQueryParamsReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 3738L)
                .d("AUTHORIZATION_LEVEL", "686")
                .d("DATE_CREATED", "\"1915-09-29 02:26:14\"")
                .d("EMAIL_ADDRESS", "\"YpjNRcUfR\"")
                .d("NAME", "\"6DkJrglaxrgA5f0\"")
            .and().insertInto("MEDIA_FILE", 4275L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1941-01-21 15:49:24\"")
                .d("COPY_RIGHT", "\"uom4_\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"BS8hoa7R2N\"")
                .d("URI", "\"CTBbWnswXCeqzBm\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 175, " + 
                    " \"date_created\": \"2052-12-05T04:58:52.827Z\", " + 
                    " \"description_material\": \"pDBpLayyfo\", " + 
                    " \"description_introduction\": \"_EM_36443_XYZ_\", " + 
                    " \"description_prepare\": \"hgJ7_Jozz9g\", " + 
                    " \"description_main\": \"pDBpLayyfo\", " + 
                    " \"participants_max\": 891, " + 
                    " \"time_min\": -84, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"name\": \"\", " + 
                    " \"media_file\": { " + 
                    " \"name\": \"Eg\" " + 
                    " }, " + 
                    " \"activities_count\": 1773643934 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"1VPC\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 418, " + 
                    " \"group\": \"jXZ8RI7Zjki2FSQ3\", " + 
                    " \"name\": \"FJ7\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"\", " + 
                    " \"name\": \"_EM_29956_XYZ_\", " + 
                    " \"copy_right\": \"uPThJPuy9\", " + 
                    " \"author\": \"iDtIbup\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": -2821303415866874434, " + 
                    " \"name\": \"_EM_29957_XYZ_\", " + 
                    " \"authorization_level\": 195, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"date_created\": \"1931-13-10T00:30:33.054+14:30\", " + 
                    " \"type\": \"GOOGLE\", " + 
                    " \"value\": \"2\" " + 
                    " } " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?" + 
                    "valid=vOIjeNVDidU&" + 
                    "attrs=vNhlOQx")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/activities
    */
    @Test(timeout = 60000)
    public void test_17_postOnV1ActivitiesReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 4275L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1941-01-21 15:49:24\"")
                .d("COPY_RIGHT", "\"uom4_\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"BS8hoa7R2N\"")
                .d("URI", "\"CTBbWnswXCeqyBm\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 175, " + 
                    " \"name\": \"gUUJUAMjxI5UT\", " + 
                    " \"date_published\": \"1959-03-19T00:45:26-13:28\", " + 
                    " \"date_created\": \"2052-12-05T04:52:58Z\", " + 
                    " \"description_introduction\": \"_EM_36443_XYZ_\", " + 
                    " \"description_prepare\": \"hgJ7_Jozz9g\", " + 
                    " \"description_notes\": \"BG3cnMTWFYif_ewV\", " + 
                    " \"age_min\": -84, " + 
                    " \"age_max\": -791, " + 
                    " \"participants_min\": 891, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"name\": \"\", " + 
                    " \"media_file\": { " + 
                    " \"name\": \"Eg\" " + 
                    " }, " + 
                    " \"activities_count\": 1773643934 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"1VPC\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 418, " + 
                    " \"group\": \"iS4VUa1g\", " + 
                    " \"name\": \"_EM_29945_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"\", " + 
                    " \"name\": \"HqJsLxop2r\", " + 
                    " \"copy_right\": \"uPThJPuy9\", " + 
                    " \"author\": \"_EM_7643_XYZ_\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"cPSgu07KEVtl1nC\", " + 
                    " \"uri\": \"o\", " + 
                    " \"name\": \"_EM_29946_XYZ_\", " + 
                    " \"copy_right\": \"W17f\", " + 
                    " \"author\": \"_EM_29948_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": -2821303415866874434, " + 
                    " \"name\": \"k7RvEwP5bfSvcUM\", " + 
                    " \"authorization_level\": 195, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"date_created\": \"1931-13-10T00:30:33.054+14:30\", " + 
                    " \"type\": \"GOOGLE\", " + 
                    " \"value\": \"_EM_29949_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 385, " + 
                    " \"ratings_count\": 290, " + 
                    " \"ratings_sum\": 916, " + 
                    " \"favourites_count\": 842, " + 
                    " \"ratings_average\": 0.63718368188886, " + 
                    " \"related\": [ " + 
                    " 315, " + 
                    " 432, " + 
                    " 148 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v1/system_messages
    */
    @Test(timeout = 60000)
    public void test_18_getOnSystem_messagesReturns400() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "valid=EVOMASTER&" + 
                    "name=_EM_31976_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("query param valid must be one of [now, now_and_future]"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_19_postOnV2ActivitiesWithQueryParamsEmptyRatings_count_minReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"gBiCodjA_O6iPgGl\", " + 
                    " \"date_updated\": \"1928-06-30T07:04:39-06:13\", " + 
                    " \"description_introduction\": \"vac8cwWrO445Pff\", " + 
                    " \"description_main\": \"W8iImySNlZH\", " + 
                    " \"participants_min\": 201, " + 
                    " \"participants_max\": 598, " + 
                    " \"time_min\": 392, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"N4aZ8e\", " + 
                    " \"tags\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?" + 
                    "ratings_count_min=&" + 
                    "favourites=RHONKH&" + 
                    "categories=diutfv4aIm&" + 
                    "id=pHoKN_TZ2A&" + 
                    "participants=7gNiu6qWMd1dXuR&" + 
                    "attrs=g")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/activities
    */
    @Test(timeout = 60000)
    public void test_20_postOnV1ActivitiesWithQueryParamsEmptyParticipantsReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"ph8qiBpDV\", " + 
                    " \"date_published\": \"2028-09-08T16:55:24.467Z\", " + 
                    " \"date_created\": \"1955-05-05T13:59:13.193Z\", " + 
                    " \"description_introduction\": \"xAjcKvJ6\", " + 
                    " \"description_main\": \"6gSqEAiAychS8hQl\", " + 
                    " \"description_notes\": \"s5Gxs\", " + 
                    " \"age_min\": -2147482873, " + 
                    " \"time_min\": 398, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"ECpV81Fr8l9u\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 859 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 554, " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"izQfIyFH3p\", " + 
                    " \"capture_date\": \"2025-06-01T17:58:17.719+10:28\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 540, " + 
                    " \"group\": \"4yNKNTzg86Jm6\" " + 
                    " }, " + 
                    " { " + 
                    " \"activities_count\": 212 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 927, " + 
                    " \"group\": \"YQ8NrvEm5rD3\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"\", " + 
                    " \"capture_date\": \"1956-09-29T22:31:53-09:38\", " + 
                    " \"copy_right\": \"6ewau\", " + 
                    " \"author\": \"Unky\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"authorization_level\": 55, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"type\": \"GOOGLE\", " + 
                    " \"value\": \"rY8eUmBmW1\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 702 " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 449, " + 
                    " \"ratings_count\": 717, " + 
                    " \"favourites_count\": 786, " + 
                    " \"related\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "featured=t3feCn97lbn&" + 
                    "age_2=VjBzjM4FbptJupu&" + 
                    "age_1=a&" + 
                    "durations=VjKd4&" + 
                    "attrs=RCggngQoDZnFaZ&" + 
                    "participants=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_21_postOnV2ActivitiesWithQueryParamsEmptyCategoriesReturns400UsingSql() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"i\", " + 
                    " \"date_updated\": \"2081-02-05T02:42:53.305Z\", " + 
                    " \"description_material\": \"lljUcPH5K04\", " + 
                    " \"description_introduction\": \"Nlq\", " + 
                    " \"description_safety\": \"wQN_jBndh6e\", " + 
                    " \"description_notes\": \"Hc8Py\", " + 
                    " \"age_max\": -2147483555, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 327, " + 
                    " \"group\": \"6in1SD4HOZh9\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"PSjrvyIoUfsWVSPw\", " + 
                    " \"uri\": \"_sUA77\", " + 
                    " \"capture_date\": \"1924-06-05T13:16:59-21:06\", " + 
                    " \"copy_right\": \"vXEywYd\" " + 
                    " }, " + 
                    " \"activities_count\": 6001352583845462579 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 234, " + 
                    " \"media_file\": { " + 
                    " \"id\": 79, " + 
                    " \"mime_type\": \"SOml34m13sCYX\", " + 
                    " \"name\": \"\", " + 
                    " \"capture_date\": \"2022-06-05T24:13:00.513-20:06\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"YuYD6kAcmx2uI\", " + 
                    " \"activities_count\": 166 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"yAgj_AJuiyX\", " + 
                    " \"media_file\": { " + 
                    " \"id\": -468387371, " + 
                    " \"uri\": \"1ZCP\", " + 
                    " \"name\": \"Rdn0spNkvrOz0Et\", " + 
                    " \"capture_date\": \"2077-10-19T10:37:30-04:29\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"author\": {}, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 763440582, " + 
                    " \"favourites_count\": 626 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?" + 
                    "my_favourites=1Qi&" + 
                    "ratings_count_min=Y9s&" + 
                    "featured=u5ZPqsVjkpok&" + 
                    "favourites=NPR6mYVHpYV5Fbd&" + 
                    "name=cO3&" + 
                    "categories=&" + 
                    "id=VRBy8l_YLl&" + 
                    "participants=OGdet")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_22_postOnV2ActivitiesWithQueryParamReturns400UsingSql() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_updated\": \"2032-05-19T10:33:06.161+00:18\", " + 
                    " \"description_material\": \"Nuwol7gxSm9gdl\", " + 
                    " \"description_prepare\": \"Pvynodss3A1S6\", " + 
                    " \"description_main\": \"Ty1MMMz1Gyux6\", " + 
                    " \"description_safety\": \"HIyp\", " + 
                    " \"description_notes\": \"rYyRYXgw8xC\", " + 
                    " \"time_min\": 949, " + 
                    " \"source\": \"SIIrKuAHin\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?name=vFIaO0j")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_23_getOnV2ActivitiesWithQueryParamsFeaturedEmptyAgesReturns400() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=E&" + 
                    "text=_EM_1077_XYZ_&" + 
                    "featured=true&" + 
                    "ages=&" + 
                    "durations=KX18CtM&" + 
                    "id=_EM_1078_XYZ_&" + 
                    "ratings_count_min=983138100&" + 
                    "ratings_average_min=0.2858744480523052&" + 
                    "favourites=733&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v1/activities
    */
    @Test(timeout = 60000)
    public void test_24_getOnV1ActivitiesWithQueryParamsNegativeFavouritesReturns400() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_8373_XYZ_")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "name=_EM_8367_XYZ_&" + 
                    "categories=itV&" + 
                    "age_2=_9Ww2w7tXOyfHL&" + 
                    "participants=_EM_8370_XYZ_&" + 
                    "time_1=0WPc9FtoFweDJW2Y&" + 
                    "id=_EM_8371_XYZ_&" + 
                    "random=40&" + 
                    "favourites=-352394311")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v1/activities
    */
    @Test(timeout = 60000)
    public void test_25_getOnActivitiesReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3904L)
            .and().insertInto("ACTIVITY", 3906L)
            .and().insertInto("ACTIVITY_DERIVED", 3905L)
                .r("ACTIVITY_ID", 3904L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.8943688626993841")
                .d("RATINGS_COUNT", "504")
                .d("RATINGS_SUM", "-990217490714328064")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "featured=true&" + 
                    "age_1=_EM_14450_XYZ_&" + 
                    "participants=W8O1Ej4FoC2LKL&" + 
                    "id=L9slZWDI27xX6&" + 
                    "ratings_count_min=392&" + 
                    "ratings_average_min=-0.8800843248536862&" + 
                    "random=714&" + 
                    "favourites=328")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v1/activities
    */
    @Test(timeout = 60000)
    public void test_26_getOnV1ActivitiesWithQueryParamsReturns400() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=phViRAW1xENlG9D&" + 
                    "name=6DsQq1ZjkVDg&" + 
                    "featured=false&" + 
                    "age_1=_EM_35278_XYZ_&" + 
                    "time_1=_EM_35279_XYZ_&" + 
                    "ratings_count_min=795&" + 
                    "ratings_average_min=0.1578387832753817&" + 
                    "random=360&" + 
                    "favourites=2&" + 
                    "durations=mUrL63Icc5VoL")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v2/activities/{id}/rating
    */
    @Test(timeout = 60000)
    public void test_27_deleteOnActivRatingReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/851/rating")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v1/activities/{id}/rating
    */
    @Test(timeout = 60000)
    public void test_28_deleteOnActivRatingWithQueryParamReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/618/rating?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v2/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_29_deleteOnV2ActivWithQueryParamReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_15_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/activities/599?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v1/system_messages/{id}
    */
    @Test(timeout = 60000)
    public void test_30_deleteOnSystem_messagReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/642?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v2/tags/{id}
    */
    @Test(timeout = 60000)
    public void test_31_deleteOnTagReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v2/tags/952?EMextraParam123=_EM_26_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v1/users/{id}
    */
    @Test(timeout = 60000)
    public void test_32_deleteOnUserReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/users/684")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) GET:/api/v1/users/profile
    */
    @Test(timeout = 60000)
    public void test_33_getOnProfileReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_30_XYZ_")
                .get(baseUrlOfSut + "/api/v1/users/profile")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v1/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_34_deleteOnV1ActivReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/962")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v1/categories/{id}
    */
    @Test(timeout = 60000)
    public void test_35_deleteOnCategoriReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/categories/1665347080")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) GET:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_36_getOnFavouritesReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_79_XYZ_")
                .get(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v2/activities
    */
    @Test(timeout = 60000)
    public void test_37_postOnV2ActivitiesWithQueryParamReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=_EM_89_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/media_files
    */
    @Test(timeout = 60000)
    public void test_38_postOnMedia_filesReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/system_messages
    */
    @Test(timeout = 60000)
    public void test_39_postOnSystem_messagesReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v2/tags
    */
    @Test(timeout = 60000)
    public void test_40_postOnTagsReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_102_XYZ_")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v2/tags?EMextraParam123=_EM_101_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/users
    */
    @Test(timeout = 60000)
    public void test_41_postOnUsersReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_103_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/activities
    */
    @Test(timeout = 60000)
    public void test_42_postOnV1ActivitiesWithQueryParamReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 132, " + 
                    " \"name\": \"_EM_106_XYZ_\", " + 
                    " \"date_published\": \"2082-03-13T22:23:42Z\", " + 
                    " \"date_updated\": \"1936-12-15T07:15:60-19:07\", " + 
                    " \"description_introduction\": \"_EM_108_XYZ_\", " + 
                    " \"description_main\": \"LQwo9TlBiAtod0z\", " + 
                    " \"participants_min\": 349, " + 
                    " \"participants_max\": 608, " + 
                    " \"time_min\": 426, " + 
                    " \"time_max\": 497, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 409, " + 
                    " \"group\": \"DzpLkbA\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 581, " + 
                    " \"uri\": \"_EM_112_XYZ_\", " + 
                    " \"copy_right\": \"nb403Ea\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": -1273149456, " + 
                    " \"capture_date\": \"1990-03-15T07:04:37.389-17:04\", " + 
                    " \"copy_right\": \"2W46AL\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 945833290, " + 
                    " \"name\": \"_EM_117_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"_EM_118_XYZ_\", " + 
                    " \"name\": \"_EM_119_XYZ_\", " + 
                    " \"capture_date\": \"1978-04-07T-1:51:26.579Z\", " + 
                    " \"author\": \"_EM_120_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"capture_date\": \"1979-06-03T02:48:-1.844Z\", " + 
                    " \"copy_right\": \"Jo2RfuzIMa8y4q\", " + 
                    " \"author\": \"SzQWu7Z\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/categories
    */
    @Test(timeout = 60000)
    public void test_43_postOnCategoriesReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) GET:/api/v2/activities/{id}/rating
    */
    @Test(timeout = 60000)
    public void test_44_getOnActivRatingReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/183/rating")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) GET:/api/v1/activities/{id}/rating
    */
    @Test(timeout = 60000)
    public void test_45_getOnActivRatingWithQueryParamReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/activities/561/rating?EMextraParam123=_EM_3_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PATCH:/api/v2/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_46_patchOnV2ActivWithQueryParamReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_published\": \"1963-08-07T18:21:21.066-16:06\", " + 
                    " \"description_introduction\": \"3pgyoG89tdjcxlK\", " + 
                    " \"description_prepare\": \"_EM_7_XYZ_\", " + 
                    " \"description_safety\": \"avWPZX\", " + 
                    " \"age_min\": -267, " + 
                    " \"participants_max\": 781, " + 
                    " \"time_min\": 893, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 59582008134784627, " + 
                    " \"capture_date\": \"1971-12-00T23:27:08.473Z\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 566, " + 
                    " \"name\": \"_EM_10_XYZ_\", " + 
                    " \"capture_date\": \"2008-09-20T09:24:45.445+05:29\", " + 
                    " \"copy_right\": \"BSmXlDc\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": -2164922988233148265, " + 
                    " \"name\": \"CYE62kEc3\", " + 
                    " \"email_address\": \"_EM_12_XYZ_\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 598 " + 
                    " }, " + 
                    " {}, " + 
                    " { " + 
                    " \"value\": \"t38j\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 360, " + 
                    " \"ratings_sum\": 464, " + 
                    " \"favourites_count\": 319, " + 
                    " \"related\": [ " + 
                    " 430, " + 
                    " 351, " + 
                    " 700 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v2/activities/316?EMextraParam123=_EM_14_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) GET:/api/v1/users/{id}
    */
    @Test(timeout = 60000)
    public void test_47_getOnUserReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users/926")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PATCH:/api/v1/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_48_patchOnV1ActivReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 1795823373, " + 
                    " \"name\": \"4\", " + 
                    " \"date_created\": \"2056-00-23T25:49:36.565+05:46\", " + 
                    " \"description_prepare\": \"Kj\", " + 
                    " \"description_notes\": \"_EM_37_XYZ_\", " + 
                    " \"age_min\": -2147483128, " + 
                    " \"participants_min\": 885, " + 
                    " \"participants_max\": 671, " + 
                    " \"source\": \"_EM_38_XYZ_\" " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v1/activities/1795823373")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) GET:/api/v1/users
    */
    @Test(timeout = 60000)
    public void test_49_getOnUsersReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users?name=_EM_71_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v2/activities/{id}/rating
    */
    @Test(timeout = 60000)
    public void test_50_postOnRatingReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v2/activities/748/rating")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/activities/{id}/rating
    */
    @Test(timeout = 60000)
    public void test_51_postOnRatingReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/activities/217/rating")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/favourites
    */
    @Test(timeout = 60000)
    public void test_52_postOnFavouritesReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=_EM_132_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v2/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_53_putOnV2ActivReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v2/activities/754")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v1/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_54_putOnV1ActivReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_204_XYZ_\", " + 
                    " \"date_published\": \"2015-06-05T24:30:06.026+17:53\", " + 
                    " \"date_created\": \"1901-04-14T05:12:40.526Z\", " + 
                    " \"description_material\": \"_EM_205_XYZ_\", " + 
                    " \"description_prepare\": \"AS_UuXvQxizEDjH\", " + 
                    " \"description_main\": \"DzFh\", " + 
                    " \"age_min\": -328932545, " + 
                    " \"time_max\": 252, " + 
                    " \"featured\": false, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 295, " + 
                    " \"capture_date\": \"1937-03-29T12:19:50Z\", " + 
                    " \"copy_right\": \"_EM_209_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"hJAbvpalrz\", " + 
                    " \"uri\": \"cg8S4BQcIs\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 377, " + 
                    " \"mime_type\": \"_EM_210_XYZ_\", " + 
                    " \"capture_date\": \"2033-13-23T20:38:34-00:51\", " + 
                    " \"copy_right\": \"GixUSoK0eX3kkdL\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"_EM_214_XYZ_\", " + 
                    " \"name\": \"OKu9AlKJz\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 71, " + 
                    " \"name\": \"AUbgQ2PUVIZg7\", " + 
                    " \"authorization_level\": 463 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"ratings_sum\": 219, " + 
                    " \"related\": [ " + 
                    " 165, " + 
                    " 42 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/activities/-183853885")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v1/media_files/{id}
    */
    @Test(timeout = 60000)
    public void test_55_putOnMedia_filReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v1/media_files/796?EMextraParam123=_EM_192_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v1/system_messages/{id}
    */
    @Test(timeout = 60000)
    public void test_56_putOnSystem_messagReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v1/system_messages/179")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v2/tags/{id}
    */
    @Test(timeout = 60000)
    public void test_57_putOnTagReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v2/tags/-746877645?EMextraParam123=_EM_198_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v1/users/{id}
    */
    @Test(timeout = 60000)
    public void test_58_putOnUserReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_203_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"m\", " + 
                    " \"email_address\": \"_EM_200_XYZ_\", " + 
                    " \"authorization_level\": 595, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 46, " + 
                    " \"date_created\": \"2000-07-14T16:45:25+07:42\", " + 
                    " \"value\": \"bFnK\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 689, " + 
                    " \"type\": \"GOOGLE\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/923")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v1/categories/{id}
    */
    @Test(timeout = 60000)
    public void test_59_putOnCategoriReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_220_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_217_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/621")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v1/media_files/{id}
    */
    @Test(timeout = 60000)
    public void test_60_deleteOnMedia_filReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/-802474969?" + 
                    "verify_unused=false&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v1/users
    */
    @Test(timeout = 60000)
    public void test_61_postOnUsersReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_3125_XYZ_\", " + 
                    " \"authorization_level\": 871 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("Cannot set authorization level to higher than your own."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v1/system_messages
    */
    @Test(timeout = 60000)
    public void test_62_postOnSystem_messagesReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 151, " + 
                    " \"key\": \"_EM_2126_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?EMextraParam123=_EM_2127_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v2/tags
    */
    @Test(timeout = 60000)
    public void test_63_postOnTagsReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 819, " + 
                    " \"group\": \"CIDCSr\", " + 
                    " \"activities_count\": 769 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v2/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_64_deleteOnV2ActivReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/662")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v1/system_messages/{id}
    */
    @Test(timeout = 60000)
    public void test_65_deleteOnSystem_messagReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/854")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v2/tags/{id}
    */
    @Test(timeout = 60000)
    public void test_66_deleteOnTagReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1049_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/tags/550")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v1/users/{id}
    */
    @Test(timeout = 60000)
    public void test_67_deleteOnUserReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/users/2014459703")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v1/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_68_deleteOnV1ActivReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/343")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v1/categories/{id}
    */
    @Test(timeout = 60000)
    public void test_69_deleteOnCategoriReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/categories/404?EMextraParam123=_EM_1076_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v1/users/{id}
    */
    @Test(timeout = 60000)
    public void test_70_putOnUserReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1229_XYZ_")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v1/users/31?EMextraParam123=_EM_1228_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v1/media_files
    */
    @Test(timeout = 60000)
    public void test_71_postOnMedia_filesReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"copy_right\": \"WLp9\", " + 
                    " \"author\": \"_EM_22148_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v2/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_72_putOnV2ActivReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_1211_XYZ_\", " + 
                    " \"date_created\": \"1998-00-10T17:35:54.797Z\", " + 
                    " \"description_introduction\": \"_EM_1212_XYZ_\", " + 
                    " \"description_prepare\": \"4mBM6PpmYfuLYx\", " + 
                    " \"description_safety\": \"_EM_1214_XYZ_\", " + 
                    " \"description_notes\": \"_EM_1215_XYZ_\", " + 
                    " \"age_min\": -2147483600, " + 
                    " \"participants_min\": 406, " + 
                    " \"participants_max\": 128, " + 
                    " \"time_max\": 515, " + 
                    " \"source\": \"_EM_1216_XYZ_\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"mRHTpkbNV5tu_3\", " + 
                    " \"activities_count\": 72 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [], " + 
                    " \"author\": { " + 
                    " \"authorization_level\": 188 " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/activities/329")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PATCH:/api/v2/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_73_patchOnV2ActivWithQueryParamReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .patch(baseUrlOfSut + "/api/v2/activities/928?EMextraParam123=_EM_1039_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PATCH:/api/v1/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_74_patchOnV1ActivReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .patch(baseUrlOfSut + "/api/v1/activities/514")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v1/activities/{id}
    */
    @Test(timeout = 60000)
    public void test_75_putOnV1ActivReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v1/activities/588")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v1/system_messages/{id}
    */
    @Test(timeout = 60000)
    public void test_76_putOnSystem_messagReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v1/system_messages/958?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v2/tags/{id}
    */
    @Test(timeout = 60000)
    public void test_77_putOnTagReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"YoXzlZde\", " + 
                    " \"name\": \"xy68VXgFx\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 721465580, " + 
                    " \"mime_type\": \"_EM_1225_XYZ_\", " + 
                    " \"name\": \"oDJ\", " + 
                    " \"author\": \"g\" " + 
                    " }, " + 
                    " \"activities_count\": 500 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/692?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v1/categories/{id}
    */
    @Test(timeout = 60000)
    public void test_78_putOnCategoriReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1250_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_1248_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/141?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v1/media_files/{id}
    */
    @Test(timeout = 60000)
    public void test_79_putOnMedia_filReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 585, " + 
                    " \"mime_type\": \"XlyhuXNW4o\", " + 
                    " \"uri\": \"_EM_9166_XYZ_\", " + 
                    " \"name\": \"_EM_9167_XYZ_\", " + 
                    " \"copy_right\": \"_EM_9168_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/585")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v1/media_files/{id}
    */
    @Test(timeout = 60000)
    public void test_80_deleteOnMedia_filReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/-2473524249435873422?" + 
                    "verify_unused=true&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v1/categories
    */
    @Test(timeout = 60000)
    public void test_81_postOnCategoriesReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"media_file\": { " + 
                    " \"id\": 709, " + 
                    " \"mime_type\": \"YsEknkQq5g\", " + 
                    " \"uri\": \"Hqep\", " + 
                    " \"name\": \"WmBEhPau78qiaz\", " + 
                    " \"author\": \"Zn45LJ\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories?min_activities_count=E0q6o8dQ1z")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) GET:/api/v1/users/{id}
    */
    @Test(timeout = 60000)
    public void test_82_getOnV1UserWithQueryParamsReturns403UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 4563L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/398?" + 
                    "attrs=o2VYNZTP7&" + 
                    "ratings_count_min=Dtkrz0M504_nF&" + 
                    "featured=AT&" + 
                    "name=P1i&" + 
                    "categories=_&" + 
                    "id=AOlHsi5XRotSRCq")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) GET:/api/v1/users/{id}
    */
    @Test(timeout = 60000)
    public void test_83_getOnV1UserWithQueryParamsEmptyMy_favouritesReturns403UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 914L)
                .d("URI", "\"210319\"")
            .and().insertInto("USERS", 913L)
                .d("AUTHORIZATION_LEVEL", "8192")
                .d("NAME", "\"Qr^\"")
            .and().insertInto("ACTIVITY", 912L)
            .and().insertInto("ACTIVITY", 911L)
            .and().insertInto("ACTIVITY_PROPERTIES", 910L)
                .r("ACTIVITY_ID", 912L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 909L)
                .r("ACTIVITY_PROPERTIES_ID", 910L)
                .r("MEDIA_FILE_ID", 914L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 916L)
                .d("URI", "\"0nO_SDJYluG\"")
            .and().insertInto("TAG", 915L)
                .d("GRP", "\"YHPr7UUKCU3QD\"")
                .d("NAME", "\"asI\"")
                .r("MEDIA_FILE_ID", 914L)
            .and().insertInto("MEDIA_FILE", 923L)
                .d("URI", "\"_EM_39052_XYZ_\"")
            .and().insertInto("TAG", 922L)
                .d("GRP", "\"J5LHkDqAcWHHREN\"")
                .d("NAME", "\"8QkeNt\"")
            .and().insertInto("USERS", 921L)
                .d("AUTHORIZATION_LEVEL", "-5962")
                .d("NAME", "\"U0\"")
            .and().insertInto("ACTIVITY", 920L)
            .and().insertInto("ACTIVITY", 919L)
            .and().insertInto("ACTIVITY_PROPERTIES", 918L)
                .r("ACTIVITY_ID", 920L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 917L)
                .r("ACTIVITY_PROPERTIES_ID", 910L)
                .r("TAG_ID", 915L)
            .and().insertInto("USERS", 6903L)
                .d("AUTHORIZATION_LEVEL", "468")
                .d("NAME", "\"d8tnABg4qM2_\"")
            .and().insertInto("ACTIVITY", 6902L)
            .and().insertInto("ACTIVITY_RATING", 6901L)
                .r("ACTIVITY_ID", 6902L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("SYSTEM_MESSAGE", 6927L)
                .d("KEY", "\"0PpFzc20eqpsvjb\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1944-02-06 17:16:58\"")
                .d("VALUE", "\"UWFk5AqN\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/-1815558313?" + 
                    "my_favourites=&" + 
                    "ratings_count_min=yG&" + 
                    "featured=vzK0VQeTg7&" + 
                    "favourites=Dsd01NbKrvZHTqrJ&" + 
                    "name=LO0txFv&" + 
                    "id=bcDGL5a9BEdtZ3")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }


}
