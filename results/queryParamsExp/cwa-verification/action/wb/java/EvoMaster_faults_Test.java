import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-12-26T21:09:29.820-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 10 tests
 * <br>
*  Covered targets: 42
 * <br>
*  Used time: 0h 15m 7s
 * <br>
*  Needed budget for current results: 95%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.app.coronawarn.verification.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("APP_SESSION","TAN"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (500) POST:/version/v1/tan/verify
    * Found 1 potential fault of type-code 100
    */
    @Test(timeout = 60000)
    public void test_0_postOnVerifyCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("APP_SESSION", 55L)
                .d("VERSION", "585")
                .d("CREATED_AT", "\"1932-09-13 02:05:37\"")
                .d("UPDATED_AT", "\"2055-12-01 03:57:50\"")
                .d("HASHED_GUID", "\"_EM_2685_XYZ_\"")
                .d("REGISTRATION_TOKEN_HASH", "\"_EM_2682_XYZ_\"")
                .d("TELE_TAN_HASH", "\"5GFq0UrxHDbD\"")
                .d("TAN_COUNTER", "641")
                .d("SOT", "\"TELETAN\"")
                .d("HASHED_GUID_DOB", "\"_EM_2686_XYZ_\"")
                .d("TELETAN_TYPE", "\"EVENT\"")
            .and().insertInto("TAN", 56L)
                .d("VERSION", "-2096986")
                .d("CREATED_AT", "\"2031-05-08 11:29:17\"")
                .d("UPDATED_AT", "\"1967-07-02 12:36:48\"")
                .d("VALID_FROM", "\"2016-06-28 05:14:51\"")
                .d("VALID_UNTIL", "\"2098-11-19 01:53:33\"")
                .d("TAN_HASH", "\"HFsDVFRvIw\"")
                .d("SOT", "NULL")
                .d("TYPE", "\"TAN\"")
                .d("REDEEMED", "true")
                .d("TELETAN_TYPE", "\"TEST\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. app/coronawarn/verification/config/RequestSizeLimitFilter_60_doFilterInternal POST:/version/v1/tan/verify
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .header("X-B3-Flags", "z3mm_CNKzLaW")
                .header("b3", "_EM_339_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"tan\": \"9faaf7f0-e03c-47bc-adda-67602590fdac\" " + 
                    " } ")
                .post(baseUrlOfSut + "/version/v1/tan/verify")
                .then()
                .statusCode(500)// app/coronawarn/verification/config/RequestSizeLimitFilter_60_doFilterInternal
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (500) POST:/version/v1/registrationToken
    * Found 1 potential fault of type-code 100
    */
    @Test(timeout = 60000)
    public void test_1_postOnRegistrationTokenCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("APP_SESSION", 55L)
                .d("VERSION", "134218329")
                .d("CREATED_AT", "\"2012-12-28 11:05:41\"")
                .d("UPDATED_AT", "\"2053-11-05 00:28:52\"")
                .d("HASHED_GUID", "\"_EM_2877_XYZ_\"")
                .d("REGISTRATION_TOKEN_HASH", "\"6097b6fcb5cc30d7e88537ebbcb75082e82b67e6f79bfed7482685234728c64c\"")
                .d("TELE_TAN_HASH", "\"x9o\"")
                .d("TAN_COUNTER", "-2048")
                .d("SOT", "\"TELETAN\"")
                .d("HASHED_GUID_DOB", "\"e56cd4a8d52694c2a8ef137934392aed5ad7181d6b53a16537fde81ee2f757bd\"")
                .d("TELETAN_TYPE", "\"TEST\"")
            .and().insertInto("TAN", 56L)
                .d("VERSION", "8948951")
                .d("CREATED_AT", "\"1967-05-08 04:42:18\"")
                .d("UPDATED_AT", "\"2000-01-16 23:29:29\"")
                .d("VALID_FROM", "\"1986-01-29 01:30:31\"")
                .d("VALID_UNTIL", "\"1964-06-13 02:39:00\"")
                .d("TAN_HASH", "\"6951b805c59e970a8692c1ce63297568fe9eac5adec6f3449eb1f6baa5ba3ffd\"")
                .d("SOT", "\"CONNECTED_LAB\"")
                .d("TYPE", "\"TAN\"")
                .d("REDEEMED", "false")
                .d("TELETAN_TYPE", "\"TEST\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. app/coronawarn/verification/config/RequestSizeLimitFilter_60_doFilterInternal POST:/version/v1/registrationToken
        given().accept("*/*")
                .header("cwa-fake", "pvYPPWnWpdbKEfY")
                .header("x-EMextraHeader123", "")
                .header("X-B3-Flags", ")")
                .header("X-B3-Sampled", "foq")
                .header("X-B3-TraceId", "dook")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"OL4o{Ix2uPxuJJf\", " + 
                    " \"keyDob\": \"XfF6c26cdFACc3314ba6aec17B8dF1df516DeADaD0bF4ACAcAB967eD0f6A1dae\" " + 
                    " } ")
                .post(baseUrlOfSut + "/version/v1/registrationToken")
                .then()
                .statusCode(500)// app/coronawarn/verification/config/RequestSizeLimitFilter_60_doFilterInternal
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (500) POST:/version/v1/tan
    * Found 1 potential fault of type-code 100
    */
    @Test(timeout = 60000)
    public void test_2_postOnTanCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("APP_SESSION", 77L)
                .d("VERSION", "654")
                .d("CREATED_AT", "\"1926-06-04 07:51:29\"")
                .d("UPDATED_AT", "\"1951-02-08 04:49:57\"")
                .d("HASHED_GUID", "\"vMPhYm5L1wTg90su\"")
                .d("REGISTRATION_TOKEN_HASH", "NULL")
                .d("TELE_TAN_HASH", "\"OiX\"")
                .d("TAN_COUNTER", "286")
                .d("SOT", "\"TELETAN\"")
                .d("HASHED_GUID_DOB", "\"_EM_1572_XYZ_\"")
                .d("TELETAN_TYPE", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. app/coronawarn/verification/config/RequestSizeLimitFilter_60_doFilterInternal POST:/version/v1/tan
        given().accept("*/*")
                .header("cwa-fake", "")
                .header("x-EMextraHeader123", "")
                .header("X-B3-Flags", "_EM_1570_XYZ_")
                .header("b3", "foo")
                .header("X-B3-Sampled", "_EM_1571_XYZ_")
                .header("X-B3-TraceId", "foo")
                .contentType("application/json")
                .body(" { " + 
                    " \"registrationToken\": \"d6d3ce90-8aa2-4db1-Abd1-97b9a52289a0\", " + 
                    " \"responsePadding\": \"nQp6pBFCytw\" " + 
                    " } ")
                .post(baseUrlOfSut + "/version/v1/tan")
                .then()
                .statusCode(500)// app/coronawarn/verification/config/RequestSizeLimitFilter_60_doFilterInternal
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (500) POST:/version/v1/testresult
    * Found 1 potential fault of type-code 100
    */
    @Test(timeout = 60000)
    public void test_3_postOnTestresultCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("APP_SESSION", 55L)
                .d("VERSION", "-67108864")
                .d("CREATED_AT", "\"1908-06-16 01:29:19\"")
                .d("UPDATED_AT", "\"2000-01-17 00:29:29\"")
                .d("HASHED_GUID", "\"addColumn tableName=app_session\"")
                .d("REGISTRATION_TOKEN_HASH", "\"e5c03324f5812454d66e23deee031b6624042a4f763e6356b68a098170196c69\"")
                .d("TELE_TAN_HASH", "\"_EM_5282_XYZ_\"")
                .d("TAN_COUNTER", "-9960831")
                .d("SOT", "NULL")
                .d("HASHED_GUID_DOB", "\"_EM_5283_XYZ_\"")
                .d("TELETAN_TYPE", "\"EVENT\"")
            .and().insertInto("TAN", 56L)
                .d("VERSION", "32")
                .d("CREATED_AT", "\"1900-06-09 03:34:29\"")
                .d("UPDATED_AT", "\"1967-07-02 00:29:31\"")
                .d("VALID_FROM", "\"2022-07-27 03:16:25\"")
                .d("VALID_UNTIL", "\"2000-04-19 16:49:25\"")
                .d("TAN_HASH", "\"963d5c3388f772c9c9d2d23b3cf8f07bcf992b2f68c4955eaa5762a7fa377369\"")
                .d("SOT", "\"CONNECTED_LAB\"")
                .d("TYPE", "\"TELETAN\"")
                .d("REDEEMED", "true")
                .d("TELETAN_TYPE", "\"TEST\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. app/coronawarn/verification/controller/ExternalTestStateController_108_getTestState POST:/version/v1/testresult
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .header("b3", "1BqGjAZt")
                .header("X-B3-Sampled", "_EM_3108_XYZ_")
                .header("X-B3-TraceId", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"registrationToken\": \"3cc6da33-8dd2-495b-Aad0-85baf8b7fcea\", " + 
                    " \"responsePadding\": \"h\" " + 
                    " } ")
                .post(baseUrlOfSut + "/version/v1/testresult")
                .then()
                .statusCode(500)// app/coronawarn/verification/controller/ExternalTestStateController_108_getTestState
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (500) POST:/version/v1/tan/teletan
    * Found 1 potential fault of type-code 100
    */
    @Test(timeout = 60000)
    public void test_4_postOnTeletanCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("APP_SESSION", 55L)
                .d("VERSION", "134217305")
                .d("CREATED_AT", "\"2044-10-12 02:05:35\"")
                .d("UPDATED_AT", "\"2008-11-27 23:25:33\"")
                .d("HASHED_GUID", "\"_EM_2877_XYZ_\"")
                .d("REGISTRATION_TOKEN_HASH", "\"7e6f1104a2765736e5fb0bc521f9574616ba240f56f3743ad6efa3d587c8b93c\"")
                .d("TELE_TAN_HASH", "\"018966e997d851bb8883d3a4b2650113e02af71676a0138e7d5c0ace4888dadb\"")
                .d("TAN_COUNTER", "-18432")
                .d("SOT", "\"TELETAN\"")
                .d("HASHED_GUID_DOB", "\"_EM_13145_XYZ_\"")
                .d("TELETAN_TYPE", "\"EVENT\"")
            .and().insertInto("TAN", 56L)
                .d("VERSION", "0")
                .d("CREATED_AT", "\"1959-09-08 04:38:03\"")
                .d("UPDATED_AT", "\"1900-05-16 22:17:31\"")
                .d("VALID_FROM", "\"1900-09-16 16:14:31\"")
                .d("VALID_UNTIL", "\"2006-06-19 02:29:00\"")
                .d("TAN_HASH", "\"6951b805c59e970a8692c1ce63297568fe9eac5adec6f3449eb1f6baa5ba3ffd\"")
                .d("SOT", "\"CONNECTED_LAB\"")
                .d("TYPE", "\"TAN\"")
                .d("REDEEMED", "true")
                .d("TELETAN_TYPE", "\"TEST\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. app/coronawarn/verification/config/RequestSizeLimitFilter_60_doFilterInternal POST:/version/v1/tan/teletan
        given().accept("*/*")
                .header("Authorization", "{\"token\":\"5d4UPQ9J\"}")
                .header("x-EMextraHeader123", "")
                .header("X-B3-Flags", "klfg_RFgCGxISnNT")
                .header("x-cwa-teletan-type", "_EM_15421_XYZ_")
                .header("X-B3-TraceId", "toLg1Xrh1")
                .header("x-b3-flags", "8G6")
                .header("x-forwarded-for", "6HJR3xM")
                .post(baseUrlOfSut + "/version/v1/tan/teletan")
                .then()
                .statusCode(500)// app/coronawarn/verification/config/RequestSizeLimitFilter_60_doFilterInternal
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (500) POST:/version/v1/tan/teletan
    * Found 1 potential fault of type-code 100
    */
    @Test(timeout = 60000)
    public void test_5_postOnTeletanCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("APP_SESSION", 55L)
                .d("VERSION", "133694041")
                .d("CREATED_AT", "\"2044-12-12 02:05:37\"")
                .d("UPDATED_AT", "\"2057-11-07 06:29:52\"")
                .d("HASHED_GUID", "\"cefea0e056e6b26fd62c4923238c0f75597a40bb81665ddb291e0b25f7ddfc36\"")
                .d("REGISTRATION_TOKEN_HASH", "\"7e6f1104a2765736e5fb0bc521f9574616ba240f56f3743ad6efa3d587c8b93c\"")
                .d("TELE_TAN_HASH", "\"_EM_6732_XYZ_\"")
                .d("TAN_COUNTER", "0")
                .d("SOT", "\"TELETAN\"")
                .d("HASHED_GUID_DOB", "\"4\"")
                .d("TELETAN_TYPE", "\"TEST\"")
            .and().insertInto("TAN", 56L)
                .d("VERSION", "7900374")
                .d("CREATED_AT", "\"1967-05-08 04:34:17\"")
                .d("UPDATED_AT", "\"1900-05-16 22:13:29\"")
                .d("VALID_FROM", "\"1986-01-29 00:22:47\"")
                .d("VALID_UNTIL", "\"2000-06-19 02:39:00\"")
                .d("TAN_HASH", "\"2014-08-31 05:00:35\"")
                .d("SOT", "\"TELETAN\"")
                .d("TYPE", "\"TELETAN\"")
                .d("REDEEMED", "false")
                .d("TELETAN_TYPE", "\"EVENT\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. app/coronawarn/verification/config/RequestSizeLimitFilter_60_doFilterInternal POST:/version/v1/tan/teletan
        given().accept("*/*")
                .header("Authorization", "{\"token\":\"Sylp\"}")
                .header("x-EMextraHeader123", "")
                .header("b3", "foo")
                .header("X-B3-Sampled", "True")
                .header("X-B3-TraceId", "nw_")
                .header("x-b3-flags", "_EM_2596_XYZ_")
                .header("x-cwa-teletan-type", "_EM_7748_XYZ_")
                .header("cwa-fake", "fon")
                .post(baseUrlOfSut + "/version/v1/tan/teletan")
                .then()
                .statusCode(500)// app/coronawarn/verification/config/RequestSizeLimitFilter_60_doFilterInternal
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (500) POST:/version/v1/testresult
    * Found 1 potential fault of type-code 100
    */
    @Test(timeout = 60000)
    public void test_6_postOnTestresultCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("APP_SESSION", 55L)
                .d("VERSION", "-262080")
                .d("CREATED_AT", "\"2028-10-16 02:29:29\"")
                .d("UPDATED_AT", "\"2001-08-20 11:29:29\"")
                .d("HASHED_GUID", "\"95e97eaf44ea476bc54d1f41a5f61459ef1e331681d105f74b5177051a9a8f2a\"")
                .d("REGISTRATION_TOKEN_HASH", "\"_EM_2599_XYZ_\"")
                .d("TELE_TAN_HASH", "\"_EM_U7QU_UUZ_\"")
                .d("TAN_COUNTER", "0")
                .d("SOT", "\"HASHED_GUID\"")
                .d("HASHED_GUID_DOB", "\"T6G\"")
                .d("TELETAN_TYPE", "\"EVENT\"")
            .and().insertInto("TAN", 56L)
                .d("VERSION", "0")
                .d("CREATED_AT", "\"1967-05-08 19:29:51\"")
                .d("UPDATED_AT", "\"2000-06-24 11:12:29\"")
                .d("VALID_FROM", "\"2100-06-30 20:29:29\"")
                .d("VALID_UNTIL", "\"1940-12-08 11:47:33\"")
                .d("TAN_HASH", "\"5b5a1f0a3b8784d567341b78327ffe8f2ea74611adf9dc4a8eb2d944ea989d2a\"")
                .d("SOT", "\"CONNECTED_LAB\"")
                .d("TYPE", "\"TELETAN\"")
                .d("REDEEMED", "true")
                .d("TELETAN_TYPE", "\"TEST\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. app/coronawarn/verification/config/RequestSizeLimitFilter_60_doFilterInternal POST:/version/v1/testresult
        given().accept("*/*")
                .header("cwa-fake", "1")
                .header("x-EMextraHeader123", "")
                .header("X-B3-Flags", "60[kU8ArSz")
                .header("b3", "hz1lDXeCDk_p")
                .header("X-B3-Sampled", "UxUhXEiT")
                .header("X-B3-TraceId", "eUgUqLUUsZUuJ")
                .header("x-b3-flags", "T")
                .header("X-CWA-TELETAN-TYPE", "_EM_10111_XYZ_")
                .header("X-B3-SpanId", "hn4vr")
                .contentType("application/json")
                .body(" { " + 
                    " \"registrationToken\": \"af36c2fc-53fd-45fc-bdf8-6ccd1527bdfa\", " + 
                    " \"responsePadding\": \"Su\" " + 
                    " } ")
                .post(baseUrlOfSut + "/version/v1/testresult")
                .then()
                .statusCode(500)// app/coronawarn/verification/config/RequestSizeLimitFilter_60_doFilterInternal
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (500) POST:/version/v1/tan
    * Found 1 potential fault of type-code 100
    */
    @Test(timeout = 60000)
    public void test_7_postOnTanCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("APP_SESSION", 55L)
                .d("VERSION", "134217297")
                .d("CREATED_AT", "\"2044-10-12 02:05:35\"")
                .d("UPDATED_AT", "\"2000-11-27 11:29:37\"")
                .d("HASHED_GUID", "\"95e97eaf44ea476bc54d1f41a5f61459ef1e331681d105f74b5177051a9a8f2a\"")
                .d("REGISTRATION_TOKEN_HASH", "\"7e6f1104a2765736e5fb0bc521f9574616ba240f56f3743ad6efa3d587c8b93c\"")
                .d("TELE_TAN_HASH", "\"018966e997d851bb8883d3a4b2650113e02af71676a0138e7d5c0ace4888dadb\"")
                .d("TAN_COUNTER", "0")
                .d("SOT", "\"HASHED_GUID\"")
                .d("HASHED_GUID_DOB", "\"_EM_13145_XYZ_\"")
                .d("TELETAN_TYPE", "\"TEST\"")
            .and().insertInto("TAN", 56L)
                .d("VERSION", "0")
                .d("CREATED_AT", "\"1959-09-08 04:38:03\"")
                .d("UPDATED_AT", "\"1900-05-16 18:17:31\"")
                .d("VALID_FROM", "\"1900-09-16 16:14:31\"")
                .d("VALID_UNTIL", "\"2006-06-19 02:29:32\"")
                .d("TAN_HASH", "\"6951b805c59e970a8692c1ce63297568fe9eac5adec6f3449eb1f6baa5ba3ffd\"")
                .d("SOT", "\"CONNECTED_LAB\"")
                .d("TYPE", "\"TELETAN\"")
                .d("REDEEMED", "false")
                .d("TELETAN_TYPE", "\"EVENT\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. app/coronawarn/verification/service/TestResultServerService_49_result POST:/version/v1/tan
        given().accept("*/*")
                .header("cwa-fake", "U6oaUPQP")
                .header("x-EMextraHeader123", "")
                .header("X-B3-Flags", "1")
                .header("b3", "Ehf")
                .header("X-B3-Sampled", "FALsE")
                .header("X-B3-TraceId", "Dw3xDw")
                .header("X-CWA-TELETAN-TYPE", "4\"")
                .contentType("application/json")
                .body(" { " + 
                    " \"registrationToken\": \"a1c7aede-4b68-4f66-9fd2-c15996588ee0\", " + 
                    " \"responsePadding\": \"U70O1cHA0UtNc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/version/v1/tan")
                .then()
                .statusCode(500)// app/coronawarn/verification/service/TestResultServerService_49_result
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (500) POST:/version/v1/testresult
    * Found 1 potential fault of type-code 100
    */
    @Test(timeout = 60000)
    public void test_8_postOnTestresultCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("APP_SESSION", 55L)
                .d("VERSION", "0")
                .d("CREATED_AT", "\"1906-01-16 01:21:21\"")
                .d("UPDATED_AT", "\"2000-06-16 00:59:22\"")
                .d("HASHED_GUID", "\"btXtRg1\\3PId\"")
                .d("REGISTRATION_TOKEN_HASH", "\"e5c0eca8ac279904c9418717a66133bf7a82c4b4f50d811fef582d23ad343ef2\"")
                .d("TELE_TAN_HASH", "\"UUUUiBofUUpUh\"")
                .d("TAN_COUNTER", "-9962751")
                .d("SOT", "\"HASHED_GUID\"")
                .d("HASHED_GUID_DOB", "\"cUU]gLQUBLFnQU0U\"")
                .d("TELETAN_TYPE", "\"TEST\"")
            .and().insertInto("TAN", 56L)
                .d("VERSION", "-15")
                .d("CREATED_AT", "\"2000-01-09 11:34:17\"")
                .d("UPDATED_AT", "\"2031-01-02 04:29:15\"")
                .d("VALID_FROM", "\"2000-10-18 00:29:29\"")
                .d("VALID_UNTIL", "\"2000-06-19 23:51:25\"")
                .d("TAN_HASH", "\"_EM_3110_XYZ_\"")
                .d("SOT", "\"CONNECTED_LAB\"")
                .d("TYPE", "\"TELETAN\"")
                .d("REDEEMED", "false")
                .d("TELETAN_TYPE", "\"EVENT\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. app/coronawarn/verification/service/TestResultServerService_49_result POST:/version/v1/testresult
        given().accept("*/*")
                .header("cwa-fake", "DgRv3VGqc")
                .header("x-EMextraHeader123", "")
                .header("X-B3-Flags", "8mkntuIVyUGT5xe")
                .header("b3", "_EM_10131_XYZ_")
                .header("X-B3-TraceId", "a")
                .header("X-CWA-TELETAN-TYPE", "_EM_4035_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"registrationToken\": \"3cc6da33-8de1-496b-bae0-85bbf9a7ebdc\", " + 
                    " \"responsePadding\": \"h\" " + 
                    " } ")
                .post(baseUrlOfSut + "/version/v1/testresult")
                .then()
                .statusCode(500)// app/coronawarn/verification/service/TestResultServerService_49_result
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (500) POST:/version/v1/tan
    * Found 1 potential fault of type-code 100
    */
    @Test(timeout = 60000)
    public void test_9_postOnTanCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("APP_SESSION", 55L)
                .d("VERSION", "-67108864")
                .d("CREATED_AT", "\"1908-06-16 01:29:19\"")
                .d("UPDATED_AT", "\"2000-06-16 00:29:29\"")
                .d("HASHED_GUID", "\"_EM_1982_XYZ_\"")
                .d("REGISTRATION_TOKEN_HASH", "\"7d98ba831ce77ac610879326c27634a53c52e934f4e0c2059fa2b932f512f965\"")
                .d("TELE_TAN_HASH", "\"_EM_5282_XYZ_\"")
                .d("TAN_COUNTER", "-9960831")
                .d("SOT", "NULL")
                .d("HASHED_GUID_DOB", "\"_EM_5283_XYZ_\"")
                .d("TELETAN_TYPE", "\"TEST\"")
            .and().insertInto("TAN", 56L)
                .d("VERSION", "32")
                .d("CREATED_AT", "\"1900-05-09 11:34:17\"")
                .d("UPDATED_AT", "\"1967-07-02 00:29:31\"")
                .d("VALID_FROM", "\"2022-07-27 03:16:25\"")
                .d("VALID_UNTIL", "\"2000-06-19 14:49:25\"")
                .d("TAN_HASH", "\"963d5c3388f772c9c9d2d23b3cf8f07bcf992b2f68c4955eaa5762a7fa377369\"")
                .d("SOT", "\"TELETAN\"")
                .d("TYPE", "\"TELETAN\"")
                .d("REDEEMED", "false")
                .d("TELETAN_TYPE", "\"TEST\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. app/coronawarn/verification/controller/ExternalTanController_116_generateTan POST:/version/v1/tan
        given().accept("*/*")
                .header("cwa-fake", "_EM_4238_XYZ_")
                .header("x-EMextraHeader123", "")
                .header("X-B3-Flags", "QaX")
                .header("b3", "up")
                .header("X-B3-Sampled", "FALsE")
                .header("X-B3-TraceId", "lGBYg0bwmi")
                .header("X-CWA-TELETAN-TYPE", "_EM_4034_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"registrationToken\": \"b1a7deef-4a56-4156-Afd1-d049a76870c1\", " + 
                    " \"responsePadding\": \"Hmhb2RiNf\" " + 
                    " } ")
                .post(baseUrlOfSut + "/version/v1/tan")
                .then()
                .statusCode(500)// app/coronawarn/verification/controller/ExternalTanController_116_generateTan
                .assertThat()
                .body(isEmptyOrNullString());
    }


}
