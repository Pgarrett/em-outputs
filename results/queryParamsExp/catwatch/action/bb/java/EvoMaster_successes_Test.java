import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-12-25T13:03:46.869-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 20 tests
 * <br>
*  Covered targets: 132
 * <br>
*  Used time: 0h 17m 35s
 * <br>
*  Needed budget for current results: 94%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    /**
    * Calls:
    * (200) GET:/health.json
    */
    @Test(timeout = 60000)
    public void test_0_getOnHealth_jsonReturnsObject() throws Exception {
        
        given().accept("application/vnd.spring-boot.actuator.v1+json")
                .get(baseUrlOfSut + "/health.json")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.spring-boot.actuator.v1+json")
                .body("'status'", containsString("UP"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/health
    */
    @Test(timeout = 60000)
    public void test_1_getOnHealthReturnsObject() throws Exception {
        
        given().accept("application/vnd.spring-boot.actuator.v1+json")
                .get(baseUrlOfSut + "/health")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.spring-boot.actuator.v1+json")
                .body("'status'", containsString("UP"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    */
    @Test(timeout = 60000)
    public void test_2_getOnExportReturnsObject() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/v2/api-docs
    */
    @Test(timeout = 60000)
    public void test_3_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics/languages
    */
    @Test(timeout = 60000)
    public void test_4_getOnStatisticsLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics/languages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics/languages
    */
    @Test(timeout = 60000)
    public void test_5_getOnStatisticsLanguagesWithQueryParamReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics/languages?organizations=Ok1eTPRPCdnh")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics
    */
    @Test(timeout = 60000)
    public void test_6_getOnStatisticsWithQueryParamReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics?organizations=uAYC2")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics
    */
    @Test(timeout = 60000)
    public void test_7_getOnStatisticsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test(timeout = 60000)
    public void test_8_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=LI&" + 
                    "offset=855&" + 
                    "q=zp1QMFM25Q5NL0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test(timeout = 60000)
    public void test_9_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=S2uEpCivf&" + 
                    "limit=267&" + 
                    "q=rIGlzEYb2")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test(timeout = 60000)
    public void test_10_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=3m9DJuidgEqns7&" + 
                    "limit=381&" + 
                    "offset=964")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test(timeout = 60000)
    public void test_11_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=S&" + 
                    "limit=853&" + 
                    "offset=361&" + 
                    "q=bAfkt_6rkZskIZ")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_12_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=xD&" + 
                    "end_date=1901-03-13T20%3A41%3A52Z&" + 
                    "sortBy=gDbrdi&" + 
                    "q=u68JF5oouSI")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_13_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "start_date=2028-01-10T20%3A09%3A59.242-06%3A04&" + 
                    "q=BNlKG&" + 
                    "language=xia")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_14_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "end_date=2060-05-20T14%3A18%3A20.489%2B07%3A22&" + 
                    "q=MKI7ygJckmAoUmsY&" + 
                    "language=2B84c4lKUEd1eTdu")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_15_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=MrlsZrSdWtLEp4V&" + 
                    "limit=629&" + 
                    "start_date=1977-01-28T08%3A06%3A41Z&" + 
                    "sortBy=Ql&" + 
                    "language=m5j3qaaM2dhFN0cu")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_16_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=587&" + 
                    "start_date=2033-01-09T16%3A35%3A41.559Z&" + 
                    "sortBy=WMIPBZc4gwULr7X&" + 
                    "q=_OBXnv66orjvQAB&" + 
                    "language=p")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_17_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=978&" + 
                    "start_date=1988-02-09T00%3A54%3A37.351-02%3A20&" + 
                    "sortBy=48ZWtwAycNQ6Y&" + 
                    "q=l3KXm68u4tw4FvB4")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_18_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=SxIb9Fn95cL1u&" + 
                    "offset=838&" + 
                    "start_date=1920-07-04T06%3A35%3A47.769%2B21%3A26&" + 
                    "sortBy=nYSro79Q&" + 
                    "q=NcJvExOk")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_19_getOnProjectsWithQueryParamsEmptyQReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=1127884933&" + 
                    "start_date=2080-04-15T20%3A07%3A58.097Z&" + 
                    "end_date=1977-07-11T07%3A32%3A11%2B23%3A36&" + 
                    "sortBy=d&" + 
                    "q=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }


}
