import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-12-25T14:40:15.068-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 62 tests
 * <br>
*  Covered targets: 419
 * <br>
*  Used time: 0h 17m 46s
 * <br>
*  Needed budget for current results: 97%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.org.zalando.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CONTRIBUTOR","LANGUAGE_LIST","MAINTAINERS","PROJECT","STATISTICS"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (500) GET:/statistics/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_0_getOnStatisticsContributorsWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet GET:/statistics/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 500 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "nAaSblYc0wsTE")
                .header("X-Organizations", "k4EE_v0gvKjJqx7O")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=Gkoy7LM_8w&" + 
                    "offset=469&" + 
                    "limit=OJx2rdCHWJ&" + 
                    "sortBy=OErmBLJL&" + 
                    "language=J2")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/statistics/projects
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_1_getOnProjectsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=xH2fbqZdQtGA1V&" + 
                    "start_date=1997-07-17T14%3A23%3A30.604-10%3A47&" + 
                    "q=nmlTvTG33dZ&" + 
                    "offset=356&" + 
                    "sortBy=")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/statistics/projects
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_2_getOnStatisticsProjectsWithQueryParamsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 100L)
                .d("ID", "193")
                .d("SNAPSHOT_DATE", "\"2003-03-18 16:51:52\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"205\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "535")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "404")
                .d("TEAMS_COUNT", "887")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "302")
            .and().insertInto("PROJECT", 101L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "337")
                .d("DESCRIPTION", "\"_EM_1111_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "944")
                .d("LAST_PUSHED", "\"_EM_1112_XYZ_\"")
                .d("NAME", "\"_EM_1113_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"lLuvbZ2GJ_\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"2093-03-29 10:39:59\"")
                .d("STARS_COUNT", "995")
                .d("URL", "\"_EM_555_XYZ_\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 102L)
                .d("ID", "653")
                .d("ORGANIZATION_ID", "205")
                .d("SNAPSHOT_DATE", "\"1978-09-30 04:15:35\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"_EM_1115_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "22")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "410")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "18")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "205")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "q=gps4bOB9SxvMfS&" + 
                    "offset=816&" + 
                    "language=lLuvbZ2GJ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/statistics/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_3_getOnStatisticsContributorsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 100L)
                .d("ID", "193")
                .d("SNAPSHOT_DATE", "\"2003-03-18 16:51:52\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"205\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "535")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "404")
                .d("TEAMS_COUNT", "887")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "302")
            .and().insertInto("PROJECT", 101L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "337")
                .d("DESCRIPTION", "\"_EM_1111_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "944")
                .d("LAST_PUSHED", "\"_EM_1112_XYZ_\"")
                .d("NAME", "\"_EM_1113_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"lLuvbZ2GJ_\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"2093-03-29 10:39:59\"")
                .d("STARS_COUNT", "995")
                .d("URL", "\"_EM_555_XYZ_\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 102L)
                .d("ID", "653")
                .d("ORGANIZATION_ID", "205")
                .d("SNAPSHOT_DATE", "\"1978-09-30 04:15:35\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"_EM_1115_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "22")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "410")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "18")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet GET:/statistics/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 500 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "205")
                .get(baseUrlOfSut + "/statistics/contributors")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/statistics/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_4_getOnStatisticsContributorsWithQueryParamsEmptySortByShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet GET:/statistics/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 500 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "U7AyF2UBgUYzKNG")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=xH2fbqZdQtGA1V&" + 
                    "q=nmlTvTG33dZ&" + 
                    "offset=356&" + 
                    "limit=7&" + 
                    "sortBy=")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_5_getOnContributorsWithQueryParamsNegativeLimitShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_217_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "MQ9MzA91GjL72cK")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=FExx1lQqx&" + 
                    "limit=-1705179091&" + 
                    "end_date=D14gf3EvAJYymkBM&" + 
                    "sortBy=0rmY4uA8vaHfYA")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_217_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("limit must be greater than zero but was -1705179091"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_6_getOnContributorsWithQueryParamsEmptySortByAndEmptyQShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 21L)
                .d("ID", "706")
                .d("ORGANIZATION_ID", "109")
                .d("SNAPSHOT_DATE", "\"2051-11-03 03:11:50\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"_IqCxMeLJIek\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=109&" + 
                    "limit=21&" + 
                    "sortBy=&" + 
                    "q=")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_7_getOnContributorsWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=UMr3Gbm74DUt&" + 
                    "q=YdKqZ")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_8_getOnContributorsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 14L)
                .d("ID", "3")
                .d("ORGANIZATION_ID", "598")
                .d("SNAPSHOT_DATE", "\"2042-11-07 22:16:16\"")
                .d("NAME", "\"_EM_343_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"vjla7LwH_XsPV7Pz\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "618")
                .d("URL", "\"LjI1EAx6s2\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=598&" + 
                    "offset=294&" + 
                    "start_date=_EM_344_XYZ_&" + 
                    "end_date=6QuDlpRT&" + 
                    "sortBy=wh_QjsUIDnZZV&" + 
                    "q=rzPflzzq&" + 
                    "EMextraParam123=_EM_9_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was wh_QjsUIDnZZV. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_9_getOnContributorsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 13L)
                .d("ID", "69")
                .d("ORGANIZATION_ID", "724")
                .d("SNAPSHOT_DATE", "\"2088-11-15 18:36:27\"")
                .d("NAME", "\"ifytXlZgKmtMVONE\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "300")
                .d("PERSONAL_COMMITS_COUNT", "70")
                .d("PERSONAL_PROJECTS_COUNT", "326")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601 GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=724&" + 
                    "limit=90&" + 
                    "offset=1298807631&" + 
                    "start_date=v2Zfb&" + 
                    "end_date=_EM_338_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"_EM_338_XYZ_\""))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_10_getOnContributorsWithQueryParamsEmptySortByShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=PE&" + 
                    "limit=744&" + 
                    "offset=513&" + 
                    "sortBy=&" + 
                    "q=8sKITqeQGRp1xP")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/projects
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_11_getOnProjectsWithQueryParamsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 47L)
                .d("COMMITS_COUNT", "882")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "173")
                .d("GIT_HUB_PROJECT_ID", "NULL")
                .d("LAST_PUSHED", "\"_EM_590_XYZ_\"")
                .d("NAME", "\"yayf1\"")
                .d("ORGANIZATION_NAME", "\"JTBXoX\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1960-12-01 13:34:23\"")
                .d("STARS_COUNT", "939")
                .d("URL", "\"_EM_591_XYZ_\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"_EM_593_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/repo/ProjectRepositoryImpl_80_getSnapshotDateMatch GET:/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> Response status 500 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=JTBXoX&" + 
                    "start_date=2028-03-14T00%3A55%3A20%2B12%3A26&" + 
                    "q=TySHolCnLbgFcgra&" + 
                    "language=1cj1LKpqq1Tmoo")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/repo/ProjectRepositoryImpl_80_getSnapshotDateMatch
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("org.springframework.orm.jpa.JpaSystemException"))
                .body("'message'", containsString("Null value was assigned to a property [class org.zalando.catwatch.backend.model.Project.gitHubProjectId] of primitive type setter of org.zalando.catwatch.backend.model.Project.gitHubProjectId; nested exception is org.hibernate.PropertyAccessException: Null value was assigned to a property [class org.zalando.catwatch.backend.model.Project.gitHubProjectId] of primitive type setter of org.zalando.catwatch.backend.model.Project.gitHubProjectId"))
                .body("'path'", containsString("/projects"));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/config
    * 2 - (500) GET:/contributors
    * 3 - (403) GET:/statistics
    * 4 - (400) GET:/statistics/contributors
    * 5 - (null) GET:/fetch
    * Found 5 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_12_getOnFetchShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config?access_token=_EM_1402_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=UMr3Gbm74DUt&" + 
                    "q=YdKqZ")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=_EM_448_XYZ_&" + 
                    "access_token=_EM_450_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 400 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "start_date=4brM60n&" + 
                    "end_date=hNan8jTGhwZ_3iwx&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .get(baseUrlOfSut + "/fetch");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (200) GET:/config
    * Found 4 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_13_getOnConfigReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/github.login'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.database.driverClassName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.datasource.platform'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.jpa.database'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "oU")
                .get(baseUrlOfSut + "/config?" + 
                    "end_date=5K&" + 
                    "organizations=W&" + 
                    "start_date=EuK")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'cache.path'", containsString("target/cache"))
                .body("'cache.size'", containsString("50"))
                .body("'endpoints.enabled'", containsString("false"))
                .body("'endpoints.health.enabled'", containsString("true"))
                .body("'github.login'", nullValue())
                .body("'organization.list'", containsString("zalando,zalando-stups,zalando-incubator"))
                .body("'schedule'", containsString("0 1 8 * * *"))
                .body("'scoring.project'", containsString("function(project) {var daysSinceLastPush = 0;if (project.lastPushed) {var tokens = project.lastPushed.split(\" \");var day = tokens[2];var month = tokens[1];var year = tokens[5];var lastPushedDate = new Date(day + ' ' + month + ' ' + year);var millisInDay = 86400000;daysSinceLastPush = Math.floor((new Date() - lastPushedDate) / millisInDay);}var maintainersPenalty = 0;if (project.maintainers.length < 2) {maintainersPenalty = 100;}return project.starsCount * 3 + project.forksCount * 2 + project.contributorsCount * 5 - daysSinceLastPush - maintainersPenalty}"))
                .body("'spring.database.driverClassName'", nullValue())
                .body("'spring.datasource.platform'", nullValue())
                .body("'spring.datasource.url'", containsString("jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;"))
                .body("'spring.datasource.username'", containsString("sa"))
                .body("'spring.jpa.database'", nullValue())
                .body("'spring.jpa.hibernate.ddl-auto'", containsString("update"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/config
    * Found 4 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_14_getOnConfigReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 63L)
                .d("ID", "-3213453871701501952")
                .d("SNAPSHOT_DATE", "\"1913-08-09 17:46:49\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "796")
                .d("ALL_SIZE_COUNT", "667")
                .d("ALL_STARS_COUNT", "-1745597588")
                .d("MEMBERS_COUNT", "55")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "619")
                .d("PUBLIC_PROJECT_COUNT", "765")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "261")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "715")
            .and().insertInto("CONTRIBUTOR", 64L)
                .d("ID", "43")
                .d("ORGANIZATION_ID", "873")
                .d("SNAPSHOT_DATE", "\"2014-05-10 12:32:06\"")
                .d("NAME", "\"ov3LfNC\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "780")
                .d("PERSONAL_PROJECTS_COUNT", "942")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/github.login'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.database.driverClassName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.datasource.platform'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.jpa.database'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'cache.path'", containsString("target/cache"))
                .body("'cache.size'", containsString("50"))
                .body("'endpoints.enabled'", containsString("false"))
                .body("'endpoints.health.enabled'", containsString("true"))
                .body("'github.login'", nullValue())
                .body("'organization.list'", containsString("zalando,zalando-stups,zalando-incubator"))
                .body("'schedule'", containsString("0 1 8 * * *"))
                .body("'scoring.project'", containsString("function(project) {var daysSinceLastPush = 0;if (project.lastPushed) {var tokens = project.lastPushed.split(\" \");var day = tokens[2];var month = tokens[1];var year = tokens[5];var lastPushedDate = new Date(day + ' ' + month + ' ' + year);var millisInDay = 86400000;daysSinceLastPush = Math.floor((new Date() - lastPushedDate) / millisInDay);}var maintainersPenalty = 0;if (project.maintainers.length < 2) {maintainersPenalty = 100;}return project.starsCount * 3 + project.forksCount * 2 + project.contributorsCount * 5 - daysSinceLastPush - maintainersPenalty}"))
                .body("'spring.database.driverClassName'", nullValue())
                .body("'spring.datasource.platform'", nullValue())
                .body("'spring.datasource.url'", containsString("jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;"))
                .body("'spring.datasource.username'", containsString("sa"))
                .body("'spring.jpa.database'", nullValue())
                .body("'spring.jpa.hibernate.ddl-auto'", containsString("update"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    * Found 12 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_15_getOnExportWithQueryParamsEmptyOrganizationsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 38L)
                .d("ID", "153")
                .d("SNAPSHOT_DATE", "\"2055-05-22 11:14:40\"")
                .d("ALL_CONTRIBUTORS_COUNT", "220")
                .d("ALL_FORKS_COUNT", "-130705")
                .d("ALL_SIZE_COUNT", "957")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "-261435")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "33")
                .d("TAGS_COUNT", "463")
                .d("TEAMS_COUNT", "0")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "665")
            .and().insertInto("CONTRIBUTOR", 39L)
                .d("ID", "957")
                .d("ORGANIZATION_ID", "885")
                .d("SNAPSHOT_DATE", "\"2015-11-05 01:49:19\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"d5CFDXOk8v7FZM7N\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "22")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "-812")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "2015-11-05T01:49:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationalProjectsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/personalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/url'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2055-05-22T11:14:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/membersCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/programLanguagesCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "uy2Y_USPTKfrNH")
                .get(baseUrlOfSut + "/export?" + 
                    "end_date=GTxSHROQcXDk5v9S&" + 
                    "q=K6&" + 
                    "offset=RkWqunh&" + 
                    "organizations=&" + 
                    "limit=7Q9FA0CE&" + 
                    "language=74dj0lGXk")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(885.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("2015-11-05T01:49:19"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", nullValue())
                .body("'contributors'[0].'url'", nullValue())
                .body("'contributors'[0].'organizationalCommitsCount'", numberMatches(22.0))
                .body("'contributors'[0].'personalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(-812.0))
                .body("'contributors'[0].'organizationalProjectsCount'", nullValue())
                .body("'contributors'[0].'organizationName'", containsString("d5CFDXOk8v7FZM7N"))
                .body("'contributors'[0].'organizationId'", numberMatches(885.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(1.446698959E12))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2055-05-22T11:14:40"))
                .body("'statistics'[0].'privateProjectCount'", numberMatches(-261435.0))
                .body("'statistics'[0].'publicProjectCount'", numberMatches(33.0))
                .body("'statistics'[0].'membersCount'", nullValue())
                .body("'statistics'[0].'teamsCount'", numberMatches(0.0))
                .body("'statistics'[0].'allContributorsCount'", numberMatches(220.0))
                .body("'statistics'[0].'externalContributorsCount'", numberMatches(665.0))
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", numberMatches(-130705.0))
                .body("'statistics'[0].'allSizeCount'", numberMatches(957.0))
                .body("'statistics'[0].'programLanguagesCount'", nullValue())
                .body("'statistics'[0].'tagsCount'", numberMatches(463.0))
                .body("'statistics'[0].'organizationName'", nullValue())
                .body("'statistics'[0].'snapshotDate'", numberMatches(2.69460808E12));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    * Found 18 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_16_getOnExportReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 105L)
                .d("ID", "137")
                .d("SNAPSHOT_DATE", "\"2005-07-05 08:34:53\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "821")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"120\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 106L)
                .d("ID", "20")
                .d("ORGANIZATION_ID", "120")
                .d("SNAPSHOT_DATE", "\"2090-06-23 22:17:44\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"V7\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "270")
                .d("PERSONAL_PROJECTS_COUNT", "18")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "2090-06-23T22:17:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationalProjectsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/url'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allSizeCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2005-07-05T08:34:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/membersCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/privateProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/programLanguagesCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/publicProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/tagsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/teamsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "end_date=4VU6O0sAPrP&" + 
                    "organizations=120&" + 
                    "limit=812")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(120.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("2090-06-23T22:17:44"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", nullValue())
                .body("'contributors'[0].'url'", nullValue())
                .body("'contributors'[0].'organizationalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalCommitsCount'", numberMatches(270.0))
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(18.0))
                .body("'contributors'[0].'organizationalProjectsCount'", nullValue())
                .body("'contributors'[0].'organizationName'", containsString("V7"))
                .body("'contributors'[0].'organizationId'", numberMatches(120.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(3.801950264E12))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2005-07-05T08:34:53"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", nullValue())
                .body("'statistics'[0].'membersCount'", nullValue())
                .body("'statistics'[0].'teamsCount'", nullValue())
                .body("'statistics'[0].'allContributorsCount'", nullValue())
                .body("'statistics'[0].'externalContributorsCount'", nullValue())
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", numberMatches(821.0))
                .body("'statistics'[0].'allSizeCount'", nullValue())
                .body("'statistics'[0].'programLanguagesCount'", nullValue())
                .body("'statistics'[0].'tagsCount'", nullValue())
                .body("'statistics'[0].'organizationName'", containsString("120"))
                .body("'statistics'[0].'snapshotDate'", numberMatches(1.120563293E12));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    * Found 22 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_17_getOnExportReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 100L)
                .d("ID", "193")
                .d("SNAPSHOT_DATE", "\"2003-03-18 16:51:52\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"205\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "535")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "404")
                .d("TEAMS_COUNT", "887")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "302")
            .and().insertInto("PROJECT", 101L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "337")
                .d("DESCRIPTION", "\"_EM_1111_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "944")
                .d("LAST_PUSHED", "\"_EM_1112_XYZ_\"")
                .d("NAME", "\"_EM_1113_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"lLuvbZ2GJ_\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"2093-03-29 10:39:59\"")
                .d("STARS_COUNT", "995")
                .d("URL", "\"_EM_555_XYZ_\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 102L)
                .d("ID", "653")
                .d("ORGANIZATION_ID", "205")
                .d("SNAPSHOT_DATE", "\"1978-09-30 04:15:35\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"_EM_1115_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "22")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "410")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "18")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "1978-09-30T04:15:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/personalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/url'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/commitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/forksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/image'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/score'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] String "2093-03-29T10:39:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/title'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allForksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allSizeCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2003-03-18T16:51:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/membersCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/privateProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/publicProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "PmbZ7q")
                .get(baseUrlOfSut + "/export?" + 
                    "offset=GEe2&" + 
                    "organizations=jfxd1&" + 
                    "sortBy=rPiV4fo1&" + 
                    "language=aH8ZKVi5rvxe1SV")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(205.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1978-09-30T04:15:35"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", nullValue())
                .body("'contributors'[0].'url'", nullValue())
                .body("'contributors'[0].'organizationalCommitsCount'", numberMatches(22.0))
                .body("'contributors'[0].'personalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(18.0))
                .body("'contributors'[0].'organizationalProjectsCount'", numberMatches(410.0))
                .body("'contributors'[0].'organizationName'", containsString("_EM_1115_XYZ_"))
                .body("'contributors'[0].'organizationId'", numberMatches(205.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(2.75987735E11))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(944.0))
                .body("'projects'[0].'snapshotDate'", containsString("2093-03-29T10:39:59"))
                .body("'projects'[0].'name'", containsString("_EM_1113_XYZ_"))
                .body("'projects'[0].'title'", nullValue())
                .body("'projects'[0].'image'", nullValue())
                .body("'projects'[0].'organizationName'", nullValue())
                .body("'projects'[0].'url'", containsString("_EM_555_XYZ_"))
                .body("'projects'[0].'description'", containsString("_EM_1111_XYZ_"))
                .body("'projects'[0].'starsCount'", numberMatches(995.0))
                .body("'projects'[0].'commitsCount'", nullValue())
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", numberMatches(337.0))
                .body("'projects'[0].'externalContributorsCount'", nullValue())
                .body("'projects'[0].'score'", nullValue())
                .body("'projects'[0].'lastPushed'", containsString("_EM_1112_XYZ_"))
                .body("'projects'[0].'primaryLanguage'", containsString("lLuvbZ2GJ_"))
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2003-03-18T16:51:52"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", nullValue())
                .body("'statistics'[0].'membersCount'", nullValue())
                .body("'statistics'[0].'teamsCount'", numberMatches(887.0))
                .body("'statistics'[0].'allContributorsCount'", nullValue())
                .body("'statistics'[0].'externalContributorsCount'", numberMatches(302.0))
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", nullValue())
                .body("'statistics'[0].'allSizeCount'", nullValue())
                .body("'statistics'[0].'programLanguagesCount'", numberMatches(535.0))
                .body("'statistics'[0].'tagsCount'", numberMatches(404.0))
                .body("'statistics'[0].'organizationName'", containsString("205"))
                .body("'statistics'[0].'snapshotDate'", numberMatches(1.048017112E12));
    }
    
    
    /**
    * Calls:
    * (400) GET:/delete
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_18_getOnDeleteWithQueryParamsEmptyAccess_tokenReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> Response status 400 not defined for path '/delete'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "_EM_10_XYZ_")
                .get(baseUrlOfSut + "/delete?" + 
                    "EMextraParam123=42&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_19_getOnFetchWithQueryParamEmptyAccess_tokenReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/fetch -> Response status 400 not defined for path '/fetch'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/fetch?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_20_getOnStatisticsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> Response status 400 not defined for path '/statistics'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=N8ujhfmaMwoF&" + 
                    "end_date=snfGCDLE&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for endDate"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/languages
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_21_getOnLanguagesWithQueryParamsEmptyAccess_tokenReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> Response status 400 not defined for path '/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=Ydegtx0fE&" + 
                    "limit=220&" + 
                    "q=wLpup1treKnFif&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics/languages
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_22_getOnStatisticsLanguagesWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> Response status 400 not defined for path '/statistics/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=E0zH0WrUqPDo&" + 
                    "end_date=KbJWxOMPmTVO95_c")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string KbJWxOMPmTVO95_c."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_23_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 70L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "764")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "317")
                .d("GIT_HUB_PROJECT_ID", "609")
                .d("LAST_PUSHED", "\"_EM_758_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"l3mghc9v\"")
                .d("SCORE", "707")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "105")
            .and().insertInto("STATISTICS", 71L)
                .d("ID", "514")
                .d("SNAPSHOT_DATE", "\"1935-04-21 16:33:25\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"mZt\"")
                .d("PRIVATE_PROJECT_COUNT", "72")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "12")
                .d("TEAMS_COUNT", "-1502089544")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "263")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=1949-00-29T19%3A03%3A57.748%2B22%3A57&" + 
                    "q=jiWD")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string 1949-00-29T19:03:57.748+22:57."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_24_getOnStatisticsProjectsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=hacSe&" + 
                    "end_date=nKzSFJ5jhrb4&" + 
                    "q=x_k1&" + 
                    "offset=EGW0sS&" + 
                    "limit=KIY7GYSkp6m30&" + 
                    "language=jmW")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string hacSe."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/export
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_25_getOnExportWithQueryParamsEmptyAccess_tokenReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> Response status 400 not defined for path '/export'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "NPB4UaMhPDZ3")
                .get(baseUrlOfSut + "/export?" + 
                    "access_token=&" + 
                    "end_date=Ep3b1LcHY1kPOM&" + 
                    "q=qnME1Y&" + 
                    "offset=27zBIJFqjNxC&" + 
                    "sortBy=lF&" + 
                    "start_date=wQXsp7gh")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributors
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_26_getOnContributorsWithQueryParamsEmptyAccess_tokenReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 400 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_205_XYZ_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_202_XYZ_&" + 
                    "start_date=32chP0s&" + 
                    "sortBy=cxOzK4GOUPNdhwg&" + 
                    "q=_EM_204_XYZ_&" + 
                    "EMextraParam123=_EM_9_XYZ_&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics/contributors
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_27_getOnContributorsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 100L)
                .d("ID", "193")
                .d("SNAPSHOT_DATE", "\"2003-03-18 16:51:52\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "152")
                .d("MEMBERS_COUNT", "280")
                .d("ORGANIZATION_NAME", "\"_EM_1140_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "155")
                .d("PROGRAM_LANGUAGES_COUNT", "535")
                .d("PUBLIC_PROJECT_COUNT", "446")
                .d("TAGS_COUNT", "404")
                .d("TEAMS_COUNT", "887")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "302")
            .and().insertInto("PROJECT", 101L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-65199")
                .d("DESCRIPTION", "\"_EM_1111_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "944")
                .d("LAST_PUSHED", "\"_EM_1112_XYZ_\"")
                .d("NAME", "\"_EM_1113_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"lLuvbZ2GJ\"")
                .d("SCORE", "130")
                .d("SNAPSHOT_DATE", "\"2093-03-29 10:39:59\"")
                .d("STARS_COUNT", "0")
                .d("URL", "\"_EM_555_XYZ_\"")
                .d("TITLE", "\"8PbA6WHh235iS\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 102L)
                .d("ID", "653")
                .d("ORGANIZATION_ID", "203")
                .d("SNAPSHOT_DATE", "\"1978-09-30 04:15:35\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"S_vTi7V8lx\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-32358")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "0")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 400 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_1140_XYZ_")
                .header("X-Organizations", "_EM_1140_XYZ_")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "start_date=_EM_1140_XYZ_&" + 
                    "limit=JcUu&" + 
                    "sortBy=ysyMJVBuKPQS&" + 
                    "language=6gF66QkF5r9mnpG")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string _EM_1140_XYZ_."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_28_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> Response status 400 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=v&" + 
                    "start_date=2063-03-05T10%3A48%3A53.547Z&" + 
                    "end_date=1965-13-16T06%3A30%3A36Z&" + 
                    "sortBy=h4Jb&" + 
                    "language=W5N3n")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'exception'", containsString("org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"))
                .body("'message'", containsString("Failed to convert value of type 'java.lang.String' to required type 'java.util.Date'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@io.swagger.annotations.ApiParam @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.util.Date] for value '1965-13-16T06:30:36Z'; nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [1965-13-16T06:30:36Z]"))
                .body("'path'", containsString("/projects"));
    }
    
    
    /**
    * Calls:
    * (401) GET:/delete
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_29_getOnDeleteReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/delete")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    /**
    * Calls:
    * (401) GET:/init
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_30_getOnInitReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "_EM_153_XYZ_")
                .get(baseUrlOfSut + "/init?EMextraParam123=_EM_11_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    /**
    * Calls:
    * (403) GET:/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_31_getOnFetchWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/fetch -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/fetch?access_token=lFS6NFqLo5ij")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/init
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_32_getOnInitReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init?access_token=FxOID")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/import
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_33_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"id\": 975, " + 
                    " \"organizationalCommitsCount\": 461, " + 
                    " \"organizationalProjectsCount\": 588, " + 
                    " \"personalProjectsCount\": 153, " + 
                    " \"snapshotDate\": \"2057-03-21T06:19:22-14:02\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allContributorsCount\": 301, " + 
                    " \"allSizeCount\": 677, " + 
                    " \"externalContributorsCount\": 665, " + 
                    " \"membersCount\": 603, " + 
                    " \"organizationName\": \"yD1S7lY_6FJcu5UN\", " + 
                    " \"tagsCount\": 767 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 220, " + 
                    " \"allStarsCount\": 685, " + 
                    " \"externalContributorsCount\": 810, " + 
                    " \"id\": 784, " + 
                    " \"key\": { " + 
                    " \"id\": 266 " + 
                    " }, " + 
                    " \"membersCount\": 267, " + 
                    " \"organizationName\": \"d5CFDXOk8v7FZM7N\", " + 
                    " \"privateProjectCount\": 369, " + 
                    " \"publicProjectCount\": 2065687081, " + 
                    " \"snapshotDate\": \"2099-05-19T06:49:38.253Z\" " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 544, " + 
                    " \"allSizeCount\": 681, " + 
                    " \"key\": { " + 
                    " \"id\": 142 " + 
                    " }, " + 
                    " \"organizationName\": \"UQAABbw3\", " + 
                    " \"privateProjectCount\": 675, " + 
                    " \"publicProjectCount\": 347, " + 
                    " \"snapshotDate\": \"2049-09-15T04:42:60-19:00\", " + 
                    " \"tagsCount\": 1049039, " + 
                    " \"teamsCount\": 703 " + 
                    " }, " + 
                    " { " + 
                    " \"allSizeCount\": 503, " + 
                    " \"externalContributorsCount\": 614, " + 
                    " \"id\": 225, " + 
                    " \"membersCount\": 348, " + 
                    " \"privateProjectCount\": 202, " + 
                    " \"publicProjectCount\": 990, " + 
                    " \"teamsCount\": 230 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?access_token=HwsPIxTVzSAMDT5")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/delete
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_34_getOnDeleteReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 100L)
                .d("ID", "193")
                .d("SNAPSHOT_DATE", "\"2003-03-18 16:51:52\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "152")
                .d("MEMBERS_COUNT", "280")
                .d("ORGANIZATION_NAME", "\"_EM_1140_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "155")
                .d("PROGRAM_LANGUAGES_COUNT", "535")
                .d("PUBLIC_PROJECT_COUNT", "446")
                .d("TAGS_COUNT", "404")
                .d("TEAMS_COUNT", "887")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "302")
            .and().insertInto("PROJECT", 101L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-65199")
                .d("DESCRIPTION", "\"_EM_1111_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "944")
                .d("LAST_PUSHED", "\"_EM_1112_XYZ_\"")
                .d("NAME", "\"_EM_1113_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"lLuvbZ2GJ\"")
                .d("SCORE", "130")
                .d("SNAPSHOT_DATE", "\"2093-03-29 10:39:59\"")
                .d("STARS_COUNT", "0")
                .d("URL", "\"_EM_555_XYZ_\"")
                .d("TITLE", "\"8PbA6WHh235iS\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 102L)
                .d("ID", "653")
                .d("ORGANIZATION_ID", "203")
                .d("SNAPSHOT_DATE", "\"1978-09-30 04:15:35\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"S_vTi7V8lx\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-32358")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "0")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/delete?access_token=_EM_1140_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/config
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_35_getOnConfigReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "qBh5AzaeHIkHP")
                .get(baseUrlOfSut + "/config?" + 
                    "access_token=iauP1vnJng3Bdii&" + 
                    "end_date=dRJq9fW1mTP")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_36_getOnStatisticsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=_EM_739_XYZ_&" + 
                    "start_date=W0rQV4w&" + 
                    "end_date=fRlre8&" + 
                    "access_token=_EM_741_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_37_getOnStatisticsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 93L)
                .d("ID", "445")
                .d("SNAPSHOT_DATE", "\"2020-02-08 09:58:54\"")
                .d("ALL_CONTRIBUTORS_COUNT", "157")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "-1727490958")
                .d("ORGANIZATION_NAME", "\"Ld42I\"")
                .d("PRIVATE_PROJECT_COUNT", "248")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "474")
                .d("TEAMS_COUNT", "998")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "Ld42I")
                .header("X-Organizations", "uRvFsKvr7bC59")
                .get(baseUrlOfSut + "/statistics?" + 
                    "start_date=gwIkyQbgP4f&" + 
                    "end_date=_EM_1063_XYZ_&" + 
                    "access_token=_EM_1064_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/import
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_38_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "cRLAhV0nT1_BalGt")
                .contentType("application/json")
                .body(" { " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"commitsCount\": 204, " + 
                    " \"description\": \"CowXXnGbUSu\", " + 
                    " \"externalContributorsCount\": 761, " + 
                    " \"gitHubProjectId\": 907, " + 
                    " \"image\": \"b8UOaSOS\", " + 
                    " \"maintainers\": [ " + 
                    " \"\" " + 
                    " ], " + 
                    " \"score\": 166, " + 
                    " \"url\": \"MadqOX9Gc3w\" " + 
                    " }, " + 
                    " { " + 
                    " \"commitsCount\": 523, " + 
                    " \"contributorsCount\": 383, " + 
                    " \"description\": \"ZMdwS\", " + 
                    " \"forksCount\": 29, " + 
                    " \"lastPushed\": \"yE2zecR\", " + 
                    " \"maintainers\": [ " + 
                    " \"\", " + 
                    " \"c55gFB4\" " + 
                    " ], " + 
                    " \"name\": \"6ETsGBinNbJ8\", " + 
                    " \"score\": 310, " + 
                    " \"title\": \"Hi5dELhAWR7Cb\", " + 
                    " \"url\": \"dQMUg6O\" " + 
                    " }, " + 
                    " { " + 
                    " \"description\": \"KP3wbM\", " + 
                    " \"forksCount\": 1298393852, " + 
                    " \"gitHubProjectId\": 277, " + 
                    " \"image\": \"nWpIx0\", " + 
                    " \"lastPushed\": \"5s844g\", " + 
                    " \"name\": \"_i2FTVp2teS6\", " + 
                    " \"score\": 763, " + 
                    " \"starsCount\": 259, " + 
                    " \"title\": \"a2rAlH8NpfBYK0\", " + 
                    " \"url\": \"NGxXleyh\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allContributorsCount\": 731, " + 
                    " \"allForksCount\": 721072003, " + 
                    " \"allSizeCount\": 426, " + 
                    " \"allStarsCount\": 201, " + 
                    " \"id\": 168, " + 
                    " \"key\": {}, " + 
                    " \"snapshotDate\": \"1970-09-00T02:43:-1Z\", " + 
                    " \"teamsCount\": 739 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?" + 
                    "q=RQ&" + 
                    "offset=2o8CHK3u9&" + 
                    "organizations=&" + 
                    "limit=N6SBCV1pna5")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_39_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 19L)
                .d("ID", "197")
                .d("SNAPSHOT_DATE", "\"1965-04-07 13:02:07\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "80")
                .d("ALL_SIZE_COUNT", "928")
                .d("ALL_STARS_COUNT", "-16777212")
                .d("MEMBERS_COUNT", "525109")
                .d("ORGANIZATION_NAME", "\"r8\"")
                .d("PRIVATE_PROJECT_COUNT", "388")
                .d("PROGRAM_LANGUAGES_COUNT", "498")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "-195885")
                .d("TEAMS_COUNT", "-827421279")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=_EM_441_XYZ_&" + 
                    "end_date=_EM_424_XYZ_&" + 
                    "access_token=_EM_426_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/import
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_40_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "cRLAhV0nT1_BalGt")
                .contentType("application/json")
                .body(" { " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"commitsCount\": 204, " + 
                    " \"description\": \"CowXXnGbUSu\", " + 
                    " \"externalContributorsCount\": 761, " + 
                    " \"gitHubProjectId\": 907, " + 
                    " \"image\": \"b8UOaSOS\", " + 
                    " \"maintainers\": [ " + 
                    " \"\" " + 
                    " ], " + 
                    " \"score\": 166, " + 
                    " \"url\": \"MadqOX9Gc3w\" " + 
                    " }, " + 
                    " { " + 
                    " \"commitsCount\": 523, " + 
                    " \"contributorsCount\": 383, " + 
                    " \"description\": \"ZMdwS\", " + 
                    " \"forksCount\": 29, " + 
                    " \"lastPushed\": \"yE2zecR\", " + 
                    " \"maintainers\": [ " + 
                    " \"\", " + 
                    " \"c55gFB4\" " + 
                    " ], " + 
                    " \"name\": \"6ETsGBinNbJ8\", " + 
                    " \"score\": 310, " + 
                    " \"title\": \"Hi5dELhAWR7Cb\", " + 
                    " \"url\": \"dQMUg6O\" " + 
                    " }, " + 
                    " { " + 
                    " \"description\": \"KP3wbM\", " + 
                    " \"forksCount\": 1298393852, " + 
                    " \"gitHubProjectId\": 277, " + 
                    " \"image\": \"nWpIx0\", " + 
                    " \"lastPushed\": \"5s844g\", " + 
                    " \"name\": \"_i2FTVp2teS6\", " + 
                    " \"score\": 763, " + 
                    " \"starsCount\": 259, " + 
                    " \"title\": \"a2rAlH8NpfBYK0\", " + 
                    " \"url\": \"NGxXleyh\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allContributorsCount\": 731, " + 
                    " \"allForksCount\": 721072003, " + 
                    " \"allSizeCount\": 426, " + 
                    " \"allStarsCount\": 201, " + 
                    " \"id\": 168, " + 
                    " \"key\": {}, " + 
                    " \"snapshotDate\": \"1970-09-00T02:43:-1Z\", " + 
                    " \"teamsCount\": 739 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?" + 
                    "q=RQ&" + 
                    "offset=2o8CHK3u9&" + 
                    "organizations=")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/import
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_41_postOnImportWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_1122_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"commitsCount\": 204, " + 
                    " \"description\": \"CowXXnGbUSu\", " + 
                    " \"externalContributorsCount\": 761, " + 
                    " \"gitHubProjectId\": 907, " + 
                    " \"image\": \"b8UOaSOS\", " + 
                    " \"maintainers\": [ " + 
                    " \"\" " + 
                    " ], " + 
                    " \"score\": 166, " + 
                    " \"url\": \"MadqOX9Gc3w\" " + 
                    " }, " + 
                    " { " + 
                    " \"commitsCount\": 523, " + 
                    " \"contributorsCount\": 383, " + 
                    " \"description\": \"ZMdwS\", " + 
                    " \"forksCount\": 29, " + 
                    " \"lastPushed\": \"yE2zecR\", " + 
                    " \"maintainers\": [ " + 
                    " \"\", " + 
                    " \"c55gFB4\" " + 
                    " ], " + 
                    " \"name\": \"6ETsGBinNbJ8\", " + 
                    " \"score\": 310, " + 
                    " \"title\": \"Hi5dELhAWR7Cb\", " + 
                    " \"url\": \"dQMUg6O\" " + 
                    " }, " + 
                    " { " + 
                    " \"description\": \"KP3wbM\", " + 
                    " \"forksCount\": 1298393852, " + 
                    " \"gitHubProjectId\": 277, " + 
                    " \"image\": \"nWpIx0\", " + 
                    " \"lastPushed\": \"5s844g\", " + 
                    " \"name\": \"_i2FTVp2teS6\", " + 
                    " \"score\": 763, " + 
                    " \"starsCount\": 259, " + 
                    " \"title\": \"a2rAlH8NpfBYK0\", " + 
                    " \"url\": \"NGxXleyh\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allContributorsCount\": 731, " + 
                    " \"allForksCount\": 721072003, " + 
                    " \"allSizeCount\": 426, " + 
                    " \"allStarsCount\": 201, " + 
                    " \"id\": 168, " + 
                    " \"key\": {}, " + 
                    " \"snapshotDate\": \"1970-09-00T02:43:-1Z\", " + 
                    " \"teamsCount\": 739 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?" + 
                    "q=RQ&" + 
                    "offset=2o8CHK3u9")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/import
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_42_postOnImportReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 105L)
                .d("ID", "137")
                .d("SNAPSHOT_DATE", "\"2005-07-05 08:34:53\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "821")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"120\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 106L)
                .d("ID", "20")
                .d("ORGANIZATION_ID", "120")
                .d("SNAPSHOT_DATE", "\"2090-06-23 22:17:44\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"V7\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "270")
                .d("PERSONAL_PROJECTS_COUNT", "18")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "120")
                .contentType("application/json")
                .body(" { " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allForksCount\": 912, " + 
                    " \"allStarsCount\": 568, " + 
                    " \"externalContributorsCount\": 320, " + 
                    " \"organizationName\": \"d5CFDXOk8v7FZM7N\", " + 
                    " \"privateProjectCount\": 196, " + 
                    " \"snapshotDate\": \"1907-01-31T11:43:49.548Z\" " + 
                    " }, " + 
                    " { " + 
                    " \"allForksCount\": 0, " + 
                    " \"allSizeCount\": 791, " + 
                    " \"id\": 609, " + 
                    " \"membersCount\": -1727490958, " + 
                    " \"snapshotDate\": \"1985-09-00T19:33:39-22:59\" " + 
                    " }, " + 
                    " { " + 
                    " \"allSizeCount\": 54, " + 
                    " \"allStarsCount\": 635, " + 
                    " \"externalContributorsCount\": 202, " + 
                    " \"id\": 950, " + 
                    " \"key\": { " + 
                    " \"snapshotDate\": \"2002-12-13T15:59:47.499Z\" " + 
                    " }, " + 
                    " \"organizationName\": \"_EM_1212_XYZ_\", " + 
                    " \"programLanguagesCount\": 419, " + 
                    " \"snapshotDate\": \"2090-02-18T20:43:12-23:00\", " + 
                    " \"tagsCount\": 1049039 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 440, " + 
                    " \"externalContributorsCount\": 489, " + 
                    " \"key\": {}, " + 
                    " \"organizationName\": \"d5CFDXOk8v7FZM7N\", " + 
                    " \"privateProjectCount\": 280, " + 
                    " \"publicProjectCount\": 86, " + 
                    " \"snapshotDate\": \"2077-08-11T06:44:21-17:10\", " + 
                    " \"teamsCount\": 0 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?offset=890")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/import
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_43_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_1367_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"organizationId\": 665, " + 
                    " \"snapshotDate\": \"2031-09-21T03:17:53.460Z\" " + 
                    " }, " + 
                    " \"organizationId\": 183, " + 
                    " \"organizationName\": \"WV92e\", " + 
                    " \"organizationalProjectsCount\": 267, " + 
                    " \"personalCommitsCount\": 733, " + 
                    " \"personalProjectsCount\": 458, " + 
                    " \"snapshotDate\": \"2037-08-26T24:58:06-22:27\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 500, " + 
                    " \"loginId\": \"uMgz57rZdREkSgoH\", " + 
                    " \"name\": \"_EM_1360_XYZ_\", " + 
                    " \"organizationId\": -460980322, " + 
                    " \"organizationalCommitsCount\": 974, " + 
                    " \"organizationalProjectsCount\": 204 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?q=r7")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/languages
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_44_getOnLanguagesWithQueryParamsNegativeLimitReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 48L)
                .d("ID", "592")
                .d("SNAPSHOT_DATE", "\"2056-09-07 03:46:00\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "107")
                .d("MEMBERS_COUNT", "105")
                .d("ORGANIZATION_NAME", "\"GtrIcmQvgY7FqrOx\"")
                .d("PRIVATE_PROJECT_COUNT", "731")
                .d("PROGRAM_LANGUAGES_COUNT", "215")
                .d("PUBLIC_PROJECT_COUNT", "707")
                .d("TAGS_COUNT", "-524251")
                .d("TEAMS_COUNT", "237")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "838")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=GtrIcmQvgY7FqrOx&" + 
                    "limit=-960&" + 
                    "offset=855&" + 
                    "access_token=6gnj0toJR5rS")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/contributors
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_45_getOnStatisticsContributorsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "MS0TE28sQR1Eq43")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "end_date=wlnwZ&" + 
                    "access_token=bGPotmZrlROLdC&" + 
                    "sortBy=0&" + 
                    "language=80N2Es1j1DkwYW5")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/export
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_46_getOnExportWithQueryParamsEmptyLimitReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "4jfsg2fw")
                .get(baseUrlOfSut + "/export?" + 
                    "access_token=bLrsWmcvgfltpI_&" + 
                    "q=RCeDTg&" + 
                    "offset=4WV2aJ&" + 
                    "organizations=ObiYdJwkct&" + 
                    "limit=&" + 
                    "language=QlCBFVW2WLNud")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_47_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 77L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"7ey5oM7sl42\"")
                .d("FORKS_COUNT", "417")
                .d("GIT_HUB_PROJECT_ID", "655")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"XWd\"")
                .d("SCORE", "169")
                .d("SNAPSHOT_DATE", "\"1917-09-22 05:27:25\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "NULL")
                .d("TITLE", "\"T\"")
                .d("IMAGE", "\"T1GldALmUQ\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "312")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "B4I_")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "end_date=_EM_832_XYZ_&" + 
                    "access_token=8f6TWIE&" + 
                    "q=R03QZPlE1djfFmRR&" + 
                    "offset=VGR&" + 
                    "sortBy=4f1lyJpV8&" + 
                    "language=XWd")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_48_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 67L)
                .d("ID", "608")
                .d("SNAPSHOT_DATE", "\"1936-03-01 15:45:00\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "7")
                .d("ALL_SIZE_COUNT", "711")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "961")
                .d("ORGANIZATION_NAME", "\"6Jc\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "-464129129")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "644")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 68L)
                .d("COMMITS_COUNT", "240")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"mWmqgi7\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "218")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"yMG078r\"")
                .d("SCORE", "136")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "432")
                .d("URL", "\"AwenknTh\"")
                .d("TITLE", "\"nv\"")
                .d("IMAGE", "\"_EM_725_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=6Jc&" + 
                    "start_date=tK6k_0kT6FIohv&" + 
                    "end_date=9DR2J_IxtYeh0L6&" + 
                    "access_token=2w6c&" + 
                    "limit=G6&" + 
                    "language=yMG078r")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/languages
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_49_getOnLanguagesWithQueryParamsNegativeOffsetEmptyQReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "xtmDS6l4")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=Nwrfwpjl0UO&" + 
                    "limit=323&" + 
                    "offset=-120484953&" + 
                    "q=&" + 
                    "access_token=7hNoMm71&" + 
                    "end_date=_EM_1101_XYZ_&" + 
                    "start_date=wCbygUG")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/config/scoring.project
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_50_postOnScoring_projectReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "3sIef2LpTw")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"6Vdl6L7Y9EzUfW\" ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "end_date=Av2Dlja0VSVjXx&" + 
                    "q=P7Nd3qr7y&" + 
                    "organizations=pxmd")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/config/scoring.project
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_51_postOnScoring_projectReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=Ds0Cinl3nXg9eD&" + 
                    "organizations=Ds0Cinl3nXg9eD")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/contributors
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_52_getOnContributorsWithQueryParamsEmptyOrganizationsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=&" + 
                    "start_date=B&" + 
                    "end_date=ol9yChE&" + 
                    "sortBy=7JGKbEP0yDW4cag&" + 
                    "q=tgxFlw&" + 
                    "access_token=_EM_733_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/contributors
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_53_getOnContributorsWithQueryParamsNegativeOffsetReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "2RkD5A_pdlacA")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=Whhv&" + 
                    "offset=-1304125556&" + 
                    "start_date=9le_takW2D&" + 
                    "end_date=sP2Dq8&" + 
                    "access_token=u6qi7f")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/config/scoring.project
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_54_postOnScoring_projectReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=Ds0Cinl3nXg9eD&" + 
                    "end_date=Ds0Cinl3nXg9eD&" + 
                    "q=Ds0Cinl3nXg9eD&" + 
                    "offset=Ds0Cinl3nXg9eD&" + 
                    "organizations=Ds0Cinl3nXg9eD&" + 
                    "limit=Ds0Cinl3nXg9eD&" + 
                    "sortBy=Ds0Cinl3nXg9eD&" + 
                    "language=Ds0Cinl3nXg9eD&" + 
                    "start_date=Ds0Cinl3nXg9eD")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/config/scoring.project
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_55_postOnScoring_projectReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 100L)
                .d("ID", "193")
                .d("SNAPSHOT_DATE", "\"2003-03-18 16:51:52\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "152")
                .d("MEMBERS_COUNT", "280")
                .d("ORGANIZATION_NAME", "\"_EM_1140_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "155")
                .d("PROGRAM_LANGUAGES_COUNT", "535")
                .d("PUBLIC_PROJECT_COUNT", "446")
                .d("TAGS_COUNT", "404")
                .d("TEAMS_COUNT", "887")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "302")
            .and().insertInto("PROJECT", 101L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-65199")
                .d("DESCRIPTION", "\"_EM_1111_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "944")
                .d("LAST_PUSHED", "\"_EM_1112_XYZ_\"")
                .d("NAME", "\"_EM_1113_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"lLuvbZ2GJ\"")
                .d("SCORE", "130")
                .d("SNAPSHOT_DATE", "\"2093-03-29 10:39:59\"")
                .d("STARS_COUNT", "0")
                .d("URL", "\"_EM_555_XYZ_\"")
                .d("TITLE", "\"8PbA6WHh235iS\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 102L)
                .d("ID", "653")
                .d("ORGANIZATION_ID", "203")
                .d("SNAPSHOT_DATE", "\"1978-09-30 04:15:35\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"S_vTi7V8lx\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-32358")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "0")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "_EM_1140_XYZ_")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=_EM_1140_XYZ_&" + 
                    "end_date=_EM_1140_XYZ_&" + 
                    "start_date=_EM_1140_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_56_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 100L)
                .d("ID", "193")
                .d("SNAPSHOT_DATE", "\"2003-03-18 16:51:52\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "152")
                .d("MEMBERS_COUNT", "280")
                .d("ORGANIZATION_NAME", "\"_EM_1140_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "155")
                .d("PROGRAM_LANGUAGES_COUNT", "535")
                .d("PUBLIC_PROJECT_COUNT", "446")
                .d("TAGS_COUNT", "404")
                .d("TEAMS_COUNT", "887")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "302")
            .and().insertInto("PROJECT", 101L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-65199")
                .d("DESCRIPTION", "\"_EM_1111_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "944")
                .d("LAST_PUSHED", "\"_EM_1112_XYZ_\"")
                .d("NAME", "\"_EM_1113_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"lLuvbZ2GJ\"")
                .d("SCORE", "130")
                .d("SNAPSHOT_DATE", "\"2093-03-29 10:39:59\"")
                .d("STARS_COUNT", "0")
                .d("URL", "\"_EM_555_XYZ_\"")
                .d("TITLE", "\"8PbA6WHh235iS\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 102L)
                .d("ID", "653")
                .d("ORGANIZATION_ID", "203")
                .d("SNAPSHOT_DATE", "\"1978-09-30 04:15:35\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"S_vTi7V8lx\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-32358")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "0")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_1140_XYZ_")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "access_token=_EM_1140_XYZ_&" + 
                    "q=gps4bOB9SxvMfS&" + 
                    "offset=816&" + 
                    "limit=34&" + 
                    "sortBy=EglVLEYzJXqXK&" + 
                    "language=lLuvbZ2GJ")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/contributors
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_57_getOnContributorsWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 13L)
                .d("ID", "69")
                .d("ORGANIZATION_ID", "724")
                .d("SNAPSHOT_DATE", "\"2088-11-15 18:36:27\"")
                .d("NAME", "\"ifytXlZgKmtMVONE\"")
                .d("ORGANIZATION_NAME", "\"_EM_337_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "53")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "33068")
                .d("PERSONAL_COMMITS_COUNT", "70")
                .d("PERSONAL_PROJECTS_COUNT", "326")
                .d("URL", "\"eKHBe3\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=CREATE+INDEX+PUBLIC.CONSTRAINT_INDEX_A+ON+PUBLIC.LANGUAGE_LIST%28PROJECT_ID%29&" + 
                    "limit=90&" + 
                    "offset=1298807631&" + 
                    "start_date=Dv2Zfb&" + 
                    "end_date=_EM_338_XYZ_&" + 
                    "q=5n&" + 
                    "access_token=Ow")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/languages
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_58_getOnStatisticsLanguagesWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 100L)
                .d("ID", "193")
                .d("SNAPSHOT_DATE", "\"2003-03-18 16:51:52\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "152")
                .d("MEMBERS_COUNT", "280")
                .d("ORGANIZATION_NAME", "\"_EM_1140_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "155")
                .d("PROGRAM_LANGUAGES_COUNT", "535")
                .d("PUBLIC_PROJECT_COUNT", "446")
                .d("TAGS_COUNT", "404")
                .d("TEAMS_COUNT", "887")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "302")
            .and().insertInto("PROJECT", 101L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-65199")
                .d("DESCRIPTION", "\"_EM_1111_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "944")
                .d("LAST_PUSHED", "\"_EM_1112_XYZ_\"")
                .d("NAME", "\"_EM_1113_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"lLuvbZ2GJ\"")
                .d("SCORE", "130")
                .d("SNAPSHOT_DATE", "\"2093-03-29 10:39:59\"")
                .d("STARS_COUNT", "0")
                .d("URL", "\"_EM_555_XYZ_\"")
                .d("TITLE", "\"8PbA6WHh235iS\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 102L)
                .d("ID", "653")
                .d("ORGANIZATION_ID", "203")
                .d("SNAPSHOT_DATE", "\"1978-09-30 04:15:35\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"S_vTi7V8lx\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-32358")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "0")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_1140_XYZ_")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "start_date=_EM_1140_XYZ_&" + 
                    "end_date=_EM_1140_XYZ_&" + 
                    "access_token=_EM_1140_XYZ_&" + 
                    "q=gps4bOB9SxvMfS&" + 
                    "limit=34")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/contributors
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_59_getOnContributorsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 100L)
                .d("ID", "193")
                .d("SNAPSHOT_DATE", "\"2003-03-18 16:51:52\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "152")
                .d("MEMBERS_COUNT", "280")
                .d("ORGANIZATION_NAME", "\"_EM_1140_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "155")
                .d("PROGRAM_LANGUAGES_COUNT", "535")
                .d("PUBLIC_PROJECT_COUNT", "446")
                .d("TAGS_COUNT", "404")
                .d("TEAMS_COUNT", "887")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "302")
            .and().insertInto("PROJECT", 101L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-65199")
                .d("DESCRIPTION", "\"_EM_1111_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "944")
                .d("LAST_PUSHED", "\"_EM_1112_XYZ_\"")
                .d("NAME", "\"_EM_1113_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"lLuvbZ2GJ\"")
                .d("SCORE", "130")
                .d("SNAPSHOT_DATE", "\"2093-03-29 10:39:59\"")
                .d("STARS_COUNT", "0")
                .d("URL", "\"_EM_555_XYZ_\"")
                .d("TITLE", "\"8PbA6WHh235iS\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 102L)
                .d("ID", "653")
                .d("ORGANIZATION_ID", "203")
                .d("SNAPSHOT_DATE", "\"1978-09-30 04:15:35\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"S_vTi7V8lx\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-32358")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "0")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_1140_XYZ_")
                .header("X-Organizations", "_EM_1140_XYZ_")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "start_date=_EM_1140_XYZ_&" + 
                    "access_token=_EM_1140_XYZ_&" + 
                    "limit=JcUu&" + 
                    "sortBy=ysyMJVBuKPQS&" + 
                    "language=6gF66QkF5r9mnpG")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_60_getOnProjectsWithQueryParamsEmptySortByAndEmptyQAndEmptyLanguageReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 9L)
                .d("COMMITS_COUNT", "714")
                .d("CONTRIBUTORS_COUNT", "710")
                .d("DESCRIPTION", "\"_EM_273_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "526")
                .d("LAST_PUSHED", "\"_EM_274_XYZ_\"")
                .d("NAME", "\"_EM_275_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"\"")
                .d("SCORE", "431")
                .d("SNAPSHOT_DATE", "\"2025-11-15 05:12:20\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"_EM_276_XYZ_\"")
                .d("TITLE", "\"_EM_277_XYZ_\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "580")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_279_XYZ_")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=494&" + 
                    "offset=62&" + 
                    "end_date=1949-10-07T11%3A23%3A-1.640%2B06%3A57&" + 
                    "sortBy=&" + 
                    "q=&" + 
                    "language=&" + 
                    "EMextraParam123=_EM_17_XYZ_&" + 
                    "access_token=4QyengZ9RkQ5yF")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/projects
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_61_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "2aoYUPmZg")
                .header("X-Organizations", "_EM_1299_XYZ_")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=86s&" + 
                    "limit=535&" + 
                    "offset=562&" + 
                    "end_date=1930-07-21T19%3A41%3A02Z&" + 
                    "language=_EM_1298_XYZ_&" + 
                    "access_token=q4HRaxZMKv6lK0i5")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }


}
