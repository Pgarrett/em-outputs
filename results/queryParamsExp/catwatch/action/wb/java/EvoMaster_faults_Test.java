import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-28T21:36:07.680-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 67 tests
 * <br>
*  Covered targets: 370
 * <br>
*  Used time: 0h 12m 24s
 * <br>
*  Needed budget for current results: 100%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.org.zalando.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CONTRIBUTOR","LANGUAGE_LIST","MAINTAINERS","PROJECT","STATISTICS"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_getOnProjectsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=1960-10-23T22%3A13%3A46-17%3A54&" + 
                    "end_date=2030-08-21T01%3A19%3A44.071-03%3A41")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    @Test(timeout = 60000)
    public void test_1_getOnProjectsWithQueryParamsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 7L)
                .d("ID", "559")
                .d("SNAPSHOT_DATE", "\"1927-11-08 18:29:19\"")
                .d("ALL_CONTRIBUTORS_COUNT", "300")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "597")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "ZKcb")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=rQRc6gBpHy&" + 
                    "EMextraParam123=_EM_5_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    @Test(timeout = 60000)
    public void test_2_getOnProjectsWithQueryParamsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 43L)
                .d("COMMITS_COUNT", "635")
                .d("CONTRIBUTORS_COUNT", "922")
                .d("DESCRIPTION", "\"FNlZDTgUot5YJt\"")
                .d("FORKS_COUNT", "762")
                .d("GIT_HUB_PROJECT_ID", "94")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"_EM_527_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"6Pjd\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "959")
                .d("URL", "\"_EM_528_XYZ_\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"6m3\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 44L)
                .d("ID", "884")
                .d("SNAPSHOT_DATE", "\"2012-07-15 08:17:06\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "622")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "292")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "126")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=6Pjd&" + 
                    "start_date=2060-02-24T17%3A47%3A06%2B03%3A52&" + 
                    "end_date=1900-04-15T09%3A15%3A59.016Z")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    @Test(timeout = 60000)
    public void test_3_getOnStatisticsContributorsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 29L)
                .d("ID", "314")
                .d("ORGANIZATION_ID", "275")
                .d("SNAPSHOT_DATE", "\"1994-09-15 17:36:36\"")
                .d("NAME", "\"_EM_445_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"Iftl\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "763")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "526")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet GET:/statistics/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 500 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "q=_EM_447_XYZ_&" + 
                    "offset=_EM_448_XYZ_&" + 
                    "sortBy=_EM_449_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_4_getOnContributorsWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet GET:/statistics/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 500 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "offset=pqvAGfu&" + 
                    "limit=uayuzy")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_5_getOnLanguagesShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/service/LanguageService_36_filterLanguages GET:/languages
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> Response status 500 not defined for path '/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=PPv8u55XYJn7aX&" + 
                    "offset=-923295780&" + 
                    "q=Uy1SumE822X8NERY&" + 
                    "EMextraParam123=_EM_18_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/service/LanguageService_36_filterLanguages
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("-923295780"))
                .body("'path'", containsString("/languages"));
    }
    
    
    @Test(timeout = 60000)
    public void test_6_getOnContributorsWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601 GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=H&" + 
                    "start_date=m&" + 
                    "q=_EM_124_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"m\""))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_7_getOnContributorsWithQueryParamsEmptyOrganizationsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601 GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=&" + 
                    "offset=402&" + 
                    "start_date=b0a5sqWnZuGiHP8o&" + 
                    "end_date=e4itHP&" + 
                    "q=0U8022L1Z")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"e4itHP\""))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_8_getOnContributorsWithQueryParamsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 67L)
                .d("COMMITS_COUNT", "84")
                .d("CONTRIBUTORS_COUNT", "301")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "653")
                .d("GIT_HUB_PROJECT_ID", "501")
                .d("LAST_PUSHED", "\"_EM_767_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"2054-07-08T17:57:23Z\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "195")
                .d("SNAPSHOT_DATE", "\"1939-11-21 18:02:42\"")
                .d("STARS_COUNT", "341")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"7DGjR6sfOh\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "490")
            .and().insertInto("STATISTICS", 68L)
                .d("ID", "374")
                .d("SNAPSHOT_DATE", "\"1902-10-26 10:50:15\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "361")
                .d("ORGANIZATION_NAME", "\"2054-07-08T17:57:23Z\"")
                .d("PRIVATE_PROJECT_COUNT", "121")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "702")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 69L)
                .d("ID", "612")
                .d("ORGANIZATION_ID", "951")
                .d("SNAPSHOT_DATE", "\"1923-08-09 08:45:48\"")
                .d("NAME", "\"wn9E\"")
                .d("ORGANIZATION_NAME", "\"AFik\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "284")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_230_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=2054-07-08T17%3A57%3A23Z&" + 
                    "offset=951&" + 
                    "start_date=2054-07-08T17%3A57%3A23Z&" + 
                    "end_date=2054-07-08T17%3A57%3A23Z&" + 
                    "q=2054-07-08T17%3A57%3A23Z")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_230_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("startDate 2054-07-08T17:57:23Z must be before endDate2054-07-08T17:57:23Z but was not"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_9_getOnContributorsWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=8EA&" + 
                    "limit=222&" + 
                    "offset=444")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_10_getOnContributorsWithQueryParamsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 70L)
                .d("ID", "778")
                .d("ORGANIZATION_ID", "243")
                .d("SNAPSHOT_DATE", "\"2035-06-17 01:57:36\"")
                .d("NAME", "\"k6LGL\"")
                .d("ORGANIZATION_NAME", "\"FIKLfaMp7b2\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_217_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=243&" + 
                    "limit=-515657284&" + 
                    "offset=799&" + 
                    "end_date=k9Bri")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_217_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("limit must be greater than zero but was -515657284"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_11_getOnContributorsWithQueryParamsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 51L)
                .d("COMMITS_COUNT", "84")
                .d("CONTRIBUTORS_COUNT", "314")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "203")
                .d("LAST_PUSHED", "\"P6pvKROa6Moa3\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "712")
                .d("SNAPSHOT_DATE", "\"1958-04-07 08:00:49\"")
                .d("STARS_COUNT", "1006197077")
                .d("URL", "NULL")
                .d("TITLE", "\"X7_WVK4Z7QYkzv\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "-764015908")
            .and().insertInto("STATISTICS", 52L)
                .d("ID", "477")
                .d("SNAPSHOT_DATE", "\"2028-07-18 09:16:31\"")
                .d("ALL_CONTRIBUTORS_COUNT", "741")
                .d("ALL_FORKS_COUNT", "714")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"FIKLfaMp7b2\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "921")
                .d("PUBLIC_PROJECT_COUNT", "392")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 53L)
                .d("ID", "716")
                .d("ORGANIZATION_ID", "619")
                .d("SNAPSHOT_DATE", "\"1907-03-15 18:44:36\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "609")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=FIKLfaMp7b2&" + 
                    "end_date=2003-09-02T24%3A16%3A06Z&" + 
                    "sortBy=_UwVkrbvbhDHDjLu")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _UwVkrbvbhDHDjLu. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_12_getOnContributorsWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_8_XYZ_&" + 
                    "limit=3&" + 
                    "sortBy=_EM_10_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _EM_10_XYZ_. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_13_getOnContributorsWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=G&" + 
                    "limit=4280&" + 
                    "offset=727&" + 
                    "start_date=fA6MiHYyvw85D&" + 
                    "sortBy=HUaYp&" + 
                    "q=j7uVu_xE014BinnN")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was HUaYp. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_14_getOnContributorsWithQueryParamsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 43L)
                .d("COMMITS_COUNT", "-261509")
                .d("CONTRIBUTORS_COUNT", "922")
                .d("DESCRIPTION", "\"FNlZDTgUot5YJt\"")
                .d("FORKS_COUNT", "762")
                .d("GIT_HUB_PROJECT_ID", "93")
                .d("LAST_PUSHED", "\"9zg2\"")
                .d("NAME", "\"_EM_527_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"6Pjd\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "959")
                .d("URL", "\"_EM_528_XYZ_\"")
                .d("TITLE", "\"mdCC5cUn1sjXZ\"")
                .d("IMAGE", "\"6m3\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 44L)
                .d("ID", "884")
                .d("SNAPSHOT_DATE", "\"2012-07-15 08:17:06\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "622")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "292")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "635")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "126")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "818")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=K3gjP_AkVq&" + 
                    "limit=552&" + 
                    "offset=1887499869&" + 
                    "end_date=yq_&" + 
                    "sortBy=_l1Sg6grl0giVC0L&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _l1Sg6grl0giVC0L. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_15_getOnContributorsWithQueryParamsShowsFaults_100_200() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=SUH_3bsWGM1kQ3M4&" + 
                    "offset=480&" + 
                    "start_date=1960-10-23T22%3A13%3A46-17%3A54&" + 
                    "sortBy=_uTdu&" + 
                    "q=cRCOuPDTndc6j2&" + 
                    "language=HVR4A_KoeaR")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/util/JavaScriptExecutor_48_execute GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=1960-10-23T22%3A13%3A46-17%3A54&" + 
                    "end_date=2030-08-21T01%3A19%3A44.071-03%3A41")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/util/JavaScriptExecutor_48_execute
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/github/RepositoryWrapper_134_getFileContent GET:/statistics/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 500 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=SUH_3bsWGM1kQ3M4&" + 
                    "start_date=1960-10-23T22%3A13%3A46-17%3A54")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/github/RepositoryWrapper_134_getFileContent
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_16_getOnConfigWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/github.login'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.database.driverClassName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.datasource.platform'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.jpa.database'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'cache.path'", containsString("target/cache"))
                .body("'cache.size'", containsString("50"))
                .body("'endpoints.enabled'", containsString("false"))
                .body("'endpoints.health.enabled'", containsString("true"))
                .body("'github.login'", nullValue())
                .body("'organization.list'", containsString("zalando,zalando-stups,zalando-incubator"))
                .body("'schedule'", containsString("0 1 8 * * *"))
                .body("'scoring.project'", containsString("function(project) {var daysSinceLastPush = 0;if (project.lastPushed) {var tokens = project.lastPushed.split(\" \");var day = tokens[2];var month = tokens[1];var year = tokens[5];var lastPushedDate = new Date(day + ' ' + month + ' ' + year);var millisInDay = 86400000;daysSinceLastPush = Math.floor((new Date() - lastPushedDate) / millisInDay);}var maintainersPenalty = 0;if (project.maintainers.length < 2) {maintainersPenalty = 100;}return project.starsCount * 3 + project.forksCount * 2 + project.contributorsCount * 5 - daysSinceLastPush - maintainersPenalty}"))
                .body("'spring.database.driverClassName'", nullValue())
                .body("'spring.datasource.platform'", nullValue())
                .body("'spring.datasource.url'", containsString("jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;"))
                .body("'spring.datasource.username'", containsString("sa"))
                .body("'spring.jpa.database'", nullValue())
                .body("'spring.jpa.hibernate.ddl-auto'", containsString("update"));
    }
    
    
    @Test(timeout = 60000)
    public void test_17_getOnExportWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 43L)
                .d("COMMITS_COUNT", "635")
                .d("CONTRIBUTORS_COUNT", "922")
                .d("DESCRIPTION", "\"FNlZDTgUot5YJt\"")
                .d("FORKS_COUNT", "762")
                .d("GIT_HUB_PROJECT_ID", "94")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"_EM_527_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"6Pjd\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "959")
                .d("URL", "\"_EM_528_XYZ_\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"6m3\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 44L)
                .d("ID", "884")
                .d("SNAPSHOT_DATE", "\"2012-07-15 08:17:06\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "622")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "292")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "126")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/lastPushed'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/primaryLanguage'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/score'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/title'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allSizeCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2012-07-15T08:17:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/privateProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/programLanguagesCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/publicProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/teamsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/export?EMextraParam123=_EM_13_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(94.0))
                .body("'projects'[0].'snapshotDate'", nullValue())
                .body("'projects'[0].'name'", containsString("_EM_527_XYZ_"))
                .body("'projects'[0].'title'", nullValue())
                .body("'projects'[0].'image'", containsString("6m3"))
                .body("'projects'[0].'organizationName'", containsString("6Pjd"))
                .body("'projects'[0].'url'", containsString("_EM_528_XYZ_"))
                .body("'projects'[0].'description'", containsString("FNlZDTgUot5YJt"))
                .body("'projects'[0].'starsCount'", numberMatches(959.0))
                .body("'projects'[0].'commitsCount'", numberMatches(635.0))
                .body("'projects'[0].'forksCount'", numberMatches(762.0))
                .body("'projects'[0].'contributorsCount'", numberMatches(922.0))
                .body("'projects'[0].'externalContributorsCount'", nullValue())
                .body("'projects'[0].'score'", nullValue())
                .body("'projects'[0].'lastPushed'", nullValue())
                .body("'projects'[0].'primaryLanguage'", nullValue())
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2012-07-15T08:17:06"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", nullValue())
                .body("'statistics'[0].'membersCount'", numberMatches(292.0))
                .body("'statistics'[0].'teamsCount'", nullValue())
                .body("'statistics'[0].'allContributorsCount'", nullValue())
                .body("'statistics'[0].'externalContributorsCount'", nullValue())
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", numberMatches(622.0))
                .body("'statistics'[0].'allSizeCount'", nullValue())
                .body("'statistics'[0].'programLanguagesCount'", nullValue())
                .body("'statistics'[0].'tagsCount'", numberMatches(126.0))
                .body("'statistics'[0].'organizationName'", nullValue())
                .body("'statistics'[0].'snapshotDate'", numberMatches(1.342351026E12));
    }
    
    
    @Test(timeout = 60000)
    public void test_18_getOnExportWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 51L)
                .d("COMMITS_COUNT", "84")
                .d("CONTRIBUTORS_COUNT", "314")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "203")
                .d("LAST_PUSHED", "\"P6pvKROa6Moa3\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "712")
                .d("SNAPSHOT_DATE", "\"1958-04-07 08:00:49\"")
                .d("STARS_COUNT", "1006197077")
                .d("URL", "NULL")
                .d("TITLE", "\"X7_WVK4Z7QYkzv\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "-764015908")
            .and().insertInto("STATISTICS", 52L)
                .d("ID", "477")
                .d("SNAPSHOT_DATE", "\"2028-07-18 09:16:31\"")
                .d("ALL_CONTRIBUTORS_COUNT", "741")
                .d("ALL_FORKS_COUNT", "714")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"FIKLfaMp7b2\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "921")
                .d("PUBLIC_PROJECT_COUNT", "392")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 53L)
                .d("ID", "716")
                .d("ORGANIZATION_ID", "619")
                .d("SNAPSHOT_DATE", "\"1907-03-15 18:44:36\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "609")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "1907-03-15T18:44:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationalProjectsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/personalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/url'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/description'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/forksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/image'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/primaryLanguage'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] String "1958-04-07T08:00:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/url'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allSizeCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "2028-07-18T09:16:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/membersCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/privateProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/tagsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/teamsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(619.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1907-03-15T18:44:36"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", nullValue())
                .body("'contributors'[0].'url'", nullValue())
                .body("'contributors'[0].'organizationalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(609.0))
                .body("'contributors'[0].'organizationalProjectsCount'", nullValue())
                .body("'contributors'[0].'organizationName'", nullValue())
                .body("'contributors'[0].'organizationId'", numberMatches(619.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(-1.981760316E12))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(203.0))
                .body("'projects'[0].'snapshotDate'", containsString("1958-04-07T08:00:49"))
                .body("'projects'[0].'name'", nullValue())
                .body("'projects'[0].'title'", containsString("X7_WVK4Z7QYkzv"))
                .body("'projects'[0].'image'", nullValue())
                .body("'projects'[0].'organizationName'", nullValue())
                .body("'projects'[0].'url'", nullValue())
                .body("'projects'[0].'description'", nullValue())
                .body("'projects'[0].'starsCount'", numberMatches(1.006197077E9))
                .body("'projects'[0].'commitsCount'", numberMatches(84.0))
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", numberMatches(314.0))
                .body("'projects'[0].'externalContributorsCount'", numberMatches(-7.64015908E8))
                .body("'projects'[0].'score'", numberMatches(712.0))
                .body("'projects'[0].'lastPushed'", containsString("P6pvKROa6Moa3"))
                .body("'projects'[0].'primaryLanguage'", nullValue())
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2028-07-18T09:16:31"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", numberMatches(392.0))
                .body("'statistics'[0].'membersCount'", nullValue())
                .body("'statistics'[0].'teamsCount'", nullValue())
                .body("'statistics'[0].'allContributorsCount'", numberMatches(741.0))
                .body("'statistics'[0].'externalContributorsCount'", nullValue())
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", numberMatches(714.0))
                .body("'statistics'[0].'allSizeCount'", nullValue())
                .body("'statistics'[0].'programLanguagesCount'", numberMatches(921.0))
                .body("'statistics'[0].'tagsCount'", nullValue())
                .body("'statistics'[0].'organizationName'", containsString("FIKLfaMp7b2"))
                .body("'statistics'[0].'snapshotDate'", numberMatches(1.847535391E12));
    }
    
    
    @Test(timeout = 60000)
    public void test_19_getOnProjectsWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 77L)
                .d("ID", "184")
                .d("ORGANIZATION_ID", "321")
                .d("SNAPSHOT_DATE", "\"1975-07-05 01:57:32\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "589")
                .d("PERSONAL_COMMITS_COUNT", "331")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .and().insertInto("PROJECT", 78L)
                .d("COMMITS_COUNT", "635")
                .d("CONTRIBUTORS_COUNT", "681")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "180")
                .d("GIT_HUB_PROJECT_ID", "291")
                .d("LAST_PUSHED", "\"NRDiceIP3OrXBAgl\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"321\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "712")
                .d("SNAPSHOT_DATE", "\"2040-08-01 21:53:23\"")
                .d("STARS_COUNT", "506")
                .d("URL", "\"vvrcRPDc\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> [Path '/0/description'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> [Path '/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> [Path '/0/image'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> [Path '/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> [Path '/0/primaryLanguage'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> [Path '/0/snapshotDate'] String "2040-08-01T21:53:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> [Path '/0/title'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "321")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=321&" + 
                    "limit=321")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'languageList'.size()", equalTo(0))
                .body("[0].'gitHubProjectId'", numberMatches(291.0))
                .body("[0].'snapshotDate'", containsString("2040-08-01T21:53:23"))
                .body("[0].'name'", nullValue())
                .body("[0].'title'", nullValue())
                .body("[0].'image'", nullValue())
                .body("[0].'organizationName'", containsString("321"))
                .body("[0].'url'", containsString("vvrcRPDc"))
                .body("[0].'description'", nullValue())
                .body("[0].'starsCount'", numberMatches(506.0))
                .body("[0].'commitsCount'", numberMatches(635.0))
                .body("[0].'forksCount'", numberMatches(180.0))
                .body("[0].'contributorsCount'", numberMatches(681.0))
                .body("[0].'externalContributorsCount'", nullValue())
                .body("[0].'score'", numberMatches(712.0))
                .body("[0].'lastPushed'", containsString("NRDiceIP3OrXBAgl"))
                .body("[0].'primaryLanguage'", nullValue())
                .body("[0].'maintainers'.size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_20_getOnDeleteWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> Response status 400 not defined for path '/delete'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/delete?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_21_getOnExportWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> Response status 400 not defined for path '/export'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_22_getOnConfigReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 29L)
                .d("ID", "314")
                .d("ORGANIZATION_ID", "275")
                .d("SNAPSHOT_DATE", "\"1994-09-15 17:36:36\"")
                .d("NAME", "\"_EM_445_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"Iftl\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "763")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "526")
                .d("PERSONAL_COMMITS_COUNT", "545")
                .d("PERSONAL_PROJECTS_COUNT", "618")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> Response status 400 not defined for path '/config'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_23_getOnFetchWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 77L)
                .d("ID", "184")
                .d("ORGANIZATION_ID", "321")
                .d("SNAPSHOT_DATE", "\"1975-07-05 01:57:32\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "589")
                .d("PERSONAL_COMMITS_COUNT", "331")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .and().insertInto("PROJECT", 78L)
                .d("COMMITS_COUNT", "635")
                .d("CONTRIBUTORS_COUNT", "1705")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "180")
                .d("GIT_HUB_PROJECT_ID", "291")
                .d("LAST_PUSHED", "\"NRDiceIP4OrXBAgl\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "712")
                .d("SNAPSHOT_DATE", "\"2040-08-01 21:53:23\"")
                .d("STARS_COUNT", "508")
                .d("URL", "\"vvrcRPDc\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/fetch -> Response status 400 not defined for path '/fetch'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/fetch?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_24_getOnInitReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 77L)
                .d("ID", "184")
                .d("ORGANIZATION_ID", "321")
                .d("SNAPSHOT_DATE", "\"1975-07-05 01:57:32\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "589")
                .d("PERSONAL_COMMITS_COUNT", "331")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .and().insertInto("PROJECT", 78L)
                .d("COMMITS_COUNT", "635")
                .d("CONTRIBUTORS_COUNT", "1705")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "180")
                .d("GIT_HUB_PROJECT_ID", "291")
                .d("LAST_PUSHED", "\"NRDiceIP4OrXBAgl\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "712")
                .d("SNAPSHOT_DATE", "\"2040-08-01 21:53:23\"")
                .d("STARS_COUNT", "508")
                .d("URL", "\"vvrcRPDc\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> Response status 400 not defined for path '/init'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_25_getOnStatisticsLanguagesReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> Response status 400 not defined for path '/statistics/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/statistics/languages?end_date=D4Y_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string D4Y_."));
    }
    
    
    @Test(timeout = 60000)
    public void test_26_getOnStatisticsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> Response status 400 not defined for path '/statistics'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?end_date=6j")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for endDate"));
    }
    
    
    @Test(timeout = 60000)
    public void test_27_getOnProjectsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=_EM_3_XYZ_&" + 
                    "start_date=b9YdCc1nzu&" + 
                    "end_date=_EM_4_XYZ_&" + 
                    "EMextraParam123=_EM_5_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string b9YdCc1nzu."));
    }
    
    
    @Test(timeout = 60000)
    public void test_28_getOnContributorsWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 70L)
                .d("ID", "778")
                .d("ORGANIZATION_ID", "243")
                .d("SNAPSHOT_DATE", "\"2035-06-17 01:57:36\"")
                .d("NAME", "\"k6LGL\"")
                .d("ORGANIZATION_NAME", "\"FIKLfaMp7b2\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 400 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=243&" + 
                    "end_date=k9Bri&" + 
                    "offset=&" + 
                    "limit=CEyZ9a7N")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string k9Bri."));
    }
    
    
    @Test(timeout = 60000)
    public void test_29_postOnImportWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 77L)
                .d("ID", "184")
                .d("ORGANIZATION_ID", "321")
                .d("SNAPSHOT_DATE", "\"1975-07-05 01:57:32\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "589")
                .d("PERSONAL_COMMITS_COUNT", "331")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .and().insertInto("PROJECT", 78L)
                .d("COMMITS_COUNT", "635")
                .d("CONTRIBUTORS_COUNT", "1705")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "180")
                .d("GIT_HUB_PROJECT_ID", "291")
                .d("LAST_PUSHED", "\"NRDiceIP4OrXBAgl\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "712")
                .d("SNAPSHOT_DATE", "\"2040-08-01 21:53:23\"")
                .d("STARS_COUNT", "508")
                .d("URL", "\"vvrcRPDc\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> Response status 400 not defined for path '/import'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "foo")
                .header("X-Organizations", "foo")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"name\": \"6XuYVXmUod2V\", " + 
                    " \"organizationalCommitsCount\": 96, " + 
                    " \"personalProjectsCount\": 654 " + 
                    " }, " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"id\": 105, " + 
                    " \"organizationId\": 531 " + 
                    " }, " + 
                    " \"name\": \"_EM_885_XYZ_\", " + 
                    " \"snapshotDate\": \"1904-03-06T00:42:37Z\", " + 
                    " \"url\": \"_EM_886_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 979, " + 
                    " \"key\": { " + 
                    " \"snapshotDate\": \"1971-00-31T17:15:55-17:16\" " + 
                    " }, " + 
                    " \"loginId\": \"k4Y9P\", " + 
                    " \"name\": \"_EM_887_XYZ_\", " + 
                    " \"organizationName\": \"thGcbvN7bx\", " + 
                    " \"organizationalCommitsCount\": 635, " + 
                    " \"personalProjectsCount\": 104, " + 
                    " \"snapshotDate\": \"1958-04-10T11:15:27.412Z\", " + 
                    " \"url\": \"_EM_888_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"loginId\": \"\", " + 
                    " \"name\": \"YZF42u\", " + 
                    " \"organizationalCommitsCount\": 475, " + 
                    " \"organizationalProjectsCount\": 326, " + 
                    " \"url\": \"_EM_889_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"projects\": [], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allSizeCount\": 971, " + 
                    " \"allStarsCount\": 652, " + 
                    " \"key\": { " + 
                    " \"id\": 181, " + 
                    " \"snapshotDate\": \"1939-07-25T16:10:04Z\" " + 
                    " }, " + 
                    " \"programLanguagesCount\": 141, " + 
                    " \"publicProjectCount\": 392, " + 
                    " \"snapshotDate\": \"2085-13-12T13:12:36Z\", " + 
                    " \"tagsCount\": 835 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?" + 
                    "access_token=&" + 
                    "end_date=&" + 
                    "q=&" + 
                    "offset=&" + 
                    "organizations=&" + 
                    "limit=&" + 
                    "sortBy=&" + 
                    "start_date=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_30_postOnScoring_projectWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 77L)
                .d("ID", "184")
                .d("ORGANIZATION_ID", "321")
                .d("SNAPSHOT_DATE", "\"1975-07-05 01:57:32\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "589")
                .d("PERSONAL_COMMITS_COUNT", "331")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .and().insertInto("PROJECT", 78L)
                .d("COMMITS_COUNT", "635")
                .d("CONTRIBUTORS_COUNT", "1705")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "180")
                .d("GIT_HUB_PROJECT_ID", "291")
                .d("LAST_PUSHED", "\"NRDiceIP4OrXBAgl\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "712")
                .d("SNAPSHOT_DATE", "\"2040-08-01 21:53:23\"")
                .d("STARS_COUNT", "508")
                .d("URL", "\"vvrcRPDc\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> Response status 400 not defined for path '/config/scoring.project'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" 7Zs ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=&" + 
                    "end_date=&" + 
                    "q=&" + 
                    "offset=&" + 
                    "organizations=&" + 
                    "limit=&" + 
                    "sortBy=&" + 
                    "start_date=&" + 
                    "language=kV3XzMZKOqejxMmM")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_31_getOnContributorsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 400 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=qayCETVMX7zdWy&" + 
                    "limit=702&" + 
                    "offset=1028&" + 
                    "start_date=W0wuv8s60IIC&" + 
                    "sortBy=&" + 
                    "q=YuYOc&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_32_getOnProjectsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> Response status 400 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "g5xgqf_")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=&" + 
                    "limit=2&" + 
                    "offset=799&" + 
                    "end_date=1909-04-18T-1%3A50%3A55Z&" + 
                    "sortBy=pMD&" + 
                    "q=d9uY&" + 
                    "language=mcjY8zUlfLLZq")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'exception'", containsString("org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"))
                .body("'message'", containsString("Failed to convert value of type 'java.lang.String' to required type 'java.util.Date'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@io.swagger.annotations.ApiParam @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.util.Date] for value '1909-04-18T-1:50:55Z'; nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [1909-04-18T-1:50:55Z]"))
                .body("'path'", containsString("/projects"));
    }
    
    
    @Test(timeout = 60000)
    public void test_33_getOnProjectsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> Response status 400 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=78&" + 
                    "offset=972&" + 
                    "start_date=2039-12-16T01%3A-1%3A54%2B23%3A18&" + 
                    "EMextraParam123=ID_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'exception'", containsString("org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"))
                .body("'message'", containsString("Failed to convert value of type 'java.lang.String' to required type 'java.util.Date'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@io.swagger.annotations.ApiParam @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.util.Date] for value '2039-12-16T01:-1:54+23:18'; nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [2039-12-16T01:-1:54+23:18]"))
                .body("'path'", containsString("/projects"));
    }
    
    
    @Test(timeout = 60000)
    public void test_34_getOnProjectsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> Response status 400 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=6&" + 
                    "limit=400&" + 
                    "offset=972&" + 
                    "start_date=2050-02-21T01%3A39%3A27Z&" + 
                    "end_date=2008-02-03T15%3A35%3A-1-08%3A34&" + 
                    "language=O8UMTMN7WZ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'exception'", containsString("org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"))
                .body("'message'", containsString("Failed to convert value of type 'java.lang.String' to required type 'java.util.Date'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@io.swagger.annotations.ApiParam @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.util.Date] for value '2008-02-03T15:35:-1-08:34'; nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [2008-02-03T15:35:-1-08:34]"))
                .body("'path'", containsString("/projects"));
    }
    
    
    @Test(timeout = 60000)
    public void test_35_getOnDeleteWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "_EM_12_XYZ_")
                .get(baseUrlOfSut + "/delete")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    @Test(timeout = 60000)
    public void test_36_getOnInitWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "Kx2YykKffPhHrj")
                .get(baseUrlOfSut + "/init")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    @Test(timeout = 60000)
    public void test_37_getOnDeleteWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "_EM_85_XYZ_")
                .get(baseUrlOfSut + "/delete?" + 
                    "EMextraParam123=_EM_84_XYZ_&" + 
                    "access_token=TqbDRwi_h")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_38_getOnInitWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init?access_token=g")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_39_getOnExportWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "EMextraParam123=_EM_112_XYZ_&" + 
                    "access_token=yEliSXzrI5SFOxB7")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_40_getOnConfigWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config?access_token=_EM_93_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_41_getOnFetchWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 77L)
                .d("ID", "184")
                .d("ORGANIZATION_ID", "321")
                .d("SNAPSHOT_DATE", "\"1975-07-05 01:57:32\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "589")
                .d("PERSONAL_COMMITS_COUNT", "331")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/fetch -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/fetch?access_token=AkxwANWVcldnfs")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_42_getOnStatisticsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 62L)
                .d("ID", "954")
                .d("SNAPSHOT_DATE", "\"2096-05-22 02:43:54\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "920")
                .d("ALL_SIZE_COUNT", "673")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "566")
                .d("ORGANIZATION_NAME", "\"9sSv9gGpKdqFOJ6B\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "565")
                .d("TEAMS_COUNT", "538")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=9sSv9gGpKdqFOJ6B&" + 
                    "start_date=UWkdXE63L8Gz&" + 
                    "end_date=_EM_716_XYZ_&" + 
                    "access_token=AfY6bVdkR")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_43_getOnContributorsWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 17L)
                .d("ID", "743")
                .d("ORGANIZATION_ID", "416")
                .d("SNAPSHOT_DATE", "\"2070-08-31 00:02:50\"")
                .d("NAME", "\"_v/\"")
                .d("ORGANIZATION_NAME", "\"_EM_628_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "470")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "361")
                .d("PERSONAL_COMMITS_COUNT", "303")
                .d("PERSONAL_PROJECTS_COUNT", "-64587")
                .d("URL", "\"_EM_212_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "start_date=_EM_213_XYZ_&" + 
                    "end_date=_EM_214_XYZ_&" + 
                    "access_token=_EM_627_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_44_getOnLanguagesReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 9L)
                .d("ID", "884")
                .d("SNAPSHOT_DATE", "\"2030-10-30 00:08:13\"")
                .d("ALL_CONTRIBUTORS_COUNT", "509")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "137")
                .d("ALL_STARS_COUNT", "557")
                .d("MEMBERS_COUNT", "159")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "738")
                .d("PROGRAM_LANGUAGES_COUNT", "208")
                .d("PUBLIC_PROJECT_COUNT", "1309")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "-261321")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=Qr&" + 
                    "start_date=_EM_95_XYZ_&" + 
                    "end_date=_EM_96_XYZ_&" + 
                    "access_token=_EM_98_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_45_getOnProjectsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_6_XYZ_")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=_EM_53_XYZ_&" + 
                    "start_date=b9YdCc1nzu&" + 
                    "end_date=&" + 
                    "EMextraParam123=_EM_5_XYZ_&" + 
                    "access_token=_EM_54_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_46_getOnStatisticsProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 10L)
                .d("ID", "656")
                .d("SNAPSHOT_DATE", "\"1944-10-24 01:37:45\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-3245")
                .d("ALL_FORKS_COUNT", "-8139")
                .d("ALL_SIZE_COUNT", "26")
                .d("ALL_STARS_COUNT", "202")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"nkxGmEgMg\"")
                .d("PRIVATE_PROJECT_COUNT", "387")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "361")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "675")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "-3279")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=nkxGmEgMg&" + 
                    "start_date=&" + 
                    "access_token=_EM_116_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_47_getOnContributorsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "ubI3QSh9ui1UU")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "access_token=E5yr&" + 
                    "q=NmUZbKi2lPprjJJi")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_48_getOnLanguagesWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_77_XYZ_&" + 
                    "limit=427&" + 
                    "access_token=gqzM6Sd3M3m")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_49_postOnImportWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "ah8S915jkjKhTMC")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"id\": 859, " + 
                    " \"organizationName\": \"w\", " + 
                    " \"organizationalCommitsCount\": 522, " + 
                    " \"organizationalProjectsCount\": 38, " + 
                    " \"snapshotDate\": \"2020-11-31T13:26:-1Z\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 547, " + 
                    " \"key\": {}, " + 
                    " \"loginId\": \"N\", " + 
                    " \"name\": \"J98PirE\", " + 
                    " \"organizationalCommitsCount\": 679, " + 
                    " \"personalCommitsCount\": 464, " + 
                    " \"snapshotDate\": \"1954-10-21T09:-1:24.891Z\" " + 
                    " }, " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"id\": 39 " + 
                    " }, " + 
                    " \"loginId\": \"RomdJD83NT\", " + 
                    " \"snapshotDate\": \"1910-07-21T21:44:59+16:05\", " + 
                    " \"url\": \"Rlf_Ft\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -579458864, " + 
                    " \"loginId\": \"dhU9FVKYz5AiAy4\", " + 
                    " \"name\": \"DZjpfEqGaM\", " + 
                    " \"organizationName\": \"3DEb_qV\", " + 
                    " \"organizationalProjectsCount\": 958, " + 
                    " \"personalCommitsCount\": 550, " + 
                    " \"personalProjectsCount\": 293, " + 
                    " \"snapshotDate\": \"2082-02-28T11:45:01Z\", " + 
                    " \"url\": \"2svM\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allForksCount\": 665, " + 
                    " \"allStarsCount\": 815, " + 
                    " \"externalContributorsCount\": 278, " + 
                    " \"membersCount\": 72, " + 
                    " \"organizationName\": \"cKkcWubVtz5mcZ\", " + 
                    " \"privateProjectCount\": 72, " + 
                    " \"programLanguagesCount\": 435, " + 
                    " \"snapshotDate\": \"2009-09-32T16:36:20-09:44\", " + 
                    " \"tagsCount\": 267 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 655, " + 
                    " \"allForksCount\": 660, " + 
                    " \"allStarsCount\": 515, " + 
                    " \"externalContributorsCount\": 107, " + 
                    " \"key\": { " + 
                    " \"snapshotDate\": \"1930-12-24T22:15:45Z\" " + 
                    " }, " + 
                    " \"privateProjectCount\": 417, " + 
                    " \"tagsCount\": 628, " + 
                    " \"teamsCount\": 245 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 644, " + 
                    " \"allForksCount\": 882, " + 
                    " \"allSizeCount\": 741, " + 
                    " \"id\": 650, " + 
                    " \"key\": {}, " + 
                    " \"privateProjectCount\": 806, " + 
                    " \"publicProjectCount\": 365 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?" + 
                    "access_token=kPSzES48&" + 
                    "organizations=uAB&" + 
                    "limit=m59Bupt1X&" + 
                    "start_date=JQmVHc9QjFdsR5JF")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_50_postOnImportWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 67L)
                .d("COMMITS_COUNT", "84")
                .d("CONTRIBUTORS_COUNT", "301")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "653")
                .d("GIT_HUB_PROJECT_ID", "501")
                .d("LAST_PUSHED", "\"_EM_767_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"2054-07-08T17:57:23Z\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "195")
                .d("SNAPSHOT_DATE", "\"1939-11-21 18:02:42\"")
                .d("STARS_COUNT", "341")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"7DGjR6sfOh\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "490")
            .and().insertInto("STATISTICS", 68L)
                .d("ID", "374")
                .d("SNAPSHOT_DATE", "\"1902-10-26 10:50:15\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "361")
                .d("ORGANIZATION_NAME", "\"2054-07-08T17:57:23Z\"")
                .d("PRIVATE_PROJECT_COUNT", "121")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "702")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 69L)
                .d("ID", "612")
                .d("ORGANIZATION_ID", "951")
                .d("SNAPSHOT_DATE", "\"1923-08-09 08:45:48\"")
                .d("NAME", "\"wn9E\"")
                .d("ORGANIZATION_NAME", "\"AFik\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "284")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [], " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"commitsCount\": 454, " + 
                    " \"description\": \"KfjHIEt\", " + 
                    " \"externalContributorsCount\": -764015908, " + 
                    " \"forksCount\": 287, " + 
                    " \"image\": \"_EM_769_XYZ_\", " + 
                    " \"languageList\": [ " + 
                    " \"_EM_770_XYZ_\", " + 
                    " \"_EM_771_XYZ_\", " + 
                    " \"_EM_772_XYZ_\" " + 
                    " ], " + 
                    " \"name\": \"3A_aYDuHL\", " + 
                    " \"organizationName\": \"\", " + 
                    " \"primaryLanguage\": \"KRJNKL1YbA\", " + 
                    " \"snapshotDate\": \"1944-08-04T11:15:53.989Z\", " + 
                    " \"title\": \"ko4aBdJ\" " + 
                    " }, " + 
                    " { " + 
                    " \"image\": \"Tio46tFnWOE\", " + 
                    " \"languageList\": [ " + 
                    " \"_EM_775_XYZ_\", " + 
                    " \"71T9C_BG3KM5\", " + 
                    " \"_EM_776_XYZ_\" " + 
                    " ], " + 
                    " \"lastPushed\": \"HTE6H859k92x_L\", " + 
                    " \"maintainers\": [ " + 
                    " \"ZU5HU\", " + 
                    " \"QuO76jagk\" " + 
                    " ], " + 
                    " \"name\": \"_EM_777_XYZ_\", " + 
                    " \"snapshotDate\": \"1910-01-13T08:13:60Z\", " + 
                    " \"starsCount\": 606, " + 
                    " \"title\": \"_EM_778_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    @Test(timeout = 60000)
    public void test_51_getOnLanguagesWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=CONTRIBUTORS_COUNT&" + 
                    "limit=247&" + 
                    "offset=583&" + 
                    "q=sY&" + 
                    "access_token=HamV_sfQ3")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_52_postOnScoring_projectWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "C6aU")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "end_date=Lv7QoiW2HFAA&" + 
                    "q=EHXmaG&" + 
                    "organizations=prD5FLKHAaE_9jo&" + 
                    "sortBy=yeYQWOpuUiFc&" + 
                    "start_date=hK51X")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    @Test(timeout = 60000)
    public void test_53_postOnImportWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"name\": \"AZCn8tA5c\", " + 
                    " \"organizationId\": 503, " + 
                    " \"organizationName\": \"HN0tuDsL3lsIMyI\", " + 
                    " \"organizationalCommitsCount\": 513, " + 
                    " \"organizationalProjectsCount\": 260, " + 
                    " \"personalCommitsCount\": 660, " + 
                    " \"personalProjectsCount\": 724, " + 
                    " \"snapshotDate\": \"1945-03-08T14:29:03.013-16:14\" " + 
                    " }, " + 
                    " { " + 
                    " \"loginId\": \"XiugUqzBsG\", " + 
                    " \"organizationalProjectsCount\": 562, " + 
                    " \"snapshotDate\": \"1900-09-20T04:54:03.006Z\" " + 
                    " } " + 
                    " ], " + 
                    " \"projects\": [], " + 
                    " \"statistics\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?" + 
                    "access_token=g5UNyG4i5S&" + 
                    "end_date=&" + 
                    "q=797P5&" + 
                    "limit=qWtjLbjw7eoA0Wn")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_54_postOnImportWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"organizationId\": 310, " + 
                    " \"snapshotDate\": \"2004-08-28T00:04:49Z\" " + 
                    " }, " + 
                    " \"loginId\": \"Nd\", " + 
                    " \"name\": \"wFXUzn\", " + 
                    " \"organizationId\": 144, " + 
                    " \"organizationalProjectsCount\": 600, " + 
                    " \"personalCommitsCount\": 124, " + 
                    " \"snapshotDate\": \"1972-05-00T13:37:17+05:06\" " + 
                    " } " + 
                    " ], " + 
                    " \"projects\": [], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allForksCount\": 872, " + 
                    " \"allStarsCount\": 447, " + 
                    " \"id\": 386, " + 
                    " \"key\": { " + 
                    " \"id\": -3023839067543078737 " + 
                    " }, " + 
                    " \"organizationName\": \"OwmaZ3U1NHH\", " + 
                    " \"programLanguagesCount\": 27, " + 
                    " \"teamsCount\": 821 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 631, " + 
                    " \"allForksCount\": 725, " + 
                    " \"allSizeCount\": 64, " + 
                    " \"externalContributorsCount\": 829, " + 
                    " \"key\": { " + 
                    " \"id\": 207 " + 
                    " }, " + 
                    " \"privateProjectCount\": 496, " + 
                    " \"publicProjectCount\": 58, " + 
                    " \"snapshotDate\": \"2008-08-00T17:50:34.046Z\", " + 
                    " \"tagsCount\": 282 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 277, " + 
                    " \"allSizeCount\": 756, " + 
                    " \"id\": 289, " + 
                    " \"key\": {}, " + 
                    " \"membersCount\": 856, " + 
                    " \"organizationName\": \"2\", " + 
                    " \"privateProjectCount\": 904, " + 
                    " \"snapshotDate\": \"1960-13-03T00:12:46+01:39\", " + 
                    " \"tagsCount\": 967 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?" + 
                    "access_token=ZgpK7bplnihLZ1&" + 
                    "end_date=NWGO4g4lZn65GUV&" + 
                    "q=Bm&" + 
                    "organizations=BzTOs1E&" + 
                    "sortBy=zrj34qbdsK&" + 
                    "start_date=QCd6swCZ2R")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_55_getOnLanguagesWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_16_XYZ_&" + 
                    "limit=247&" + 
                    "offset=599&" + 
                    "q=rY&" + 
                    "access_token=_EM_793_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_56_postOnImportWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allContributorsCount\": 741, " + 
                    " \"allSizeCount\": 936, " + 
                    " \"externalContributorsCount\": 326, " + 
                    " \"membersCount\": 292, " + 
                    " \"programLanguagesCount\": 991, " + 
                    " \"tagsCount\": 898018430 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 834, " + 
                    " \"key\": { " + 
                    " \"snapshotDate\": \"1985-07-13T01:25:19.634Z\" " + 
                    " }, " + 
                    " \"membersCount\": 570, " + 
                    " \"privateProjectCount\": 284, " + 
                    " \"programLanguagesCount\": 292, " + 
                    " \"publicProjectCount\": 984, " + 
                    " \"tagsCount\": 996 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 277, " + 
                    " \"allForksCount\": 286, " + 
                    " \"allStarsCount\": 78, " + 
                    " \"id\": 37, " + 
                    " \"membersCount\": 292, " + 
                    " \"organizationName\": \"hoHrlTL\", " + 
                    " \"publicProjectCount\": -2082238115, " + 
                    " \"teamsCount\": 126 " + 
                    " }, " + 
                    " { " + 
                    " \"allForksCount\": 36, " + 
                    " \"allSizeCount\": 30, " + 
                    " \"allStarsCount\": 801, " + 
                    " \"membersCount\": 194, " + 
                    " \"snapshotDate\": \"1964-03-21T16:26:45.712+22:32\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?" + 
                    "end_date=OM8owLHGL1pZj&" + 
                    "offset=3EGS&" + 
                    "organizations=_EM_855_XYZ_&" + 
                    "limit=_EM_856_XYZ_&" + 
                    "sortBy=hkQnW&" + 
                    "start_date=BFPzfs2erp9qCA")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    @Test(timeout = 60000)
    public void test_57_getOnContributorsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=NNcor7w9Al3WJNM0&" + 
                    "start_date=YtGJ&" + 
                    "end_date=F9jFrjVae6&" + 
                    "access_token=7A9PrV&" + 
                    "q=9KcbmXhykASRBlL&" + 
                    "offset=PNz4a&" + 
                    "limit=_EM_791_XYZ_&" + 
                    "sortBy=_EM_792_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_58_postOnScoring_projectWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "_J")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" 6dV00 ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=HCIa7Rz7ow&" + 
                    "offset=ggTnMfU&" + 
                    "limit=rQCHBcq&" + 
                    "language=6dV00")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_59_postOnScoring_projectWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "2C6PBgkSVG0YYbUm")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" N ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "end_date=iC4nTf2&" + 
                    "limit=fluSmuKWW")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    @Test(timeout = 60000)
    public void test_60_postOnScoring_projectWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 77L)
                .d("ID", "184")
                .d("ORGANIZATION_ID", "321")
                .d("SNAPSHOT_DATE", "\"1975-07-05 01:57:32\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "589")
                .d("PERSONAL_COMMITS_COUNT", "331")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .and().insertInto("PROJECT", 78L)
                .d("COMMITS_COUNT", "635")
                .d("CONTRIBUTORS_COUNT", "681")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "180")
                .d("GIT_HUB_PROJECT_ID", "291")
                .d("LAST_PUSHED", "\"NRDiceIP3OrXBAgl\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"321\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "712")
                .d("SNAPSHOT_DATE", "\"2040-08-01 21:53:23\"")
                .d("STARS_COUNT", "506")
                .d("URL", "\"vvrcRPDc\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" 7Zs ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=321&" + 
                    "end_date=321&" + 
                    "q=321&" + 
                    "offset=321&" + 
                    "organizations=321&" + 
                    "limit=321&" + 
                    "sortBy=321&" + 
                    "start_date=321")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_61_getOnContributorsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=UMKRqlkGf&" + 
                    "offset=-16776796&" + 
                    "start_date=D2mWDzNjO&" + 
                    "end_date=CF6&" + 
                    "sortBy=hfXUV_c&" + 
                    "q=SG&" + 
                    "access_token=_EM_258_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_62_getOnContributorsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=TABLE_CAT&" + 
                    "limit=-13&" + 
                    "offset=881&" + 
                    "end_date=_EM_9_XYZ_&" + 
                    "sortBy=organizationalcommitscount&" + 
                    "q=NloSheqdjl0&" + 
                    "access_token=AwNvbdzyjDQWoO")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_63_getOnContributorsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_8_XYZ_&" + 
                    "limit=19&" + 
                    "end_date=_EM_9_XYZ_&" + 
                    "sortBy=_EM_10_XYZ_&" + 
                    "q=NloSheqdjl0&" + 
                    "access_token=1OKsYH5W")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_64_getOnProjectsWithQueryParamsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 46L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "19")
                .d("DESCRIPTION", "\"bxGz\"")
                .d("FORKS_COUNT", "666")
                .d("GIT_HUB_PROJECT_ID", "291")
                .d("LAST_PUSHED", "\"_EM_552_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"WfPIrLOQ\"")
                .d("SCORE", "544")
                .d("SNAPSHOT_DATE", "\"1928-02-02 14:33:22\"")
                .d("STARS_COUNT", "123054283")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"6SOJp\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=-1144855060&" + 
                    "offset=695&" + 
                    "start_date=1918-06-21T17%3A49%3A33Z&" + 
                    "q=HK1SgRGdClDv&" + 
                    "language=WfPIrLOQ&" + 
                    "access_token=_EM_554_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_65_getOnProjectsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "RV")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=_qmfdUmig8p&" + 
                    "offset=-1760609939&" + 
                    "start_date=2041-01-17T16%3A53%3A11-10%3A15&" + 
                    "end_date=2074-01-23T12%3A26%3A17.921%2B18%3A55&" + 
                    "sortBy=&" + 
                    "q=opd0Iz2e4xuzP9kB&" + 
                    "language=JkFi7xaC&" + 
                    "access_token=dfg")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_66_getOnProjectsWithQueryParamsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=576&" + 
                    "offset=369&" + 
                    "start_date=2088-07-21T13%3A21%3A14-17%3A20&" + 
                    "end_date=1968-10-28T20%3A38%3A38.600%2B08%3A49&" + 
                    "access_token=Cg_PXnkYfJ")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }


}
