import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-12-25T14:40:15.133-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 19 tests
 * <br>
*  Covered targets: 222
 * <br>
*  Used time: 0h 17m 47s
 * <br>
*  Needed budget for current results: 97%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.org.zalando.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CONTRIBUTOR","LANGUAGE_LIST","MAINTAINERS","PROJECT","STATISTICS"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (200) GET:/v2/api-docs
    */
    @Test(timeout = 60000)
    public void test_0_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics
    */
    @Test(timeout = 60000)
    public void test_1_getOnStatisticsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=zGML0fA62mMJ3&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics/languages
    */
    @Test(timeout = 60000)
    public void test_2_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "1b")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "offset=6q5AW&" + 
                    "limit=H3tAXVVFS4HHJe&" + 
                    "sortBy=tZdXV2aj6")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test(timeout = 60000)
    public void test_3_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "A")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=XwDmvA&" + 
                    "q=TuazZYAlcY3N7PBP&" + 
                    "end_date=4QBfKOh&" + 
                    "sortBy=P")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics/languages
    */
    @Test(timeout = 60000)
    public void test_4_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "q=6fx5lQ9MiNtfG3&" + 
                    "offset=_EM_734_XYZ_&" + 
                    "limit=_kcY")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics/languages
    */
    @Test(timeout = 60000)
    public void test_5_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "nAaSblYc0wsTE")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=Gkoy7LM_8w&" + 
                    "q=lH2DjKyF&" + 
                    "offset=469&" + 
                    "limit=OJx2rdCHWJ&" + 
                    "sortBy=OErmBLJL")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics/languages
    */
    @Test(timeout = 60000)
    public void test_6_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "o0rSKrBD0JNu1j")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=8yDyMj_yX&" + 
                    "sortBy=d28TT")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test(timeout = 60000)
    public void test_7_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "62dXW6Hksa")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=62dXW6Hksa&" + 
                    "offset=536&" + 
                    "q=RVSaEIICqdv8G6&" + 
                    "start_date=2n4aejfzxRqL")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    */
    @Test(timeout = 60000)
    public void test_8_getOnExportReturnsObject() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "Gh1h5bXjGR4Hph")
                .get(baseUrlOfSut + "/export?" + 
                    "q=5T4N_bg9dpXKK&" + 
                    "offset=w&" + 
                    "sortBy=nGmP6C5V6NuE9Wbh&" + 
                    "language=1j1TPf&" + 
                    "start_date=ye6oY_OD")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    */
    @Test(timeout = 60000)
    public void test_9_getOnExportReturnsObject() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "end_date=rb&" + 
                    "offset=mxMyF7&" + 
                    "organizations=DIX&" + 
                    "limit=OslO&" + 
                    "start_date=y")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test(timeout = 60000)
    public void test_10_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=EjWPGQU1J0kRb9&" + 
                    "limit=512&" + 
                    "offset=706&" + 
                    "end_date=IUC8qqDMFFM&" + 
                    "start_date=taXtD")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_11_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=_EM_597_XYZ_&" + 
                    "limit=581&" + 
                    "sortBy=_EM_598_XYZ_&" + 
                    "q=_EM_599_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_12_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=676Tmi&" + 
                    "start_date=1917-09-24T15%3A52%3A18%2B20%3A45&" + 
                    "language=_EM_433_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_13_getOnProjectsWithQueryParamsEmptySortByReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "ZO")
                .header("X-Organizations", "SeEp")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=DQkleNEpWC&" + 
                    "start_date=1960-04-06T05%3A48%3A13.660Z&" + 
                    "sortBy=&" + 
                    "q=0dE_b772wIi3LW3j&" + 
                    "language=SfKu_kS")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_14_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 116L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"nTKtKUVPRvJRir_l\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "797")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"_EM_1376_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"umMyE9\"")
                .d("SCORE", "165")
                .d("SNAPSHOT_DATE", "\"1948-11-19 16:00:32\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"vVoYgJgAiLeRIoWq\"")
                .d("TITLE", "\"UJhgGyMbgDVhA\"")
                .d("IMAGE", "\"Q\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "DrJ")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=2049594297&" + 
                    "end_date=2037-04-22T21%3A04%3A24.567-11%3A32&" + 
                    "sortBy=_EM_1377_XYZ_&" + 
                    "language=umMyE9")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_15_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "2aoYUPmZ")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=86s&" + 
                    "limit=535&" + 
                    "offset=562&" + 
                    "end_date=1930-07-21T19%3A41%3A02Z&" + 
                    "language=_EM_1298_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_16_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 100L)
                .d("ID", "193")
                .d("SNAPSHOT_DATE", "\"2003-03-18 16:51:52\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "152")
                .d("MEMBERS_COUNT", "280")
                .d("ORGANIZATION_NAME", "\"_EM_1140_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "155")
                .d("PROGRAM_LANGUAGES_COUNT", "535")
                .d("PUBLIC_PROJECT_COUNT", "446")
                .d("TAGS_COUNT", "404")
                .d("TEAMS_COUNT", "887")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "302")
            .and().insertInto("PROJECT", 101L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-65199")
                .d("DESCRIPTION", "\"_EM_1111_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "944")
                .d("LAST_PUSHED", "\"_EM_1112_XYZ_\"")
                .d("NAME", "\"_EM_1113_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"lLuvbZ2GJ\"")
                .d("SCORE", "130")
                .d("SNAPSHOT_DATE", "\"2093-03-29 10:39:59\"")
                .d("STARS_COUNT", "0")
                .d("URL", "\"_EM_555_XYZ_\"")
                .d("TITLE", "\"8PbA6WHh235iS\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 102L)
                .d("ID", "653")
                .d("ORGANIZATION_ID", "203")
                .d("SNAPSHOT_DATE", "\"1978-09-30 04:15:35\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"S_vTi7V8lx\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-32358")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "0")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_1140_XYZ_")
                .header("X-Organizations", "_EM_1140_XYZ_")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=34&" + 
                    "end_date=2100-10-25T13%3A10%3A38.368-23%3A30&" + 
                    "sortBy=EglVLEYzJXqXK&" + 
                    "language=lLuvbZ2GJ")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_17_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 43L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "895")
                .d("DESCRIPTION", "\"_iIzZRr_\"")
                .d("FORKS_COUNT", "363")
                .d("GIT_HUB_PROJECT_ID", "915")
                .d("LAST_PUSHED", "\"_EM_576_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "66")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "NULL")
                .d("TITLE", "\"u6NRm\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=1KNqSbMgx0&" + 
                    "limit=391&" + 
                    "start_date=1926-12-24T16%3A12%3A47.915Z&" + 
                    "end_date=2030-02-17T22%3A33%3A35.985%2B12%3A46")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test(timeout = 60000)
    public void test_18_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "glpzmJBkWgrgNU32")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=2R2wanLRS7Yy&" + 
                    "limit=0&" + 
                    "offset=438&" + 
                    "start_date=2089-09-22T14%3A59%3A30.563-14%3A27&" + 
                    "end_date=1953-07-10T15%3A23%3A33.971Z&" + 
                    "sortBy=nNJCp2eSN&" + 
                    "language=gQVxc")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }


}
