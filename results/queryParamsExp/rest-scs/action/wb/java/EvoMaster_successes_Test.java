import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-12-25T15:42:59.093-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 52 tests
 * <br>
*  Covered targets: 182
 * <br>
*  Used time: 0h 15m 1s
 * <br>
*  Needed budget for current results: 89%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.org.restscs.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (200) GET:/v2/api-docs
    */
    @Test(timeout = 60000)
    public void test_0_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/ordered4/{w}/{x}/{z}/{y}
    */
    @Test(timeout = 60000)
    public void test_1_getOnOrdered4ReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/ordered4/SPvjT9FCNnJuDa/fjXoA_0vS/6_M7uh2LtykYuX/_EM_0_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/filesuffix/{directory}/{file}
    */
    @Test(timeout = 60000)
    public void test_2_getOnFilesuffixReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/filesuffix/CP4zyY/3OGeCYvD")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}
    */
    @Test(timeout = 60000)
    public void test_3_getOnApiPatWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/_EM_16_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("none"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_4_getOnWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/two/6SpkgWnYay/_EM_17560_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_5_getOnText2txtReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/four/XvymK25I/_EM_38351_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("4"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_6_getOnText2txtReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_6657_XYZ_")
                .get(baseUrlOfSut + "/api/text2txt/you/4iDA70jHbjBm/qkDK__NivBd")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("u"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_7_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/tue/i%7CT?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_8_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/V*C/jun?EMextraParam123=_EM_3936_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("6"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_9_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/7X3/jul?EMextraParam123=_EM_803_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("7"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_10_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/pOX/oct?EMextraParam123=_EM_2594_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_11_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/=hf/nov")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("11"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/notypevar/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_12_getOnNotypevarReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/notypevar/97/HtgTixEHTHG")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/notypevar/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_13_getOnWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/notypevar/-417539642/xPB?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_14_getOnText2txtReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/see/you/OTU4yIJMp1Sdme3")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("cu"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_15_getOnText2txtReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/for/x/oxiN")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("4"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/text2txt/{word1}/{word2}/{word3}
    */
    @Test(timeout = 60000)
    public void test_16_getOnText2txtReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/and/4CoEXXE/WvhLUc")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("n"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/cookie/{name}/{val}/{site}
    */
    @Test(timeout = 60000)
    public void test_17_getOnCookiReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/userid/am/CLmww?EMextraParam123=_EM_8349_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/cookie/{name}/{val}/{site}
    */
    @Test(timeout = 60000)
    public void test_18_getOnCookiReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/session/am/CLmww?EMextraParam123=_EM_8349_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/costfuns/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_19_getOnWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/costfuns/315/_EM_10_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/costfuns/{i}/{s}
    */
    @Test(timeout = 60000)
    public void test_20_getOnCostfunReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/costfuns/-4/f3UJtLK4mqz0hP")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_21_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1714_XYZ_")
                .get(baseUrlOfSut + "/api/dateparse/mon/jan?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_22_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/wed/_EM_5259_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_23_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/thur/feb")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_24_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/fri/feb?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_25_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/sat/jan?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_26_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/dateparse/sun/apr")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("5"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_27_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3937_XYZ_")
                .get(baseUrlOfSut + "/api/dateparse/_EM_4702_XYZ_/mar?EMextraParam123=_EM_3936_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_28_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2595_XYZ_")
                .get(baseUrlOfSut + "/api/dateparse/_EM_5295_XYZ_/may")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("5"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_29_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/_EM_29770_XYZ_/aug")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("8"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/dateparse/{dayname}/{monthname}
    */
    @Test(timeout = 60000)
    public void test_30_getOnDateparsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/_EM_3909_XYZ_/sep?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("9"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/pat/{txt}/{pat}
    */
    @Test(timeout = 60000)
    public void test_31_getOnWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/_MM%5E1U40UUUUZU/_EM_13123_XYZ_?EMextraParam123=_EM_7767_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_32_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/prof")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_33_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/_EM_10082_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_34_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/none/ms")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_35_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/miss")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_36_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/dr")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_37_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/lady")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_38_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/rthon")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_39_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/mrs")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_40_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/_EM_1_XYZ_/0.31250690059110964/0.12473999411991998")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_41_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1079_XYZ_")
                .get(baseUrlOfSut + "/api/calc/pi/0.9971729208563678/-8.988465674311579E307")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3.141592653589793"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_42_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1079_XYZ_")
                .get(baseUrlOfSut + "/api/calc/sqrt/0.0/0.18754909838735512?EMextraParam123=_EM_1078_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_43_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/sine/-2.192606502418282/0.2601628341683219?EMextraParam123=_EM_649_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-0.8128253481210291"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_44_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/cosine/0.67573708/0.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.7802461397860091"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_45_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/tangent/0.36863121243942265/0.9781968487414983")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.3862892912504061"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_46_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/multiply/-8.988465674311579E307/0.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-0.0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_47_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/divide/0.67573708/0.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Infinity"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_48_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/mr")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/title/{sex}/{title}
    */
    @Test(timeout = 60000)
    public void test_49_getOnTitlReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/sir")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_50_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/calc/_EM_7152_XYZ_/8.988465674311579E307/-6.741349255733684E307")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.0"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/calc/{op}/{arg1}/{arg2}
    */
    @Test(timeout = 60000)
    public void test_51_getOnCalcReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/_EM_65165_XYZ_/0.018055577409636703/0.65844")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.0"));
    }


}
