import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-28T20:27:13.715-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 29 tests
 * <br>
*  Covered targets: 87
 * <br>
*  Used time: 0h 28m 8s
 * <br>
*  Needed budget for current results: 95%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_deleteOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/YaZXRv7zEjc/settings/FxZFz3n")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/YaZXRv7zEjc/settings/FxZFz3n"));
    }
    
    
    @Test(timeout = 60000)
    public void test_1_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/t4UbMpOhp8/comparison_session/dvoSrlPCEYw")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/t4UbMpOhp8/comparison_session/dvoSrlPCEYw"));
    }
    
    
    @Test(timeout = 60000)
    public void test_2_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/TGgkZarUzkKRb/custom_data")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/TGgkZarUzkKRb/custom_data"));
    }
    
    
    @Test(timeout = 60000)
    public void test_3_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"SuIZApvA_HR\" ")
                .put(baseUrlOfSut + "/api/sessions/SX1XKsAs/custom_gene_list/SuIZApvA_HR")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/SX1XKsAs/custom_gene_list/SuIZApvA_HR"));
    }
    
    
    @Test(timeout = 60000)
    public void test_4_getOnQueryWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/_wDLlcb_65/settings/query?" + 
                    "field=Lqup4p7Gx&" + 
                    "value=Cx")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/_wDLlcb_65/settings/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_5_getOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" main_session ")
                .post(baseUrlOfSut + "/api/sessions/v9hfkJ/genomic_chart")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/v9hfkJ/genomic_chart"));
        
        try{
            given().accept("*/*")
                    .get(baseUrlOfSut + "/api/sessions/v9hfkJ/genomic_chart/qyYsNGJlNVA1BOr");
        } catch(Exception e){
        }
    }
    
    
    @Test(timeout = 60000)
    public void test_6_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" main_session ")
                .post(baseUrlOfSut + "/api/sessions/S/genomic_chart")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/S/genomic_chart"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/S/genomic_chart")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/S/genomic_chart"));
    }
    
    
    @Test(timeout = 60000)
    public void test_7_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" custom_data ")
                .post(baseUrlOfSut + "/api/sessions/a97V0PNAoPjD2G/group")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/a97V0PNAoPjD2G/group"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/a97V0PNAoPjD2G/group")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/a97V0PNAoPjD2G/group"));
    }
    
    
    @Test(timeout = 60000)
    public void test_8_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" main_session ")
                .post(baseUrlOfSut + "/api/sessions/RN1gorY65lpxNiPt/virtual_study")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/RN1gorY65lpxNiPt/virtual_study"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/RN1gorY65lpxNiPt/virtual_study")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/RN1gorY65lpxNiPt/virtual_study"));
    }
    
    
    @Test(timeout = 60000)
    public void test_9_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"comparison_session\" ")
                .post(baseUrlOfSut + "/api/sessions/jhH44KOoT/custom_gene_list")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/jhH44KOoT/custom_gene_list"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/jhH44KOoT/custom_gene_list")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/jhH44KOoT/custom_gene_list"));
    }
    
    
    @Test(timeout = 60000)
    public void test_10_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .post(baseUrlOfSut + "/api/sessions/sMUftw9oubBdm_/custom_gene_list")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/sMUftw9oubBdm_/custom_gene_list"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/sMUftw9oubBdm_/custom_gene_list/xa0vS31")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/sMUftw9oubBdm_/custom_gene_list/xa0vS31"));
    }
    
    
    @Test(timeout = 60000)
    public void test_11_getOnQueryWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" comparison_session ")
                .post(baseUrlOfSut + "/api/sessions/4519Y/virtual_study")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/4519Y/virtual_study"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/4519Y/virtual_study/query?" + 
                    "field=hBBsZGlkN3qR6Q&" + 
                    "value=tAX52Y")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/4519Y/virtual_study/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_12_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"genomic_chart\" ")
                .post(baseUrlOfSut + "/api/sessions/nFE0o5MryIl/comparison_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/nFE0o5MryIl/comparison_session"));
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"76csECnGXMUU\" ")
                .put(baseUrlOfSut + "/api/sessions/nFE0o5MryIl/comparison_session/76csECnGXMUU")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/nFE0o5MryIl/comparison_session/76csECnGXMUU"));
    }
    
    
    @Test(timeout = 60000)
    public void test_13_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"EVOMASTER\" ")
                .post(baseUrlOfSut + "/api/sessions/L6WW_monT/settings")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/L6WW_monT/settings"));
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" oxJVD30zltgsZG ")
                .put(baseUrlOfSut + "/api/sessions/L6WW_monT/settings/oxJVD30zltgsZG")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/L6WW_monT/settings/oxJVD30zltgsZG"));
    }
    
    
    @Test(timeout = 60000)
    public void test_14_getOnQueryWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .post(baseUrlOfSut + "/api/sessions/R7IJbbiy/settings")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/R7IJbbiy/settings"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/R7IJbbiy/settings/query?" + 
                    "field=c7o&" + 
                    "value=OfXbGfzUCVE")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/R7IJbbiy/settings/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_15_getOnQueryWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"comparison_session\" ")
                .post(baseUrlOfSut + "/api/sessions/cb4uLdjLMQKcw2L/comparison_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/cb4uLdjLMQKcw2L/comparison_session"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/cb4uLdjLMQKcw2L/comparison_session/query?" + 
                    "field=fhtO2&" + 
                    "value=B69vFgpBrv")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/cb4uLdjLMQKcw2L/comparison_session/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_16_getOnQueryWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/ftWzUF_C6nmp/main_session/query?" + 
                    "field=NTy5t&" + 
                    "value=yhQKins7c0YTHfeN")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ftWzUF_C6nmp/main_session/query"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/info")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.5.0-SNAPSHOT"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/Jg/comparison_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Jg/comparison_session"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/5kbW9/custom_gene_list/query?" + 
                    "field=YUh0jr8uIh_&" + 
                    "value=YpSqA4yAI")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/5kbW9/custom_gene_list/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_17_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/Y8rIavMfGuyaKcL/main_session/IYxujT")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/Y8rIavMfGuyaKcL/main_session/IYxujT"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/_aDf_zb/settings/query?" + 
                    "field=PT2DPcJr&" + 
                    "value=vQ3dJNo3gCuNN5")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/_aDf_zb/settings/query"));
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"group\" ")
                .post(baseUrlOfSut + "/api/sessions/ha_mI/group")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ha_mI/group"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"aKOyIloC_Xl6wZ3B\" ")
                .put(baseUrlOfSut + "/api/sessions/ji5HT/EVOMASTER/aKOyIloC_Xl6wZ3B")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/ji5HT/EVOMASTER/aKOyIloC_Xl6wZ3B"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/uo64EbOEGY/custom_gene_list")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/uo64EbOEGY/custom_gene_list"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/6JGk00AaCEAY34Y/comparison_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/6JGk00AaCEAY34Y/comparison_session"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/fV6JCePzmPNuj/main_session/query?" + 
                    "field=DPQOE5ADH&" + 
                    "value=a97Ym")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/fV6JCePzmPNuj/main_session/query"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" ieg6KyHN8lz ")
                .put(baseUrlOfSut + "/api/sessions/xCo7exYukVXNsUVX/EVOMASTER/ieg6KyHN8lz")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/xCo7exYukVXNsUVX/EVOMASTER/ieg6KyHN8lz"));
        
        try{
            given().accept("*/*")
                    .contentType("application/json")
                    .body(" \"y5cYb7iyVBLe3_y\" ")
                    .put(baseUrlOfSut + "/api/sessions/j02kyF1S9BpXO/group/y5cYb7iyVBLe3_y");
        } catch(Exception e){
        }
    }
    
    
    @Test(timeout = 60000)
    public void test_18_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"settings\" ")
                .post(baseUrlOfSut + "/api/sessions/KcjLuJcVc0KYWeD/settings/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/KcjLuJcVc0KYWeD/settings/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_19_postOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" comparison_session ")
                .post(baseUrlOfSut + "/api/sessions/vVhIg4DPDDW/comparison_session")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/vVhIg4DPDDW/comparison_session"));
    }
    
    
    @Test(timeout = 60000)
    public void test_20_postOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" settings ")
                .post(baseUrlOfSut + "/api/sessions/X8T/settings")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/X8T/settings"));
    }
    
    
    @Test(timeout = 60000)
    public void test_21_postOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" main_session ")
                .post(baseUrlOfSut + "/api/sessions/mufTIuyJpXk/main_session")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/mufTIuyJpXk/main_session"));
    }
    
    
    @Test(timeout = 60000)
    public void test_22_postOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"EVOMASTER\" ")
                .post(baseUrlOfSut + "/api/sessions/BU7Plc7qBldCQ4/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/BU7Plc7qBldCQ4/EVOMASTER"));
    }
    
    
    @Test(timeout = 60000)
    public void test_23_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"genomic_chart\" ")
                .post(baseUrlOfSut + "/api/sessions/Wn/genomic_chart/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/Wn/genomic_chart/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_24_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"EVOMASTER\" ")
                .post(baseUrlOfSut + "/api/sessions/KRtGt_yaWA/EVOMASTER/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/KRtGt_yaWA/EVOMASTER/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_25_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" main_session ")
                .post(baseUrlOfSut + "/api/sessions/43HCBxPto/main_session/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/43HCBxPto/main_session/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_26_postOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" custom_data ")
                .post(baseUrlOfSut + "/api/sessions/BLJTWke/custom_data")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/BLJTWke/custom_data"));
    }
    
    
    @Test(timeout = 60000)
    public void test_27_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"virtual_study\" ")
                .post(baseUrlOfSut + "/api/sessions/CUFRvWyWG5/virtual_study/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/CUFRvWyWG5/virtual_study/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_28_deleteOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" comparison_session ")
                .post(baseUrlOfSut + "/api/sessions/NVCyAaRvyY70P/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/NVCyAaRvyY70P/EVOMASTER"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/NVCyAaRvyY70P/EVOMASTER/Mk")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/NVCyAaRvyY70P/EVOMASTER/Mk"));
    }


}
