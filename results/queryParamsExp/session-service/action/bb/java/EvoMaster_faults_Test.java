import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-12-25T14:19:18.230-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 32 tests
 * <br>
*  Covered targets: 82
 * <br>
*  Used time: 0h 27m 45s
 * <br>
*  Needed budget for current results: 97%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    /**
    * Calls:
    * (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_0_deleteOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/46pFGyDFjGApBBJ/comparison_session/gAdDulXMvTe4Ic3L")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/46pFGyDFjGApBBJ/comparison_session/gAdDulXMvTe4Ic3L"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_1_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/ez1wEhzLwbu_l/main_session/y9PcRTTb")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ez1wEhzLwbu_l/main_session/y9PcRTTb"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_2_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/WaFoP/group")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/WaFoP/group"));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_3_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"C6y\" ")
                .put(baseUrlOfSut + "/api/sessions/JQA/main_session/C6y")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/JQA/main_session/C6y"));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/sessions/{source}/{type}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_4_postOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_data\" ")
                .post(baseUrlOfSut + "/api/sessions/0f65/custom_data")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/0f65/custom_data"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/sessions/{source}/{type}/query
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_5_getOnQueryShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/7w3/virtual_study/query?" + 
                    "field=Ykdo3OMDRTS&" + 
                    "value=P0c")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/7w3/virtual_study/query"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (500) GET:/api/sessions/{source}/{type}
    * Found 3 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_6_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" settings ")
                .post(baseUrlOfSut + "/api/sessions/9aSiZ_uGzZ/genomic_chart")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/9aSiZ_uGzZ/genomic_chart"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/9aSiZ_uGzZ/genomic_chart")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/9aSiZ_uGzZ/genomic_chart"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (null) PUT:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_7_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_data\" ")
                .post(baseUrlOfSut + "/api/sessions/vWa/custom_gene_list")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/vWa/custom_gene_list"));
        
        try{
            given().accept("*/*")
                    .contentType("application/json")
                    .body(" 8ox64tMyS ")
                    .put(baseUrlOfSut + "/api/sessions/vWa/custom_gene_list/8ox64tMyS");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (500) GET:/api/sessions/{source}/{type}
    * Found 3 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_8_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" genomic_chart ")
                .post(baseUrlOfSut + "/api/sessions/o3X01XbGbeUE/comparison_session")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/o3X01XbGbeUE/comparison_session"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/o3X01XbGbeUE/comparison_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/o3X01XbGbeUE/comparison_session"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * Found 3 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_9_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" genomic_chart ")
                .post(baseUrlOfSut + "/api/sessions/yd5D4314p/settings")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/yd5D4314p/settings"));
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"x\" ")
                .put(baseUrlOfSut + "/api/sessions/yd5D4314p/settings/x")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/yd5D4314p/settings/x"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (null) GET:/api/sessions/{source}/{type}/query
    * Found 2 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_10_getOnQueryShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_gene_list\" ")
                .post(baseUrlOfSut + "/api/sessions/hvJytie5P/virtual_study")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/hvJytie5P/virtual_study"));
        
        try{
            given().accept("*/*")
                    .get(baseUrlOfSut + "/api/sessions/hvJytie5P/virtual_study/query?" + 
                        "field=NWmCGpJeaL0hZe&" + 
                        "value=d1Dmo4PZVq7");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * Found 3 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_11_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" main_session ")
                .post(baseUrlOfSut + "/api/sessions/D8ahv38_/custom_data")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/D8ahv38_/custom_data"));
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" Ab ")
                .put(baseUrlOfSut + "/api/sessions/D8ahv38_/custom_data/Ab")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/D8ahv38_/custom_data/Ab"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}/query/fetch
    * 2 - (400) POST:/api/sessions/{source}/{type}/query/fetch
    * 3 - (500) GET:/api/sessions/{source}/{type}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_12_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" group ")
                .post(baseUrlOfSut + "/api/sessions/sXCkw/group/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/sXCkw/group/query/fetch"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"comparison_session\" ")
                .post(baseUrlOfSut + "/api/sessions/1QhJvwv/comparison_session/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/1QhJvwv/comparison_session/query/fetch"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/4wM7W2NHI/virtual_study")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/4wM7W2NHI/virtual_study"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_13_deleteOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"comparison_session\" ")
                .post(baseUrlOfSut + "/api/sessions/7WaVVAseE_/comparison_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/7WaVVAseE_/comparison_session"));
        
        // Fault100. HTTP Status 500. DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/7WaVVAseE_/comparison_session/L")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/7WaVVAseE_/comparison_session/L"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (500) GET:/api/sessions/{source}/{type}/query
    * Found 3 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_14_getOnQueryShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" custom_gene_list ")
                .post(baseUrlOfSut + "/api/sessions/kPAhCwKtONg/comparison_session")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/kPAhCwKtONg/comparison_session"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/kPAhCwKtONg/comparison_session/query?" + 
                    "field=KPo&" + 
                    "value=trx_dy")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/kPAhCwKtONg/comparison_session/query"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (500) GET:/api/sessions/{source}/{type}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_15_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"comparison_session\" ")
                .post(baseUrlOfSut + "/api/sessions/AgcaiqDY/settings")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/AgcaiqDY/settings"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/AgcaiqDY/settings")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/AgcaiqDY/settings"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_16_deleteOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_data\" ")
                .post(baseUrlOfSut + "/api/sessions/4WRxapY/custom_gene_list")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/4WRxapY/custom_gene_list"));
        
        // Fault100. HTTP Status 500. DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/4WRxapY/custom_gene_list/n")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/4WRxapY/custom_gene_list/n"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (500) GET:/api/sessions/{source}/{type}/query
    * Found 3 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_17_getOnQueryShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" comparison_session ")
                .post(baseUrlOfSut + "/api/sessions/FpuK9Am1n/custom_gene_list")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/FpuK9Am1n/custom_gene_list"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/FpuK9Am1n/custom_gene_list/query?" + 
                    "field=octPAHbGF&" + 
                    "value=vsPwzL")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/FpuK9Am1n/custom_gene_list/query"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (500) DELETE:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_18_deleteOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"group\" ")
                .post(baseUrlOfSut + "/api/sessions/4Tiya8SoCD/group")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/4Tiya8SoCD/group"));
        
        // Fault100. HTTP Status 500. DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/4Tiya8SoCD/group/3vg4fHlYw2tV")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/4Tiya8SoCD/group/3vg4fHlYw2tV"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_19_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"EVOMASTER\" ")
                .post(baseUrlOfSut + "/api/sessions/fOHhz1UDS9LvSPmU/genomic_chart")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/fOHhz1UDS9LvSPmU/genomic_chart"));
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"BLr4kHJeJB\" ")
                .put(baseUrlOfSut + "/api/sessions/fOHhz1UDS9LvSPmU/genomic_chart/BLr4kHJeJB")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/fOHhz1UDS9LvSPmU/genomic_chart/BLr4kHJeJB"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (500) GET:/api/sessions/{source}/{type}/query
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_20_getOnQueryShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"settings\" ")
                .post(baseUrlOfSut + "/api/sessions/8d6G9xKiV/settings")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/8d6G9xKiV/settings"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/8d6G9xKiV/settings/query?" + 
                    "field=yqprw3&" + 
                    "value=ctriFH2P06cmD")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/8d6G9xKiV/settings/query"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (500) GET:/api/sessions/{source}/{type}/query
    * Found 4 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_21_getOnQueryShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"virtual_study\" ")
                .post(baseUrlOfSut + "/api/sessions/zWRPVuZZRl/group")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/zWRPVuZZRl/group"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/zWRPVuZZRl/group/query?" + 
                    "field=um2oJReFH_&" + 
                    "value=AVWUUGGe")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/zWRPVuZZRl/group/query"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/api/sessions/{source}/{type}
    * 2 - (500) PUT:/api/sessions/{source}/{type}/{id}
    * 3 - (500) GET:/api/sessions/{source}/{type}/{id}
    * Found 6 potential faults. Type-codes: 100, 200
    */
    @Test(timeout = 60000)
    public void test_22_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"settings\" ")
                .post(baseUrlOfSut + "/api/sessions/HsTjioVcQm99/main_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/HsTjioVcQm99/main_session"));
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"epOWc\" ")
                .put(baseUrlOfSut + "/api/sessions/HsTjioVcQm99/main_session/P9B2D0krDmntAYx2")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/HsTjioVcQm99/main_session/P9B2D0krDmntAYx2"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/HsTjioVcQm99/main_session/P9B2D0krDmntAYx2")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/HsTjioVcQm99/main_session/P9B2D0krDmntAYx2"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_23_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" genomic_chart ")
                .post(baseUrlOfSut + "/api/sessions/kcB3/genomic_chart/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/kcB3/genomic_chart/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_24_postOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"EVOMASTER\" ")
                .post(baseUrlOfSut + "/api/sessions/43OIuk/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/43OIuk/EVOMASTER"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_25_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" virtual_study ")
                .post(baseUrlOfSut + "/api/sessions/fH0wqA9kyC/virtual_study/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/fH0wqA9kyC/virtual_study/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_26_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"group\" ")
                .post(baseUrlOfSut + "/api/sessions/LBkDU/group/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/LBkDU/group/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_27_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" custom_data ")
                .post(baseUrlOfSut + "/api/sessions/ebiXnDa5gSM0/custom_data/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/ebiXnDa5gSM0/custom_data/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_28_postOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" group ")
                .post(baseUrlOfSut + "/api/sessions/rEVH6qh0Q8htCo/group")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/rEVH6qh0Q8htCo/group"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_29_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" custom_gene_list ")
                .post(baseUrlOfSut + "/api/sessions/6yPHfhfP/custom_gene_list/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/6yPHfhfP/custom_gene_list/query/fetch"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/sessions/{source}/{type}/query/fetch
    * Found 1 potential fault of type-code 200
    */
    @Test(timeout = 60000)
    public void test_30_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" settings ")
                .post(baseUrlOfSut + "/api/sessions/amCkmyXORiMr/settings/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/amCkmyXORiMr/settings/query/fetch"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/sessions/{source}/{type}
    * 2 - (400) PUT:/api/sessions/{source}/{type}/{id}
    * Found 2 potential faults of type-code 200
    */
    @Test(timeout = 60000)
    public void test_31_putOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" custom_gene_list ")
                .post(baseUrlOfSut + "/api/sessions/h30ZNYLvKn/EVOMASTER")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/h30ZNYLvKn/EVOMASTER"));
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 400 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" 4wKd59k4D ")
                .put(baseUrlOfSut + "/api/sessions/h30ZNYLvKn/EVOMASTER/4wKd59k4D")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/h30ZNYLvKn/EVOMASTER/4wKd59k4D"));
    }


}
