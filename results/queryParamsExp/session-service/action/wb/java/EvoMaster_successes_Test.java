import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-12-25T17:29:42.489-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 10 tests
 * <br>
*  Covered targets: 35
 * <br>
*  Used time: 0h 15m 15s
 * <br>
*  Needed budget for current results: 88%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.org.cbioportal.session_service.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (200) GET:/v2/api-docs
    */
    @Test(timeout = 60000)
    public void test_0_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    /**
    * Calls:
    * (200) GET:/info
    */
    @Test(timeout = 60000)
    public void test_1_getOnInfoReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_12_XYZ_")
                .get(baseUrlOfSut + "/info?EMextraParam123=_EM_11_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.5.0-SNAPSHOT"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/sessions/{source}/{type}
    */
    @Test(timeout = 60000)
    public void test_2_postOnSessionReturns200() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_871_XYZ_")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/UUUz/main_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/sessions/{source}/{type}
    */
    @Test(timeout = 60000)
    public void test_3_postOnSessionReturns200() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/qvC4nODF93W/virtual_study")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/sessions/{source}/{type}
    */
    @Test(timeout = 60000)
    public void test_4_postOnSessionReturns200() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/hVVz/group?EMextraParam123=_EM_870_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/sessions/{source}/{type}
    */
    @Test(timeout = 60000)
    public void test_5_postOnSessionReturns200() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_871_XYZ_")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/hVVz/genomic_chart")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/sessions/{source}/{type}
    */
    @Test(timeout = 60000)
    public void test_6_postOnSessionReturns200() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/sessions/_EM_868_XYZ_/custom_gene_list?EMextraParam123=_EM_870_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/sessions/{source}/{type}
    */
    @Test(timeout = 60000)
    public void test_7_postOnSessionReturns200() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3432_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"EM_tainted_map\": \"_EM_3433_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/sessions/_EM_3430_XYZ_/settings")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/sessions/{source}/{type}
    */
    @Test(timeout = 60000)
    public void test_8_postOnSessionReturns200UsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_5339_XYZ_\", \"checksum\":\"rucOUd\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"_EM_5115_XYZ_\", \"type\":\"settings\", \"_id\":{\"$oid\":\"7b51375c86b2bec3ccdacd95\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"bmUA7iUUUe3UUx\", \"checksum\":\"UUM_U340_PYUU\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"_EM_781_XYZ_\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"0df71b10f0e7cafd6aea4abc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_782_XYZ_\", \"checksum\":\"4_EtD5ns244IGmJo\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"I0ckMImLXgHppF3\", \"type\":\"group\", \"_id\":{\"$oid\":\"dad82982bb50c97bd8f3c1cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"SoDj\", \"checksum\":\"NSljG\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"bWOaWaJtE7sHQ\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"c3dba4cffe79f7bde1106ed8\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"_EM_5341_XQZ\", \"checksum\":\"Mzzd5txLCn0\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"_EM_6882_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"bafe4a05dab775a86cd36567\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"pJ0zQxx\", \"checksum\":\"1UwlUiUUdSU_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"14O70LvDPKwG_C\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"b90284cb3a2ef2d5fdbe39bf\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"H4v[5sgMgnaAl\", \"checksum\":\"23mLkd6ygRp\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"D8owYPHaOesdK\", \"type\":\"settings\", \"_id\":{\"$oid\":\"5610aff8486b489dbdc0fa5b\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"Z\", \"checksum\":\"_EM_6321_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"D8owYPHaOesdK\", \"type\":\"settings\", \"_id\":{\"$oid\":\"77215ae93dc19d713caccd46\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"UOOyYpxLtJI7o\", \"checksum\":\"c0ulTIv2Y\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"kGM^8aNk6FrYNEWwZ\", \"type\":\"comparison_session\", \"_id\":{\"$oid\":\"a3d3cc91c2ff73ac8c008e2d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"_EM_8629_XYZ_\", \"checksum\":\"aknZMUk\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"AXZre0AnUUlCkR\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"eae2619bea7cbebcbeb76c33\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"7OGjJ0cZNc0\", \"checksum\":\"2XXqKArW1fVqf4\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"hiD1lxtRpYE8_6g\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"22b9d5b6eaebf4eb62c9bc59\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"zfInD45YQf9\", \"checksum\":\"_EM_8630_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"mNK\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e8cb0ed4ecc6e03eaa0e0e2e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"EM_tainted_map\": \"_EM_5120_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/sessions/group/comparison_session")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/sessions/{source}/{type}
    */
    @Test(timeout = 60000)
    public void test_9_postOnSessionReturns200UsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"_EM_7089_XYZ_\", \"checksum\":\"hUUU]U\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"false\", \"type\":\"main_session\", \"_id\":{\"$oid\":\"6a51376c86b2bed3bddacda5\"}}")
            .and().insertInto("session", "custom_gene_list")
                .d("{\"id\":\"bmUA7iUUUe3UUx\", \"checksum\":\"_EM_7084_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"_EM_7090_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"0df71b10f0e7cafd6aeb4abc\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"_EM_782_XYZ_\", \"checksum\":\"4_EtD5ns244IGmJo\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"I0ckMImLXgHppF3\", \"type\":\"group\", \"_id\":{\"$oid\":\"dad82982bb50c97bd8f3c1cb\"}}")
            .and().insertInto("session", "virtual_study")
                .d("{\"id\":\"SoDjL\", \"checksum\":\"NSljK\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"bWOaWaJtE8sHQ\", \"type\":\"genomic_chart\", \"_id\":{\"$oid\":\"c3dba4cffe79f7bde1106ed8\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"gEM_5341_XYZ\", \"checksum\":\"QWTtUt0y\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"fxdY\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"bafe4a05dab775a86cd36567\"}}")
            .and().insertInto("session", "genomic_chart")
                .d("{\"id\":\"pJ0zQ\u0080x\", \"checksum\":\"1UwlUiUUdSU_r\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"14O70LvDPKwG_C\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"b91295d93a1ef1d5debe29be\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"H4v[5sgMgnaAl\", \"checksum\":\"\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"_EM_7085_XYZ_\", \"type\":\"virtual_study\", \"_id\":{\"$oid\":\"5610aff8486b489dbdc0fa5b\"}}")
            .and().insertInto("session", "group")
                .d("{\"id\":\"Z\", \"checksum\":\"_EM_6321_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"D8owYPHaOesdK\", \"type\":\"settings\", \"_id\":{\"$oid\":\"77215ae93dc19d713caccd46\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"UOOyYpxLtJI7o9\", \"checksum\":\"c0ulTIv2Y\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"_EM_7091_XYZ_\", \"type\":\"custom_data\", \"_id\":{\"$oid\":\"a3d3cc91c2ff73ac8c008e2d\"}}")
            .and().insertInto("session", "main_session")
                .d("{\"id\":\"YCUURUv^zSOS3mU\", \"checksum\":\"aknZMUk\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"AXZre0AnZtlGkR\", \"type\":\"group\", \"_id\":{\"$oid\":\"e9e2619bea7cbebcbeb76c33\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\";OGjJ0cZNc0\", \"checksum\":\"3a95E2jGfLtQ\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"_EM_7092_XYZ_\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"22b9d5b6eaebf4eb62c9bc59\"}}")
            .and().insertInto("session", "settings")
                .d("{\"id\":\"zfInD45YQf9\", \"checksum\":\"_EM_7093_XYZ_\", \"data\":{\n                    \"EM_tainted_map\":\"_EM_29_XYZ_\"\n                    }, \"source\":\"mNK\", \"type\":\"custom_gene_list\", \"_id\":{\"$oid\":\"e8cb0ed4ecc6e03eaa0e0e2e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"EM_tainted_map\": \"_EM_5120_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/sessions/main_session/custom_data")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json");
    }


}
