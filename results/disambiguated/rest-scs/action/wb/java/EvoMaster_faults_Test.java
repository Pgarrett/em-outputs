import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-06T23:21:47.840-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 70 tests
 * <br>
*  Covered targets: 137
 * <br>
*  Used time: 0h 10m 2s
 * <br>
*  Needed budget for current results: 80%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.org.restscs.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_getOnText2txtWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/text2txt/{word1}/{word2}/{word3} -> GET on path '/api/text2txt/{word1}/{word2}/{word3}' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/see/aum_x/l6yIp")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_1_getOnText2txtWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/text2txt/{word1}/{word2}/{word3} -> GET on path '/api/text2txt/{word1}/{word2}/{word3}' defines a response schema but no response body found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/by/_EM_23708_XYZ_/_EM_14343_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_2_getOnCookiWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/cookie/{name}/{val}/{site} -> Response status 400 not defined for path '/api/cookie/{name}/{val}/{site}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1163_XYZ_")
                .get(baseUrlOfSut + "/api/cookie/w7Achp7yj/sJbt%5C/Rx")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_3_getOnText2txtWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/text2txt/{word1}/{word2}/{word3} -> Response status 400 not defined for path '/api/text2txt/{word1}/{word2}/{word3}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/GsSy/oSSF%3EM/UEMU2U53U%5CYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_4_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> Response status 400 not defined for path '/api/pat/{txt}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/%5CofeM?EMextraParam123=_EM_2947_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_5_getOnOrdered4WithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/ordered4/{w}/{x}/{z}/{y} -> Response status 400 not defined for path '/api/ordered4/{w}/{x}/{z}/{y}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/sD3IhZ/aURP%5Cq/_EM_12168_XYZ_/%7DO%3FdY")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_6_getOnFilesuffixWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/filesuffix/{directory}/{file} -> Response status 400 not defined for path '/api/filesuffix/{directory}/{file}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/filesuffix/kG/Kon96vq%5Ch")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_7_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt}/{pat} -> Response status 400 not defined for path '/api/pat/{txt}/{pat}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/_EM_2772_XYZ_/XXN3IV71hMYx%5C")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_8_getOnDateparsWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/dateparse/{dayname}/{monthname} -> Response status 400 not defined for path '/api/dateparse/{dayname}/{monthname}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/wM%5C/aug")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_9_getOnNotypevarWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/notypevar/{i}/{s} -> Response status 400 not defined for path '/api/notypevar/{i}/{s}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/notypevar/730/0FGpOb5x%5CxPAQ")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_10_getOnCostfunReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/costfuns/{i}/{s} -> Response status 400 not defined for path '/api/costfuns/{i}/{s}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/costfuns/94/W%5CBjszw6")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_11_getOnCalcReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/calc/{op}/{arg1}/{arg2} -> Response status 400 not defined for path '/api/calc/{op}/{arg1}/{arg2}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/QFw%5C/0.9/0.8")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_12_getOnTitlReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/title/{sex}/{title} -> Response status 400 not defined for path '/api/title/{sex}/{title}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/UEU%5D9U244UXY%5C_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    @Test(timeout = 60000)
    public void test_13_getOnText2txtWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/text2txt/{word1}/{word2}/{word3} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/fC%C2%854/QvZR6MgJJSuc/fCu4?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/text2txt/fC%C2%854/QvZR6MgJJSuc/fCu4"));
    }
    
    
    @Test(timeout = 60000)
    public void test_14_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/afs//:v/k5k'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/pat/afs//:v/k5k?EMextraParam123=_EM_5495_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/afs//:v/k5k"));
    }
    
    
    @Test(timeout = 60000)
    public void test_15_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:o/l1'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:o/l1?EMextraParam123=_EM_8765_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:o/l1"));
    }
    
    
    @Test(timeout = 60000)
    public void test_16_getOnOrdered4WithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/ordered4/{w}/{x}/{z}/{y} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/sD3IhZ/aURPTq/gyXCC98KQWK/%C2%85O%3FdY")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/ordered4/sD3IhZ/aURPTq/gyXCC98KQWK/%C2%85O%3FdY"));
    }
    
    
    @Test(timeout = 60000)
    public void test_17_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/afs//:c63/y3h'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/afs//:c63/y3h")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/afs//:c63/y3h"));
    }
    
    
    @Test(timeout = 60000)
    public void test_18_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/afs//:d63/z4i'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/afs//:d63/z4i")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/afs//:d63/z4i"));
    }
    
    
    @Test(timeout = 60000)
    public void test_19_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/afs//:fc/v'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/afs//:fc/v")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/afs//:fc/v"));
    }
    
    
    @Test(timeout = 60000)
    public void test_20_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:fcc/v'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:fcc/v")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:fcc/v"));
    }
    
    
    @Test(timeout = 60000)
    public void test_21_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:fcc/va'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:fcc/va")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:fcc/va"));
    }
    
    
    @Test(timeout = 60000)
    public void test_22_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:fcd/wb'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:fcd/wb")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:fcd/wb"));
    }
    
    
    @Test(timeout = 60000)
    public void test_23_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:bp/i'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:bp/i")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:bp/i"));
    }
    
    
    @Test(timeout = 60000)
    public void test_24_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:bp/i4'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:bp/i4")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:bp/i4"));
    }
    
    
    @Test(timeout = 60000)
    public void test_25_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:bp/ik'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:bp/ik")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:bp/ik"));
    }
    
    
    @Test(timeout = 60000)
    public void test_26_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:b/jk'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:b/jk")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:b/jk"));
    }
    
    
    @Test(timeout = 60000)
    public void test_27_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:b/jl'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:b/jl")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:b/jl"));
    }
    
    
    @Test(timeout = 60000)
    public void test_28_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:bx/j4'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:bx/j4")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:bx/j4"));
    }
    
    
    @Test(timeout = 60000)
    public void test_29_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:-ce/_2'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:-ce/_2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:-ce/_2"));
    }
    
    
    @Test(timeout = 60000)
    public void test_30_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:ade/_2'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:ade/_2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:ade/_2"));
    }
    
    
    @Test(timeout = 60000)
    public void test_31_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:m/r'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:m/r")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:m/r"));
    }
    
    
    @Test(timeout = 60000)
    public void test_32_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/ftp//:iq/g9'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/ftp//:iq/g9")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/ftp//:iq/g9"));
    }
    
    
    @Test(timeout = 60000)
    public void test_33_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/ftp//:ir/h9'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/ftp//:ir/h9")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/ftp//:ir/h9"));
    }
    
    
    @Test(timeout = 60000)
    public void test_34_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/afs//:u/hz'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/afs//:u/hz")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/afs//:u/hz"));
    }
    
    
    @Test(timeout = 60000)
    public void test_35_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/afs//:v/hz'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/afs//:v/hz")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/afs//:v/hz"));
    }
    
    
    @Test(timeout = 60000)
    public void test_36_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:w/hz'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:w/hz")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:w/hz"));
    }
    
    
    @Test(timeout = 60000)
    public void test_37_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/afs//:y/w10'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/afs//:y/w10")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/afs//:y/w10"));
    }
    
    
    @Test(timeout = 60000)
    public void test_38_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:y/x10'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:y/x10")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:y/x10"));
    }
    
    
    @Test(timeout = 60000)
    public void test_39_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:y/x1k'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:y/x1k")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:y/x1k"));
    }
    
    
    @Test(timeout = 60000)
    public void test_40_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/ftp//:e/n'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/ftp//:e/n")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/ftp//:e/n"));
    }
    
    
    @Test(timeout = 60000)
    public void test_41_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/ftp//:f/o8'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/ftp//:f/o8")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/ftp//:f/o8"));
    }
    
    
    @Test(timeout = 60000)
    public void test_42_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/ftp//:f/p9'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/ftp//:f/p9")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/ftp//:f/p9"));
    }
    
    
    @Test(timeout = 60000)
    public void test_43_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/ftp//:f/p_'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/ftp//:f/p_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/ftp//:f/p_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_44_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/afs//:g/v'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/afs//:g/v")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/afs//:g/v"));
    }
    
    
    @Test(timeout = 60000)
    public void test_45_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/afs//:-y/x'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/afs//:-y/x")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/afs//:-y/x"));
    }
    
    
    @Test(timeout = 60000)
    public void test_46_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:-y/x'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:-y/x")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:-y/x"));
    }
    
    
    @Test(timeout = 60000)
    public void test_47_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:-z/x'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:-z/x")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:-z/x"));
    }
    
    
    @Test(timeout = 60000)
    public void test_48_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:-z/y'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:-z/y")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:-z/y"));
    }
    
    
    @Test(timeout = 60000)
    public void test_49_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:-z/z4'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:-z/z4")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:-z/z4"));
    }
    
    
    @Test(timeout = 60000)
    public void test_50_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:az/z'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:az/z")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:az/z"));
    }
    
    
    @Test(timeout = 60000)
    public void test_51_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:bz/_'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:bz/_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:bz/_"));
    }
    
    
    @Test(timeout = 60000)
    public void test_52_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:y/t'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:y/t")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:y/t"));
    }
    
    
    @Test(timeout = 60000)
    public void test_53_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:z/t'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:z/t")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:z/t"));
    }
    
    
    @Test(timeout = 60000)
    public void test_54_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:z3/t'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:z3/t")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:z3/t"));
    }
    
    
    @Test(timeout = 60000)
    public void test_55_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:_3/t'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:_3/t")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:_3/t"));
    }
    
    
    @Test(timeout = 60000)
    public void test_56_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/ftp//:-3/t1'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/ftp//:-3/t1")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/ftp//:-3/t1"));
    }
    
    
    @Test(timeout = 60000)
    public void test_57_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/ftp//:-4/u1'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/ftp//:-4/u1")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/ftp//:-4/u1"));
    }
    
    
    @Test(timeout = 60000)
    public void test_58_getOnFilesuffixWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/filesuffix/{directory}/{file} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/filesuffix/;F/wRsq")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/filesuffix/;F/wRsq"));
    }
    
    
    @Test(timeout = 60000)
    public void test_59_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:s2p/bg2'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:s2p/bg2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:s2p/bg2"));
    }
    
    
    @Test(timeout = 60000)
    public void test_60_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:sp/cg2'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:sp/cg2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:sp/cg2"));
    }
    
    
    @Test(timeout = 60000)
    public void test_61_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:sq/cg2'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:sq/cg2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:sq/cg2"));
    }
    
    
    @Test(timeout = 60000)
    public void test_62_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:tq/cg2'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:tq/cg2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:tq/cg2"));
    }
    
    
    @Test(timeout = 60000)
    public void test_63_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/ftp//:tqv/cg2'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/ftp//:tqv/cg2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/ftp//:tqv/cg2"));
    }
    
    
    @Test(timeout = 60000)
    public void test_64_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/gopher//:q0/o'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:q0/o")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:q0/o"));
    }
    
    
    @Test(timeout = 60000)
    public void test_65_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:q0/p'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:q0/p")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:q0/p"));
    }
    
    
    @Test(timeout = 60000)
    public void test_66_getOnPatWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/pat/{txt} -> No API path found that matches request '/api/pat/http//:qh/p'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/http//:qh/p")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/http//:qh/p"));
    }
    
    
    @Test(timeout = 60000)
    public void test_67_getOnNotypevarWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/notypevar/{i}/{s} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/notypevar/131762/;9IaZsw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/notypevar/131762/;9IaZsw"));
    }
    
    
    @Test(timeout = 60000)
    public void test_68_getOnDateparsWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/dateparse/{dayname}/{monthname} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/WesXM/;")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/dateparse/WesXM/;"));
    }
    
    
    @Test(timeout = 60000)
    public void test_69_getOnCookiWithQueryParamReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/cookie/{name}/{val}/{site} -> No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/userid/TTfU%3C%3F=%3C/;")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/cookie/userid/TTfU%3C%3F=%3C/;"));
    }


}
