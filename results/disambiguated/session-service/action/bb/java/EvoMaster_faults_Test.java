import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-06T21:49:25.800-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 21 tests
 * <br>
*  Covered targets: 68
 * <br>
*  Used time: 0h 18m 38s
 * <br>
*  Needed budget for current results: 100%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_deleteOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. DELETE:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/sessions/U9CFfN7B/custom_gene_list/eirF")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/U9CFfN7B/custom_gene_list/eirF"));
    }
    
    
    @Test(timeout = 60000)
    public void test_1_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/B4RPW/genomic_chart/Iqfcg2H7")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/B4RPW/genomic_chart/Iqfcg2H7"));
    }
    
    
    @Test(timeout = 60000)
    public void test_2_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/sajwFnkonuqw6Z5/genomic_chart")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/sajwFnkonuqw6Z5/genomic_chart"));
    }
    
    
    @Test(timeout = 60000)
    public void test_3_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" p ")
                .put(baseUrlOfSut + "/api/sessions/4I/virtual_study/p")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/4I/virtual_study/p"));
    }
    
    
    @Test(timeout = 60000)
    public void test_4_postOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_data\" ")
                .post(baseUrlOfSut + "/api/sessions/w1oa5GauMojU/custom_data")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/w1oa5GauMojU/custom_data"));
    }
    
    
    @Test(timeout = 60000)
    public void test_5_getOnQueryWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/3Hi/main_session/query?" + 
                    "field=eH93BsRnP2VA&" + 
                    "value=dYQCGfQRvZNssl")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/3Hi/main_session/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_6_deleteOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/ZfFNcggZi3yhPTx/virtual_study")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/ZfFNcggZi3yhPTx/virtual_study"));
        
        try{
            given().accept("*/*")
                    .delete(baseUrlOfSut + "/api/sessions/dzoW4Oy1/custom_data/pN8D0Ik0l2WNGfO");
        } catch(Exception e){
        }
    }
    
    
    @Test(timeout = 60000)
    public void test_7_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" comparison_session ")
                .post(baseUrlOfSut + "/api/sessions/hlMMHkeaq4oBfPr/custom_gene_list")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/hlMMHkeaq4oBfPr/custom_gene_list"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/hlMMHkeaq4oBfPr/custom_gene_list")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/hlMMHkeaq4oBfPr/custom_gene_list"));
    }
    
    
    @Test(timeout = 60000)
    public void test_8_putOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"virtual_study\" ")
                .post(baseUrlOfSut + "/api/sessions/QOtleT/virtual_study/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/QOtleT/virtual_study/query/fetch"));
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" riHWI839U ")
                .put(baseUrlOfSut + "/api/sessions/6svm1qKkf01v/comparison_session/riHWI839U")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/6svm1qKkf01v/comparison_session/riHWI839U"));
    }
    
    
    @Test(timeout = 60000)
    public void test_9_getOnQueryWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" genomic_chart ")
                .post(baseUrlOfSut + "/api/sessions/BTCWhPqYE49/custom_data")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/BTCWhPqYE49/custom_data"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/BTCWhPqYE49/custom_data/query?" + 
                    "field=QqzyVDueGuimu&" + 
                    "value=YaKWIux2B9")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/BTCWhPqYE49/custom_data/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_10_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"settings\" ")
                .post(baseUrlOfSut + "/api/sessions/3dY6/comparison_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/3dY6/comparison_session"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/3dY6/comparison_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/3dY6/comparison_session"));
    }
    
    
    @Test(timeout = 60000)
    public void test_11_getOnQueryWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" EVOMASTER ")
                .post(baseUrlOfSut + "/api/sessions/x/virtual_study")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/x/virtual_study"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/x/virtual_study/query?" + 
                    "field=fr1ZJsw_sgh&" + 
                    "value=RmXs")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/x/virtual_study/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_12_getOnQueryWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"virtual_study\" ")
                .post(baseUrlOfSut + "/api/sessions/HLjfW/custom_gene_list")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/HLjfW/custom_gene_list"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/HLjfW/custom_gene_list/query?" + 
                    "field=9R&" + 
                    "value=kTBF5cOS0")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/HLjfW/custom_gene_list/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_13_getOnQueryWithQueryParamsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/api/sessions/{source}/{type}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 500 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"custom_data\" ")
                .post(baseUrlOfSut + "/api/sessions/kkvJd9/main_session")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/kkvJd9/main_session"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/query
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/query -> Response status 500 not defined for path '/api/sessions/{source}/{type}/query'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/kkvJd9/main_session/query?" + 
                    "field=aRmSszJTkH3O5&" + 
                    "value=6_s4plU9NwCaZj")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/kkvJd9/main_session/query"));
    }
    
    
    @Test(timeout = 60000)
    public void test_14_getOnSessionShowsFaults_100_200() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" custom_data ")
                .post(baseUrlOfSut + "/api/sessions/lsqpl_qKu/main_session")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/lsqpl_qKu/main_session"));
        
        // Fault100. HTTP Status 500. PUT:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. PUT:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" eJjihXML4u2UiQ ")
                .put(baseUrlOfSut + "/api/sessions/lsqpl_qKu/main_session/Zf")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/lsqpl_qKu/main_session/Zf"));
        
        // Fault100. HTTP Status 500. GET:/api/sessions/{source}/{type}/{id}
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/api/sessions/{source}/{type}/{id} -> Response status 500 not defined for path '/api/sessions/{source}/{type}/{id}'.
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/sessions/lsqpl_qKu/main_session/Zf")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/api/sessions/lsqpl_qKu/main_session/Zf"));
    }
    
    
    @Test(timeout = 60000)
    public void test_15_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"settings\" ")
                .post(baseUrlOfSut + "/api/sessions/M9/settings/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/M9/settings/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_16_postOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" genomic_chart ")
                .post(baseUrlOfSut + "/api/sessions/f7D6xRDLIP26Im/genomic_chart")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/f7D6xRDLIP26Im/genomic_chart"));
    }
    
    
    @Test(timeout = 60000)
    public void test_17_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" \"comparison_session\" ")
                .post(baseUrlOfSut + "/api/sessions/cx/comparison_session/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/cx/comparison_session/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_18_postOnSessionReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type} -> Response status 400 not defined for path '/api/sessions/{source}/{type}'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" comparison_session ")
                .post(baseUrlOfSut + "/api/sessions/r_8kil/comparison_session")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/r_8kil/comparison_session"));
    }
    
    
    @Test(timeout = 60000)
    public void test_19_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" custom_data ")
                .post(baseUrlOfSut + "/api/sessions/flhhp/custom_data/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/flhhp/custom_data/query/fetch"));
    }
    
    
    @Test(timeout = 60000)
    public void test_20_postOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/api/sessions/{source}/{type}/query/fetch -> Response status 400 not defined for path '/api/sessions/{source}/{type}/query/fetch'.
        given().accept("*/*")
                .contentType("application/json")
                .body(" custom_gene_list ")
                .post(baseUrlOfSut + "/api/sessions/lBhjDUc3wsjM/custom_gene_list/query/fetch")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'path'", containsString("/api/sessions/lBhjDUc3wsjM/custom_gene_list/query/fetch"));
    }


}
