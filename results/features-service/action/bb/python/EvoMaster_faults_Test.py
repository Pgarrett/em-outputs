#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2024-10-06T12:45:48.185-03:00[America/Argentina/Buenos_Aires]
#  
#  The generated test suite contains 13 tests
#  
#  Covered targets: 39
#  
#  Used time: 0h 10m 59s
#  
#  Needed budget for current results: 96%
#  
#  This file contains test cases that are likely to indicate faults.
class EvoMaster_faults_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:8080"
    
    
    
    
    
    
    
    
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/products/{productName}/features
    # 			Action parameters:
    # 				productName: 'GHzPJfx'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:GHzPJfx
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/products/{productName}/features
    @timeout_decorator.timeout(60)
    def test_0_GET_on_features_causes500_internalServerError(self):
        
        # Fault100. HTTP Status 500. GET:/products/{productName}/features
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/products/GHzPJfx/features",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "text/html" in res_0.headers["content-type"]
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/features/{featureName}
    # 			Action parameters:
    # 				productName: 'pnYz4cM'
    # 				featureName: 'x5L6Ub5D'
    # 				body: '{}'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:pnYz4cM
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = featureName:x5L6Ub5D
    # 				org.evomaster.core.search.gene.optional.OptionalGene = body:{}
    # 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/x-www-form-urlencoded
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/features/{featureName}
    @timeout_decorator.timeout(60)
    def test_1_POST_on_featur_causes500_internalServerError(self):
        
        # Fault100. HTTP Status 500. POST:/products/{productName}/features/{featureName}
        headers = {}
        headers["content-type"] = "application/x-www-form-urlencoded"
        body = ""
        headers['Accept'] = "*/*"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/products/pnYz4cM/features/x5L6Ub5D",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "text/html" in res_0.headers["content-type"]
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: PUT:/products/{productName}/features/{featureName}
    # 			Action parameters:
    # 				productName: 'hdqVugdSpSDf'
    # 				featureName: 'yqB'
    # 				body: '{}'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:hdqVugdSpSDf
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = featureName:yqB
    # 				org.evomaster.core.search.gene.optional.OptionalGene = body:{}
    # 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/x-www-form-urlencoded
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: PUT:/products/{productName}/features/{featureName}
    @timeout_decorator.timeout(60)
    def test_2_PUT_on_featur_causes500_internalServerError(self):
        
        # Fault100. HTTP Status 500. PUT:/products/{productName}/features/{featureName}
        headers = {}
        headers["content-type"] = "application/x-www-form-urlencoded"
        body = ""
        headers['Accept'] = "*/*"
        res_0 = requests \
                .put(self.baseUrlOfSut + "/products/hdqVugdSpSDf/features/yqB",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "text/html" in res_0.headers["content-type"]
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/products/{productName}/configurations/{configurationName}/features
    # 			Action parameters:
    # 				productName: '25q7M05BfpCd5'
    # 				configurationName: 'ewRMb1aqji6tRp'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:25q7M05BfpCd5
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = configurationName:ewRMb1aqji6tRp
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/products/{productName}/configurations/{configurationName}/features
    @timeout_decorator.timeout(60)
    def test_3_GET_on_features_causes500_internalServerError(self):
        
        # Fault100. HTTP Status 500. GET:/products/{productName}/configurations/{configurationName}/features
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/products/25q7M05BfpCd5/configurations/ewRMb1aqji6tRp/features",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "text/html" in res_0.headers["content-type"]
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/configurations/{configurationName}
    # 			Action parameters:
    # 				productName: 'bn2kUpy'
    # 				configurationName: 'A5XznKk'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:bn2kUpy
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = configurationName:A5XznKk
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/configurations/{configurationName}
    @timeout_decorator.timeout(60)
    def test_4_POST_on_configur_causes500_internalServerError(self):
        
        # Fault100. HTTP Status 500. POST:/products/{productName}/configurations/{configurationName}
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/products/bn2kUpy/configurations/A5XznKk",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "text/html" in res_0.headers["content-type"]
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/constraints/requires
    # 			Action parameters:
    # 				productName: 'Cj8w1dfa6n'
    # 				body: ''
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:Cj8w1dfa6n
    # 				org.evomaster.core.search.gene.optional.OptionalGene = body:
    # 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/x-www-form-urlencoded
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/constraints/requires
    @timeout_decorator.timeout(60)
    def test_5_POST_on_requires_causes500_internalServerError(self):
        
        # Fault100. HTTP Status 500. POST:/products/{productName}/constraints/requires
        headers = {}
        headers["content-type"] = "application/x-www-form-urlencoded"
        body = ""
        headers['Accept'] = "*/*"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/products/Cj8w1dfa6n/constraints/requires",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "text/html" in res_0.headers["content-type"]
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}/configurations/{configurationName}/features/{featureName}
    # 			Action parameters:
    # 				productName: '0'
    # 				configurationName: 'NPkZPJA6abNXIT'
    # 				featureName: 'rclI'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:0
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = configurationName:NPkZPJA6abNXIT
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = featureName:rclI
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}/configurations/{configurationName}/features/{featureName}
    @timeout_decorator.timeout(60)
    def test_6_DELETE_on_featur_causes500_internalServerError(self):
        
        # Fault100. HTTP Status 500. DELETE:/products/{productName}/configurations/{configurationName}/features/{featureName}
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .delete(self.baseUrlOfSut + "/products/0/configurations/NPkZPJA6abNXIT/features/rclI",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "text/html" in res_0.headers["content-type"]
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/configurations/{configurationName}/features/{featureName}
    # 			Action parameters:
    # 				productName: 'FMuhP8lG'
    # 				configurationName: 'haE7BLvgns17'
    # 				featureName: 'TjAfG62ReabvMD'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:FMuhP8lG
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = configurationName:haE7BLvgns17
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = featureName:TjAfG62ReabvMD
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/configurations/{configurationName}/features/{featureName}
    @timeout_decorator.timeout(60)
    def test_7_POST_on_featur_causes500_internalServerError(self):
        
        # Fault100. HTTP Status 500. POST:/products/{productName}/configurations/{configurationName}/features/{featureName}
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/products/FMuhP8lG/configurations/haE7BLvgns17/features/TjAfG62ReabvMD",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "text/html" in res_0.headers["content-type"]
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/products/{productName}
    # 			Action parameters:
    # 				productName: 'mMk5JslN4'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:mMk5JslN4
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/products/{productName}
    @timeout_decorator.timeout(60)
    def test_8_GET_on_product_causes500_internalServerError(self):
        
        # Fault100. HTTP Status 500. GET:/products/{productName}
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/products/mMk5JslN4",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "text/html" in res_0.headers["content-type"]
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}/configurations/{configurationName}
    # 			Action parameters:
    # 				productName: 'J5BL662343rf7'
    # 				configurationName: 'mVQ1'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:J5BL662343rf7
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = configurationName:mVQ1
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}/configurations/{configurationName}
    @timeout_decorator.timeout(60)
    def test_9_DELETE_on_configur_causes500_internalServerError(self):
        
        # Fault100. HTTP Status 500. DELETE:/products/{productName}/configurations/{configurationName}
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .delete(self.baseUrlOfSut + "/products/J5BL662343rf7/configurations/mVQ1",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "text/html" in res_0.headers["content-type"]
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}
    # 			Action parameters:
    # 				productName: 'Pnj5HObPdZK'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:Pnj5HObPdZK
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}
    @timeout_decorator.timeout(60)
    def test_10_DELETE_on_product_causes500_internalServerError(self):
        
        # Fault100. HTTP Status 500. DELETE:/products/{productName}
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .delete(self.baseUrlOfSut + "/products/Pnj5HObPdZK",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "text/html" in res_0.headers["content-type"]
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/constraints/excludes
    # 			Action parameters:
    # 				productName: 'on7d'
    # 				body: '{"sourceFeature":"x"}'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:on7d
    # 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"sourceFeature":"x"}
    # 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/x-www-form-urlencoded
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/constraints/excludes
    @timeout_decorator.timeout(60)
    def test_11_POST_on_excludes_causes500_internalServerError(self):
        
        # Fault100. HTTP Status 500. POST:/products/{productName}/constraints/excludes
        headers = {}
        headers["content-type"] = "application/x-www-form-urlencoded"
        body = "sourceFeature=x"
        headers['Accept'] = "*/*"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/products/on7d/constraints/excludes",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "text/html" in res_0.headers["content-type"]
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}/features/{featureName}
    # 			Action parameters:
    # 				productName: 'hcl3UCaTqcSnw3'
    # 				featureName: 'Zc0u0'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:hcl3UCaTqcSnw3
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = featureName:Zc0u0
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}/features/{featureName}
    @timeout_decorator.timeout(60)
    def test_12_DELETE_on_featur_causes500_internalServerError(self):
        
        # Fault100. HTTP Status 500. DELETE:/products/{productName}/features/{featureName}
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .delete(self.baseUrlOfSut + "/products/hcl3UCaTqcSnw3/features/Zc0u0",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "text/html" in res_0.headers["content-type"]


if __name__ == '__main__':
    unittest.main()
