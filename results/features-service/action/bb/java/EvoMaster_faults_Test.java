import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-06T20:45:48.477-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 13 tests
 * <br>
*  Covered targets: 56
 * <br>
*  Used time: 0h 11m 9s
 * <br>
*  Needed budget for current results: 79%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_deleteOnProductFeaturCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/products/{productName}/features/{featureName}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/products/lZaj/features/a3in0IX1mKOG")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_1_getOnProductFeaturesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/products/{productName}/features
        given().accept("*/*")
                .get(baseUrlOfSut + "/products/04/features")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_2_deleteOnConfigurFeaturCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/products/{productName}/configurations/{configurationName}/features/{featureName}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/products/cSMQ/configurations/mRWXes/features/tfA59uWGitCbR")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_3_postOnConfigurFeaturCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/products/{productName}/configurations/{configurationName}/features/{featureName}
        given().accept("*/*")
                .post(baseUrlOfSut + "/products/ULI/configurations/lWJ/features/QOYZAgZRPdlB")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_4_getOnConfigurFeaturesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/products/{productName}/configurations/{configurationName}/features
        given().accept("*/*")
                .get(baseUrlOfSut + "/products/imI7dU9Om3g00e/configurations/W8lurqzQ73p/features")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_5_postOnConfigurCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/products/{productName}/configurations/{configurationName}
        given().accept("*/*")
                .post(baseUrlOfSut + "/products/cSIZ/configurations/n2KeBlTor0ITxX0g")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_6_deleteOnConfigurCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/products/{productName}/configurations/{configurationName}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/products/gx/configurations/deALhTJH6h")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_7_deleteOnProductCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/products/{productName}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/products/HU")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_8_getOnProductCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/products/{productName}
        given().accept("*/*")
                .get(baseUrlOfSut + "/products/Tilz")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_9_postOnRequiresCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/products/{productName}/constraints/requires
        given().accept("*/*")
                .contentType("application/x-www-form-urlencoded")
                .body("")
                .post(baseUrlOfSut + "/products/iNzKFyhh87u0Q/constraints/requires")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_10_postOnExcludesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/products/{productName}/constraints/excludes
        given().accept("*/*")
                .contentType("application/x-www-form-urlencoded")
                .body("excludedFeature=")
                .post(baseUrlOfSut + "/products/3qfER2AaxQV/constraints/excludes")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_11_postOnProductFeaturCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/products/{productName}/features/{featureName}
        given().accept("*/*")
                .contentType("application/x-www-form-urlencoded")
                .body("")
                .post(baseUrlOfSut + "/products/zEUSNFXHKJr4/features/VHE")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_12_putOnFeaturCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. PUT:/products/{productName}/features/{featureName}
        given().accept("*/*")
                .contentType("application/x-www-form-urlencoded")
                .body("")
                .put(baseUrlOfSut + "/products/6b63gomUDyTCD/features/dsKDonCDCqEG")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }


}
