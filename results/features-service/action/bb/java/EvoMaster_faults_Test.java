import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-02T23:57:41.191-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 13 tests
 * <br>
*  Covered targets: 56
 * <br>
*  Used time: 0h 16m 11s
 * <br>
*  Needed budget for current results: 39%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_deleteOnProductCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/products/{productName}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/products/009hS9")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_1_getOnConfigurFeaturesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/products/{productName}/configurations/{configurationName}/features
        given().accept("*/*")
                .get(baseUrlOfSut + "/products/v/configurations/uo_RM/features")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_2_getOnProductCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/products/{productName}
        given().accept("*/*")
                .get(baseUrlOfSut + "/products/_")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_3_deleteOnProductFeaturCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/products/{productName}/features/{featureName}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/products/y0Xr8Utv6/features/iRFUGh37uLn")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_4_getOnProductFeaturesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/products/{productName}/features
        given().accept("*/*")
                .get(baseUrlOfSut + "/products/lzMpz_3NuZz/features")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_5_postOnConfigurCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/products/{productName}/configurations/{configurationName}
        given().accept("*/*")
                .post(baseUrlOfSut + "/products/iI37xjqzP9KXMJ/configurations/JB")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_6_deleteOnConfigurFeaturCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/products/{productName}/configurations/{configurationName}/features/{featureName}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/products/M_8rYTKc4DH8g/configurations/U/features/Qj8ch7bkHgPk5")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_7_postOnConfigurFeaturCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/products/{productName}/configurations/{configurationName}/features/{featureName}
        given().accept("*/*")
                .post(baseUrlOfSut + "/products/4mEWv1vn24/configurations/PFVoT/features/FBl1t8wn")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_8_deleteOnConfigurCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/products/{productName}/configurations/{configurationName}
        given().accept("*/*")
                .delete(baseUrlOfSut + "/products/iFJrkLd22p3CGV/configurations/fHMB")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_9_postOnExcludesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/products/{productName}/constraints/excludes
        given().accept("*/*")
                .contentType("application/x-www-form-urlencoded")
                .body("")
                .post(baseUrlOfSut + "/products/Wf/constraints/excludes")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_10_postOnRequiresCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/products/{productName}/constraints/requires
        given().accept("*/*")
                .contentType("application/x-www-form-urlencoded")
                .body("")
                .post(baseUrlOfSut + "/products/wkFullSf/constraints/requires")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_11_postOnProductFeaturCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/products/{productName}/features/{featureName}
        given().accept("*/*")
                .contentType("application/x-www-form-urlencoded")
                .body("")
                .post(baseUrlOfSut + "/products/zwgMlk/features/Z5wOGMSNDdbfN3")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }
    
    
    @Test(timeout = 60000)
    public void test_12_putOnFeaturCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. PUT:/products/{productName}/features/{featureName}
        given().accept("*/*")
                .contentType("application/x-www-form-urlencoded")
                .body("")
                .put(baseUrlOfSut + "/products/oQjwXQ6iY/features/yhykrCfoZAwuf")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("text/html");
    }


}
