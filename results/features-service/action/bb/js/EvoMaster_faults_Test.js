const superagent = require("superagent");
const EM = require("./EMTestUtils.js");
jest.setTimeout(60000);




/**
*  This file was automatically generated by EvoMaster on 2024-10-06T12:56:49.594-03:00[America/Argentina/Buenos_Aires]
*  
*  The generated test suite contains 13 tests
*  
*  Covered targets: 39
*  
*  Used time: 0h 10m 59s
*  
*  Needed budget for current results: 98%
*  
*  This file contains test cases that are likely to indicate faults.
*/

const baseUrlOfSut = "http://localhost:8080";


beforeAll( async () => {
});








// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/configurations/{configurationName}/features/{featureName}
// 			Action parameters:
// 				productName: '3m5iwJ'
// 				configurationName: 'YxGX_30q'
// 				featureName: 'HoQdodyoxt5KX2'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:3m5iwJ
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = configurationName:YxGX_30q
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = featureName:HoQdodyoxt5KX2
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/configurations/{configurationName}/features/{featureName}
test("test_0_PostOnFeaturCauses500_internalservererror", async () => {
    
    // Fault100. HTTP Status 500. POST:/products/{productName}/configurations/{configurationName}/features/{featureName}
    const res_0 = await superagent
            .post(baseUrlOfSut + "/products/3m5iwJ/configurations/YxGX_30q/features/HoQdodyoxt5KX2").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(500);
    expect(res_0.header["content-type"].startsWith("text/html")).toBe(true);
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/products/{productName}
// 			Action parameters:
// 				productName: 'v'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:v
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/products/{productName}
test("test_1_GetOnProductCauses500_internalservererror", async () => {
    
    // Fault100. HTTP Status 500. GET:/products/{productName}
    const res_0 = await superagent
            .get(baseUrlOfSut + "/products/v").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(500);
    expect(res_0.header["content-type"].startsWith("text/html")).toBe(true);
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/features/{featureName}
// 			Action parameters:
// 				productName: 'IbGO5TmY_gT8'
// 				featureName: 'vr'
// 				body: ''
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:IbGO5TmY_gT8
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = featureName:vr
// 				org.evomaster.core.search.gene.optional.OptionalGene = body:
// 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/x-www-form-urlencoded
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/features/{featureName}
test("test_2_PostOnFeaturCauses500_internalservererror", async () => {
    
    // Fault100. HTTP Status 500. POST:/products/{productName}/features/{featureName}
    const res_0 = await superagent
            .post(baseUrlOfSut + "/products/IbGO5TmY_gT8/features/vr").set('Accept', "*/*")
            .set('Content-Type','application/x-www-form-urlencoded')
            .send("")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(500);
    expect(res_0.header["content-type"].startsWith("text/html")).toBe(true);
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}/features/{featureName}
// 			Action parameters:
// 				productName: 'Y'
// 				featureName: 'b3F8xKCW'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:Y
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = featureName:b3F8xKCW
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}/features/{featureName}
test("test_3_DeleteOnFeaturCauses500_internalservererror", async () => {
    
    // Fault100. HTTP Status 500. DELETE:/products/{productName}/features/{featureName}
    const res_0 = await superagent
            .delete(baseUrlOfSut + "/products/Y/features/b3F8xKCW").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(500);
    expect(res_0.header["content-type"].startsWith("text/html")).toBe(true);
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}/configurations/{configurationName}/features/{featureName}
// 			Action parameters:
// 				productName: 'p_rwrgNV'
// 				configurationName: 'HMsS2FTID'
// 				featureName: 'ztOINsqhDRLw5'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:p_rwrgNV
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = configurationName:HMsS2FTID
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = featureName:ztOINsqhDRLw5
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}/configurations/{configurationName}/features/{featureName}
test("test_4_DeleteOnFeaturCauses500_internalservererror", async () => {
    
    // Fault100. HTTP Status 500. DELETE:/products/{productName}/configurations/{configurationName}/features/{featureName}
    const res_0 = await superagent
            .delete(baseUrlOfSut + "/products/p_rwrgNV/configurations/HMsS2FTID/features/ztOINsqhDRLw5").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(500);
    expect(res_0.header["content-type"].startsWith("text/html")).toBe(true);
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}
// 			Action parameters:
// 				productName: 'vvX_wlyy'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:vvX_wlyy
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}
test("test_5_DeleteOnProductCauses500_internalservererror", async () => {
    
    // Fault100. HTTP Status 500. DELETE:/products/{productName}
    const res_0 = await superagent
            .delete(baseUrlOfSut + "/products/vvX_wlyy").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(500);
    expect(res_0.header["content-type"].startsWith("text/html")).toBe(true);
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/products/{productName}/configurations/{configurationName}/features
// 			Action parameters:
// 				productName: 'UYHBt_OLTPx'
// 				configurationName: 'SzK'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:UYHBt_OLTPx
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = configurationName:SzK
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/products/{productName}/configurations/{configurationName}/features
test("test_6_GetOnFeaturesCauses500_internalservererror", async () => {
    
    // Fault100. HTTP Status 500. GET:/products/{productName}/configurations/{configurationName}/features
    const res_0 = await superagent
            .get(baseUrlOfSut + "/products/UYHBt_OLTPx/configurations/SzK/features").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(500);
    expect(res_0.header["content-type"].startsWith("text/html")).toBe(true);
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/constraints/requires
// 			Action parameters:
// 				productName: 'fQkAa7abF2S'
// 				body: '{}'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:fQkAa7abF2S
// 				org.evomaster.core.search.gene.optional.OptionalGene = body:{}
// 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/x-www-form-urlencoded
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/constraints/requires
test("test_7_PostOnRequiresCauses500_internalservererror", async () => {
    
    // Fault100. HTTP Status 500. POST:/products/{productName}/constraints/requires
    const res_0 = await superagent
            .post(baseUrlOfSut + "/products/fQkAa7abF2S/constraints/requires").set('Accept', "*/*")
            .set('Content-Type','application/x-www-form-urlencoded')
            .send("")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(500);
    expect(res_0.header["content-type"].startsWith("text/html")).toBe(true);
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}/configurations/{configurationName}
// 			Action parameters:
// 				productName: 'Mr_LZ'
// 				configurationName: '9vEBQ5NP'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:Mr_LZ
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = configurationName:9vEBQ5NP
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/products/{productName}/configurations/{configurationName}
test("test_8_DeleteOnConfigurCauses500_internalservererror", async () => {
    
    // Fault100. HTTP Status 500. DELETE:/products/{productName}/configurations/{configurationName}
    const res_0 = await superagent
            .delete(baseUrlOfSut + "/products/Mr_LZ/configurations/9vEBQ5NP").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(500);
    expect(res_0.header["content-type"].startsWith("text/html")).toBe(true);
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/products/{productName}/features
// 			Action parameters:
// 				productName: 'Itk6o2htyu'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:Itk6o2htyu
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/products/{productName}/features
test("test_9_GetOnFeaturesCauses500_internalservererror", async () => {
    
    // Fault100. HTTP Status 500. GET:/products/{productName}/features
    const res_0 = await superagent
            .get(baseUrlOfSut + "/products/Itk6o2htyu/features").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(500);
    expect(res_0.header["content-type"].startsWith("text/html")).toBe(true);
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/constraints/excludes
// 			Action parameters:
// 				productName: '9P2Gn'
// 				body: ''
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:9P2Gn
// 				org.evomaster.core.search.gene.optional.OptionalGene = body:
// 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/x-www-form-urlencoded
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/constraints/excludes
test("test_10_PostOnExcludesCauses500_internalservererror", async () => {
    
    // Fault100. HTTP Status 500. POST:/products/{productName}/constraints/excludes
    const res_0 = await superagent
            .post(baseUrlOfSut + "/products/9P2Gn/constraints/excludes").set('Accept', "*/*")
            .set('Content-Type','application/x-www-form-urlencoded')
            .send("")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(500);
    expect(res_0.header["content-type"].startsWith("text/html")).toBe(true);
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: PUT:/products/{productName}/features/{featureName}
// 			Action parameters:
// 				productName: 'p'
// 				featureName: 'a18pBtpg_1cfB'
// 				body: ''
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:p
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = featureName:a18pBtpg_1cfB
// 				org.evomaster.core.search.gene.optional.OptionalGene = body:
// 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/x-www-form-urlencoded
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: PUT:/products/{productName}/features/{featureName}
test("test_11_PutOnFeaturCauses500_internalservererror", async () => {
    
    // Fault100. HTTP Status 500. PUT:/products/{productName}/features/{featureName}
    const res_0 = await superagent
            .put(baseUrlOfSut + "/products/p/features/a18pBtpg_1cfB").set('Accept', "*/*")
            .set('Content-Type','application/x-www-form-urlencoded')
            .send("")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(500);
    expect(res_0.header["content-type"].startsWith("text/html")).toBe(true);
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/configurations/{configurationName}
// 			Action parameters:
// 				productName: 'PByBAAO'
// 				configurationName: 'LrfBOf'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = productName:PByBAAO
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = configurationName:LrfBOf
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: POST:/products/{productName}/configurations/{configurationName}
test("test_12_PostOnConfigurCauses500_internalservererror", async () => {
    
    // Fault100. HTTP Status 500. POST:/products/{productName}/configurations/{configurationName}
    const res_0 = await superagent
            .post(baseUrlOfSut + "/products/PByBAAO/configurations/LrfBOf").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(500);
    expect(res_0.header["content-type"].startsWith("text/html")).toBe(true);
});
