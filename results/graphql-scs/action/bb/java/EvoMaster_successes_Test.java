import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-17T17:30:40.819-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 11 tests
 * <br>
*  Covered targets: 32
 * <br>
*  Used time: 0h 11m 23s
 * <br>
*  Needed budget for current results: 92%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080/graphql";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    // 			Action parameters:
    // 				name: 'WhCaLC'
    // 				val: ''
    // 				site: 'null'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = name:'WhCaLC'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = val:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = site:'null'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    @Test(timeout = 60000)
    public void test_0_qUERYOnCookieReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { cookie  (name : \\\"WhCaLC\\\",site : null)         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Internal Server Error(s) while executing query"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'.'cookie'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    // 			Action parameters:
    // 				sex: 'DWaa0YJVhI5'
    // 				title: 'v7qmLdN1Zdz'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = sex:'DWaa0YJVhI5'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = title:'v7qmLdN1Zdz'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    @Test(timeout = 60000)
    public void test_1_qUERYOnTitleReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { title  (sex : \\\"DWaa0YJVhI5\\\",title : \\\"v7qmLdN1Zdz\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'title'", containsString("-1"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    // 			Action parameters:
    // 				i: ''
    // 				s: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:''
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    @Test(timeout = 60000)
    public void test_2_qUERYOnCostfunsReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { costfuns  (s : \\\"\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'costfuns'", containsString("10"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    // 			Action parameters:
    // 				i: ''
    // 				s: 'MxfAC'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:'MxfAC'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    @Test(timeout = 60000)
    public void test_3_qUERYOnNotyPevarReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { notyPevar  (s : \\\"MxfAC\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'notyPevar'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    // 			Action parameters:
    // 				txt: 'hrGCWa_2l'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:'hrGCWa_2l'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    @Test(timeout = 60000)
    public void test_4_qUERYOnRegexReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { regex  (txt : \\\"hrGCWa_2l\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'regex'", containsString("none"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    // 			Action parameters:
    // 				dayname: 'hSOD7cpf8cls'
    // 				monthname: 'yQx9pGL5358lP'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = dayname:'hSOD7cpf8cls'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = monthname:'yQx9pGL5358lP'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    @Test(timeout = 60000)
    public void test_5_qUERYOnDateParseReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { dateParse  (dayname : \\\"hSOD7cpf8cls\\\",monthname : \\\"yQx9pGL5358lP\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'dateParse'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    // 			Action parameters:
    // 				op: 'gLknHhr'
    // 				arg1: ''
    // 				arg2: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = op:'gLknHhr'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg1:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg2:''
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    @Test(timeout = 60000)
    public void test_6_qUERYOnCalcReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { calc  (op : \\\"gLknHhr\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'calc'", containsString("0.0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    // 			Action parameters:
    // 				directory: 'q_ePeq'
    // 				file: 'rsL'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = directory:'q_ePeq'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = file:'rsL'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    @Test(timeout = 60000)
    public void test_7_qUERYOnFileSuffixReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { fileSuffix  (directory : \\\"q_ePeq\\\",file : \\\"rsL\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'fileSuffix'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    // 			Action parameters:
    // 				word1: '1_SKqe4GUEc'
    // 				word2: 'M2ZjlkGV'
    // 				word3: 'E'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word1:'1_SKqe4GUEc'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word2:'M2ZjlkGV'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word3:'E'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    @Test(timeout = 60000)
    public void test_8_qUERYOnText2TxtReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { text2Txt  (word1 : \\\"1_SKqe4GUEc\\\",word2 : \\\"M2ZjlkGV\\\",word3 : \\\"E\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'text2Txt'", containsString(""));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: 'A8Rc2L'
    // 				x: 'BnN'
    // 				z: 'wM7I9dDA453xyEg'
    // 				y: 'ELZHar'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:'A8Rc2L'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:'BnN'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:'wM7I9dDA453xyEg'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:'ELZHar'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_9_qUERYOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\"A8Rc2L\\\",x : \\\"BnN\\\",z : \\\"wM7I9dDA453xyEg\\\",y : \\\"ELZHar\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("unordered"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    // 			Action parameters:
    // 				txt: 'fvY0AfhI9c4bf'
    // 				pat: 'eaXqNIWovEm8'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:'fvY0AfhI9c4bf'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = pat:'eaXqNIWovEm8'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    @Test(timeout = 60000)
    public void test_10_qUERYOnPatReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { pat  (txt : \\\"fvY0AfhI9c4bf\\\",pat : \\\"eaXqNIWovEm8\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'pat'", containsString("0"));
    }


}
