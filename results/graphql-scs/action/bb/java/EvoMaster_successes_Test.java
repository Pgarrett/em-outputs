import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-06T18:08:23.961-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 11 tests
 * <br>
*  Covered targets: 32
 * <br>
*  Used time: 0h 12m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080/graphql";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    // 			Action parameters:
    // 				dayname: ''
    // 				monthname: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = dayname:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = monthname:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    @Test(timeout = 60000)
    public void test_0_queryOnDateparseReturnsError() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { dateParse           } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'message'", containsString("Internal Server Error(s) while executing query"))
                .body("'errors'[0].'locations'.size()", equalTo(0))
                .body("'data'.'dateParse'", nullValue());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    // 			Action parameters:
    // 				i: '457'
    // 				s: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:457
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    @Test(timeout = 60000)
    public void test_1_queryOnNotypevarReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { notyPevar  (i : 457,s : \\\"\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'notyPevar'", containsString("3"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    // 			Action parameters:
    // 				name: '6tQ_cdTmvlFFN'
    // 				val: 'Jtv2'
    // 				site: 'c0aYOv1SWI5M'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = name:6tQ_cdTmvlFFN
    // 				org.evomaster.core.search.gene.optional.OptionalGene = val:Jtv2
    // 				org.evomaster.core.search.gene.optional.OptionalGene = site:c0aYOv1SWI5M
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    @Test(timeout = 60000)
    public void test_2_queryOnCookieReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { cookie  (name : \\\"6tQ_cdTmvlFFN\\\",val : \\\"Jtv2\\\",site : \\\"c0aYOv1SWI5M\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'cookie'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    // 			Action parameters:
    // 				txt: '7Bg_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:7Bg_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    @Test(timeout = 60000)
    public void test_3_queryOnRegexReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { regex  (txt : \\\"7Bg_\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'regex'", containsString("none"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    // 			Action parameters:
    // 				word1: 'uKGFrzYRm_goc'
    // 				word2: 'YqCUvTC27OKRovN'
    // 				word3: 'LlUix'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word1:uKGFrzYRm_goc
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word2:YqCUvTC27OKRovN
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word3:LlUix
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    @Test(timeout = 60000)
    public void test_4_queryOnText2txtReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { text2Txt  (word1 : \\\"uKGFrzYRm_goc\\\",word2 : \\\"YqCUvTC27OKRovN\\\",word3 : \\\"LlUix\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'text2Txt'", containsString(""));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    // 			Action parameters:
    // 				txt: 'iVeSR2'
    // 				pat: 'neMb'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:iVeSR2
    // 				org.evomaster.core.search.gene.optional.OptionalGene = pat:neMb
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    @Test(timeout = 60000)
    public void test_5_queryOnPatReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { pat  (txt : \\\"iVeSR2\\\",pat : \\\"neMb\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'pat'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    // 			Action parameters:
    // 				i: ''
    // 				s: 'AkhbXORSm'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:AkhbXORSm
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    @Test(timeout = 60000)
    public void test_6_queryOnCostfunsReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { costfuns  (s : \\\"AkhbXORSm\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'costfuns'", containsString("10"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: 'V1fYMpz3'
    // 				x: 'h'
    // 				z: '4GHagWqHFoQwR'
    // 				y: 'AKe'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:V1fYMpz3
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:h
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:4GHagWqHFoQwR
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:AKe
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_7_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\"V1fYMpz3\\\",x : \\\"h\\\",z : \\\"4GHagWqHFoQwR\\\",y : \\\"AKe\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("unordered"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    // 			Action parameters:
    // 				directory: 'v1ch4sLxKAt'
    // 				file: 'MK_sHZT7N'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = directory:v1ch4sLxKAt
    // 				org.evomaster.core.search.gene.optional.OptionalGene = file:MK_sHZT7N
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    @Test(timeout = 60000)
    public void test_8_queryOnFilesuffixReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { fileSuffix  (directory : \\\"v1ch4sLxKAt\\\",file : \\\"MK_sHZT7N\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'fileSuffix'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    // 			Action parameters:
    // 				sex: ''
    // 				title: 'qk12ELj0HjcIu'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = sex:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = title:qk12ELj0HjcIu
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    @Test(timeout = 60000)
    public void test_9_queryOnTitleReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { title  (sex : \\\"\\\",title : \\\"qk12ELj0HjcIu\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'title'", containsString("-1"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    // 			Action parameters:
    // 				op: 'vzMGraLJG5LMMCy2'
    // 				arg1: ''
    // 				arg2: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = op:vzMGraLJG5LMMCy2
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg1:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg2:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    @Test(timeout = 60000)
    public void test_10_queryOnCalcReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { calc  (op : \\\"vzMGraLJG5LMMCy2\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'calc'", containsString("0.0"));
    }


}
