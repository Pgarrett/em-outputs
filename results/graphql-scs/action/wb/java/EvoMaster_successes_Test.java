import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-10T19:06:14.423-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 54 tests
 * <br>
*  Covered targets: 703
 * <br>
*  Used time: 0h 10m 3s
 * <br>
*  Needed budget for current results: 49%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.org.graphqlscs.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: 'Z'
    // 				x: '_EM_476_XYZ_'
    // 				z: '_EM_477_XYZ_'
    // 				y: 'LFoMhS'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:Z
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:_EM_476_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:_EM_477_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:LFoMhS
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_0_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\"Z\\\",x : \\\"_EM_476_XYZ_\\\",z : \\\"_EM_477_XYZ_\\\",y : \\\"LFoMhS\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("unordered"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: '_EM_267_XYZ_'
    // 				x: ''
    // 				z: '_EM_29676_XYZ_'
    // 				y: '_EM_268_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:_EM_267_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:_EM_29676_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:_EM_268_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_1_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\"_EM_267_XYZ_\\\",x : \\\"\\\",z : \\\"_EM_29676_XYZ_\\\",y : \\\"_EM_268_XYZ_\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("unordered"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    // 			Action parameters:
    // 				op: 'pi'
    // 				arg1: ''
    // 				arg2: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = op:pi
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg1:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg2:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    @Test(timeout = 60000)
    public void test_2_queryOnCalcReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { calc  (op : \\\"pi\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'calc'", containsString("3.141592653589793"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    // 			Action parameters:
    // 				txt: '_EM_484_XYZ_'
    // 				pat: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:_EM_484_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = pat:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    @Test(timeout = 60000)
    public void test_3_queryOnPatReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { pat  (txt : \\\"_EM_484_XYZ_\\\",pat : \\\"\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'pat'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: 'dhBZqs'
    // 				x: 'W'
    // 				z: '_EM_2353_XYZ_'
    // 				y: 'rMiVdr\tjqRWV'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:dhBZqs
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:W
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:_EM_2353_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:rMiVdr\tjqRWV
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_4_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\"dhBZqs\\\",x : \\\"W\\\",z : \\\"_EM_2353_XYZ_\\\",y : \\\"rMiVdr\\tjqRWV\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("unordered"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    // 			Action parameters:
    // 				op: 'E'
    // 				arg1: ''
    // 				arg2: '0.62932247'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = op:E
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg1:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg2:0.62932247
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    @Test(timeout = 60000)
    public void test_5_queryOnCalcReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { calc  (op : \\\"E\\\",arg2 : 0.62932247)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'calc'", containsString("2.718281828459045"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: 'dhBZqs'
    // 				x: '_EM_2833_XYZ_'
    // 				z: '_EM_2353_XYZ_'
    // 				y: 'vMaVhr>tjyKUN'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:dhBZqs
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:_EM_2833_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:_EM_2353_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:vMaVhr>tjyKUN
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_6_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\"dhBZqs\\\",x : \\\"_EM_2833_XYZ_\\\",z : \\\"_EM_2353_XYZ_\\\",y : \\\"vMaVhr\u003etjyKUN\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("unordered"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    // 			Action parameters:
    // 				directory: '_EM_2318_XYZ_'
    // 				file: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = directory:_EM_2318_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = file:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    @Test(timeout = 60000)
    public void test_7_queryOnFilesuffixReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { fileSuffix  (directory : \\\"_EM_2318_XYZ_\\\",file : \\\"\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'fileSuffix'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    // 			Action parameters:
    // 				i: ''
    // 				s: '4gwMLdgV80tt67'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:4gwMLdgV80tt67
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    @Test(timeout = 60000)
    public void test_8_queryOnNotypevarReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { notyPevar  (s : \\\"4gwMLdgV80tt67\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'notyPevar'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: 'UgCWqP'
    // 				x: '46kgsl'
    // 				z: '_EM_24469_XYZ_'
    // 				y: '4.kg'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:UgCWqP
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:46kgsl
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:_EM_24469_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:4.kg
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_9_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\"UgCWqP\\\",x : \\\"46kgsl\\\",z : \\\"_EM_24469_XYZ_\\\",y : \\\"4.kg\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("unordered"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    // 			Action parameters:
    // 				i: '28'
    // 				s: 'deMsUAO9'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:28
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:deMsUAO9
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    @Test(timeout = 60000)
    public void test_10_queryOnNotypevarReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { notyPevar  (i : 28,s : \\\"deMsUAO9\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'notyPevar'", containsString("3"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    // 			Action parameters:
    // 				i: '750'
    // 				s: 'tR'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:750
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:tR
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    @Test(timeout = 60000)
    public void test_11_queryOnNotypevarReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { notyPevar  (i : 750,s : \\\"tR\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'notyPevar'", containsString("3"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: 'dhBZqs'
    // 				x: '45kgcl'
    // 				z: '_EM_2353_XYZ_'
    // 				y: 'vMaVhrBtjyKUN'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:dhBZqs
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:45kgcl
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:_EM_2353_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:vMaVhrBtjyKUN
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_12_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\"dhBZqs\\\",x : \\\"45kgcl\\\",z : \\\"_EM_2353_XYZ_\\\",y : \\\"vMaVhrBtjyKUN\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("unordered"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: 'dgBZqP'
    // 				x: '46kgsl'
    // 				z: 'AJ'
    // 				y: '46kgsl'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:dgBZqP
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:46kgsl
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:AJ
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:46kgsl
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_13_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\"dgBZqP\\\",x : \\\"46kgsl\\\",z : \\\"AJ\\\",y : \\\"46kgsl\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("unordered"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    // 			Action parameters:
    // 				op: 'log'
    // 				arg1: ''
    // 				arg2: 'null'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = op:log
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg1:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg2:null
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    @Test(timeout = 60000)
    public void test_14_queryOnCalcReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { calc  (op : \\\"log\\\",arg2 : null)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'calc'", containsString("-Infinity"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: 'dgBZqP'
    // 				x: '46kgsl'
    // 				z: '_EM_24469_XYZ_'
    // 				y: '46kgs'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:dgBZqP
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:46kgsl
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:_EM_24469_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:46kgs
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_15_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\"dgBZqP\\\",x : \\\"46kgsl\\\",z : \\\"_EM_24469_XYZ_\\\",y : \\\"46kgs\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("unordered"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    // 			Action parameters:
    // 				sex: 'hcIURPb5UZTS1Pcl'
    // 				title: 'EZ1Mi7eT8NLJRsu'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = sex:hcIURPb5UZTS1Pcl
    // 				org.evomaster.core.search.gene.optional.OptionalGene = title:EZ1Mi7eT8NLJRsu
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    @Test(timeout = 60000)
    public void test_16_queryOnTitleReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { title  (sex : \\\"hcIURPb5UZTS1Pcl\\\",title : \\\"EZ1Mi7eT8NLJRsu\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'title'", containsString("-1"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    // 			Action parameters:
    // 				op: 'sine'
    // 				arg1: 'null'
    // 				arg2: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = op:sine
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg1:null
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg2:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    @Test(timeout = 60000)
    public void test_17_queryOnCalcReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { calc  (op : \\\"sine\\\",arg1 : null)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'calc'", containsString("0.0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    // 			Action parameters:
    // 				name: 'VZX1GVNvUyRB'
    // 				val: '8hG'
    // 				site: '_EM_17685_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = name:VZX1GVNvUyRB
    // 				org.evomaster.core.search.gene.optional.OptionalGene = val:8hG
    // 				org.evomaster.core.search.gene.optional.OptionalGene = site:_EM_17685_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    @Test(timeout = 60000)
    public void test_18_queryOnCookieReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { cookie  (name : \\\"VZX1GVNvUyRB\\\",val : \\\"8hG\\\",site : \\\"_EM_17685_XYZ_\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'cookie'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    // 			Action parameters:
    // 				name: 'userid'
    // 				val: 'am'
    // 				site: '_EM_21689_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = name:userid
    // 				org.evomaster.core.search.gene.optional.OptionalGene = val:am
    // 				org.evomaster.core.search.gene.optional.OptionalGene = site:_EM_21689_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    @Test(timeout = 60000)
    public void test_19_queryOnCookieReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { cookie  (name : \\\"userid\\\",val : \\\"am\\\",site : \\\"_EM_21689_XYZ_\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'cookie'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    // 			Action parameters:
    // 				sex: 'male'
    // 				title: 'eO'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = sex:male
    // 				org.evomaster.core.search.gene.optional.OptionalGene = title:eO
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    @Test(timeout = 60000)
    public void test_20_queryOnTitleReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { title  (sex : \\\"male\\\",title : \\\"eO\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'title'", containsString("-1"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: ',6kUtl'
    // 				x: 'QoBZqP'
    // 				z: 'aUUTDT'
    // 				y: 'QoBZqP'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:,6kUtl
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:QoBZqP
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:aUUTDT
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:QoBZqP
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_21_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\",6kUtl\\\",x : \\\"QoBZqP\\\",z : \\\"aUUTDT\\\",y : \\\"QoBZqP\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("unordered"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: ',6kUtl'
    // 				x: '46kUtl'
    // 				z: 'aUUTDT'
    // 				y: 'QoBZqP'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:,6kUtl
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:46kUtl
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:aUUTDT
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:QoBZqP
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_22_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\",6kUtl\\\",x : \\\"46kUtl\\\",z : \\\"aUUTDT\\\",y : \\\"QoBZqP\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("increasing"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    // 			Action parameters:
    // 				op: 'plus'
    // 				arg1: '0.99927056'
    // 				arg2: 'null'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = op:plus
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg1:0.99927056
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg2:null
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    @Test(timeout = 60000)
    public void test_23_queryOnCalcReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { calc  (op : \\\"plus\\\",arg1 : 0.99927056,arg2 : null)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'calc'", containsString("0.99927056"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    // 			Action parameters:
    // 				name: 'userid'
    // 				val: '_EM_8700_XYZ_'
    // 				site: 'b9QJoOX'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = name:userid
    // 				org.evomaster.core.search.gene.optional.OptionalGene = val:_EM_8700_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = site:b9QJoOX
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    @Test(timeout = 60000)
    public void test_24_queryOnCookieReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { cookie  (name : \\\"userid\\\",val : \\\"_EM_8700_XYZ_\\\",site : \\\"b9QJoOX\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'cookie'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    // 			Action parameters:
    // 				name: 'session'
    // 				val: '_EM_21686_XYZ_'
    // 				site: '_EM_21689_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = name:session
    // 				org.evomaster.core.search.gene.optional.OptionalGene = val:_EM_21686_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = site:_EM_21689_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    @Test(timeout = 60000)
    public void test_25_queryOnCookieReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { cookie  (name : \\\"session\\\",val : \\\"_EM_21686_XYZ_\\\",site : \\\"_EM_21689_XYZ_\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'cookie'", containsString("2"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: 'dgBZqP'
    // 				x: 'VSQgkU'
    // 				z: '8Ia0C'
    // 				y: 'UgFZqP'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:dgBZqP
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:VSQgkU
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:8Ia0C
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:UgFZqP
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_26_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\"dgBZqP\\\",x : \\\"VSQgkU\\\",z : \\\"8Ia0C\\\",y : \\\"UgFZqP\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("decreasing"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: 'dgJZq'
    // 				x: '46kUtl'
    // 				z: 'aUUTDT'
    // 				y: 'UoBZqP'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:dgJZq
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:46kUtl
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:aUUTDT
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:UoBZqP
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_27_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\"dgJZq\\\",x : \\\"46kUtl\\\",z : \\\"aUUTDT\\\",y : \\\"UoBZqP\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("unordered"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    // 			Action parameters:
    // 				name: 'session'
    // 				val: 'am'
    // 				site: '_EM_21689_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = name:session
    // 				org.evomaster.core.search.gene.optional.OptionalGene = val:am
    // 				org.evomaster.core.search.gene.optional.OptionalGene = site:_EM_21689_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    @Test(timeout = 60000)
    public void test_28_queryOnCookieReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { cookie  (name : \\\"session\\\",val : \\\"am\\\",site : \\\"_EM_21689_XYZ_\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'cookie'", containsString("2"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    // 			Action parameters:
    // 				directory: 'lib'
    // 				file: 'EXDOvFWMV8vc'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = directory:lib
    // 				org.evomaster.core.search.gene.optional.OptionalGene = file:EXDOvFWMV8vc
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    @Test(timeout = 60000)
    public void test_29_queryOnFilesuffixReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { fileSuffix  (directory : \\\"lib\\\",file : \\\"EXDOvFWMV8vc\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'fileSuffix'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    // 			Action parameters:
    // 				directory: 'text'
    // 				file: 'EXHOvFWMV8vc'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = directory:text
    // 				org.evomaster.core.search.gene.optional.OptionalGene = file:EXHOvFWMV8vc
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    @Test(timeout = 60000)
    public void test_30_queryOnFilesuffixReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { fileSuffix  (directory : \\\"text\\\",file : \\\"EXHOvFWMV8vc\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'fileSuffix'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    // 			Action parameters:
    // 				directory: 'word'
    // 				file: '_EM_10126_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = directory:word
    // 				org.evomaster.core.search.gene.optional.OptionalGene = file:_EM_10126_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    @Test(timeout = 60000)
    public void test_31_queryOnFilesuffixReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { fileSuffix  (directory : \\\"word\\\",file : \\\"_EM_10126_XYZ_\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'fileSuffix'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    // 			Action parameters:
    // 				directory: 'acrobat'
    // 				file: '_EM_10126_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = directory:acrobat
    // 				org.evomaster.core.search.gene.optional.OptionalGene = file:_EM_10126_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    @Test(timeout = 60000)
    public void test_32_queryOnFilesuffixReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { fileSuffix  (directory : \\\"acrobat\\\",file : \\\"_EM_10126_XYZ_\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'fileSuffix'", containsString("0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: 'dgBZUP'
    // 				x: 'VSQgkU'
    // 				z: '`MUUC'
    // 				y: 'MgUZqU'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:dgBZUP
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:VSQgkU
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:`MUUC
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:MgUZqU
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_33_queryOnOrdered4ReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { ordered4  (w : \\\"dgBZUP\\\",x : \\\"VSQgkU\\\",z : \\\"`MUUC\\\",y : \\\"MgUZqU\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'ordered4'", containsString("unordered"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    // 			Action parameters:
    // 				sex: 'female'
    // 				title: 'g9'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = sex:female
    // 				org.evomaster.core.search.gene.optional.OptionalGene = title:g9
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    @Test(timeout = 60000)
    public void test_34_queryOnTitleReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { title  (sex : \\\"female\\\",title : \\\"g9\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'title'", containsString("-1"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    // 			Action parameters:
    // 				i: '-4'
    // 				s: 'L6ByeGQGqzgbp0'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:-4
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:L6ByeGQGqzgbp0
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    @Test(timeout = 60000)
    public void test_35_queryOnCostfunsReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { costfuns  (i : -4,s : \\\"L6ByeGQGqzgbp0\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'costfuns'", containsString("10"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    // 			Action parameters:
    // 				op: 'OeK5i'
    // 				arg1: ''
    // 				arg2: 'null'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = op:OeK5i
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg1:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg2:null
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    @Test(timeout = 60000)
    public void test_36_queryOnCalcReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { calc  (op : \\\"OeK5i\\\",arg2 : null)         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'calc'", containsString("0.0"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    // 			Action parameters:
    // 				i: '5'
    // 				s: 'FL6ByeGQGqzgbp0'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:5
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:FL6ByeGQGqzgbp0
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    @Test(timeout = 60000)
    public void test_37_queryOnCostfunsReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { costfuns  (i : 5,s : \\\"FL6ByeGQGqzgbp0\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'costfuns'", containsString("10"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    // 			Action parameters:
    // 				i: '-3549'
    // 				s: '_EM_4249_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:-3549
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:_EM_4249_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    @Test(timeout = 60000)
    public void test_38_queryOnCostfunsReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { costfuns  (i : -3549,s : \\\"_EM_4249_XYZ_\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'costfuns'", containsString("10"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    // 			Action parameters:
    // 				i: '935'
    // 				s: '1S'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:935
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:1S
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    @Test(timeout = 60000)
    public void test_39_queryOnCostfunsReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { costfuns  (i : 935,s : \\\"1S\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'costfuns'", containsString("10"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    // 			Action parameters:
    // 				i: ''
    // 				s: 'baab'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:baab
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    @Test(timeout = 60000)
    public void test_40_queryOnCostfunsReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { costfuns  (s : \\\"baab\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'costfuns'", containsString("10"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    // 			Action parameters:
    // 				word1: 'for'
    // 				word2: 'OAYN_Tu_JgU5x'
    // 				word3: '_EM_16597_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word1:for
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word2:OAYN_Tu_JgU5x
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word3:_EM_16597_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    @Test(timeout = 60000)
    public void test_41_queryOnText2txtReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { text2Txt  (word1 : \\\"for\\\",word2 : \\\"OAYN_Tu_JgU5x\\\",word3 : \\\"_EM_16597_XYZ_\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'text2Txt'", containsString("4"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    // 			Action parameters:
    // 				word1: 'two'
    // 				word2: 'OAYN_Tu_JiU5x0'
    // 				word3: '_EM_16597_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word1:two
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word2:OAYN_Tu_JiU5x0
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word3:_EM_16597_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    @Test(timeout = 60000)
    public void test_42_queryOnText2txtReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { text2Txt  (word1 : \\\"two\\\",word2 : \\\"OAYN_Tu_JiU5x0\\\",word3 : \\\"_EM_16597_XYZ_\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'text2Txt'", containsString("2"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    // 			Action parameters:
    // 				word1: 'by'
    // 				word2: '5fVOexc3cLqSQSw'
    // 				word3: 'D_AAqYP'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word1:by
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word2:5fVOexc3cLqSQSw
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word3:D_AAqYP
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    @Test(timeout = 60000)
    public void test_43_queryOnText2txtReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { text2Txt  (word1 : \\\"by\\\",word2 : \\\"5fVOexc3cLqSQSw\\\",word3 : \\\"D_AAqYP\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'text2Txt'", containsString(""));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    // 			Action parameters:
    // 				txt: 'ftp//:h/mf'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:ftp//:h/mf
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    @Test(timeout = 60000)
    public void test_44_queryOnRegexReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { regex  (txt : \\\"ftp//:h/mf\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'regex'", containsString("url"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    // 			Action parameters:
    // 				txt: 'fri10apr'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:fri10apr
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    @Test(timeout = 60000)
    public void test_45_queryOnRegexReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { regex  (txt : \\\"fri10apr\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'regex'", containsString("date"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    // 			Action parameters:
    // 				txt: '1.4e-77'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:1.4e-77
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    @Test(timeout = 60000)
    public void test_46_queryOnRegexReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { regex  (txt : \\\"1.4e-77\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'regex'", containsString("fpe"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    // 			Action parameters:
    // 				txt: 'GJzh'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:GJzh
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    @Test(timeout = 60000)
    public void test_47_queryOnRegexReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { regex  (txt : \\\"GJzh\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'regex'", containsString("none"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    // 			Action parameters:
    // 				dayname: 'sat'
    // 				monthname: '-'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = dayname:sat
    // 				org.evomaster.core.search.gene.optional.OptionalGene = monthname:-
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    @Test(timeout = 60000)
    public void test_48_queryOnDateparseReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { dateParse  (dayname : \\\"sat\\\",monthname : \\\"-\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'dateParse'", containsString("1"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    // 			Action parameters:
    // 				txt: '_EM_3523_XYZ_DinZdPnpfBl'
    // 				pat: '_EM_3523_XYZ'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:_EM_3523_XYZ_DinZdPnpfBl
    // 				org.evomaster.core.search.gene.optional.OptionalGene = pat:_EM_3523_XYZ
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    @Test(timeout = 60000)
    public void test_49_queryOnPatReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { pat  (txt : \\\"_EM_3523_XYZ_DinZdPnpfBl\\\",pat : \\\"_EM_3523_XYZ\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'pat'", containsString("1"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    // 			Action parameters:
    // 				dayname: 'ISD_p1l'
    // 				monthname: 'sep'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = dayname:ISD_p1l
    // 				org.evomaster.core.search.gene.optional.OptionalGene = monthname:sep
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    @Test(timeout = 60000)
    public void test_50_queryOnDateparseReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { dateParse  (dayname : \\\"ISD_p1l\\\",monthname : \\\"sep\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'dateParse'", containsString("9"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    // 			Action parameters:
    // 				dayname: 'S2RJgAArmiiI5Q'
    // 				monthname: 'jun'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = dayname:S2RJgAArmiiI5Q
    // 				org.evomaster.core.search.gene.optional.OptionalGene = monthname:jun
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    @Test(timeout = 60000)
    public void test_51_queryOnDateparseReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { dateParse  (dayname : \\\"S2RJgAArmiiI5Q\\\",monthname : \\\"jun\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'dateParse'", containsString("6"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    // 			Action parameters:
    // 				dayname: 'S2RJgAArmiiI5Q'
    // 				monthname: 'mar'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = dayname:S2RJgAArmiiI5Q
    // 				org.evomaster.core.search.gene.optional.OptionalGene = monthname:mar
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    @Test(timeout = 60000)
    public void test_52_queryOnDateparseReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { dateParse  (dayname : \\\"S2RJgAArmiiI5Q\\\",monthname : \\\"mar\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'dateParse'", containsString("3"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    // 			Action parameters:
    // 				txt: '_EM_3523_XYZZDinZdPUpUDn'
    // 				pat: '_EM_3523_XYZ'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:_EM_3523_XYZZDinZdPUpUDn
    // 				org.evomaster.core.search.gene.optional.OptionalGene = pat:_EM_3523_XYZ
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    @Test(timeout = 60000)
    public void test_53_queryOnPatReturnsData() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { pat  (txt : \\\"_EM_3523_XYZZDinZdPUpUDn\\\",pat : \\\"_EM_3523_XYZ\\\")         } \" " + 
                    " } ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'pat'", containsString("1"));
    }


}
