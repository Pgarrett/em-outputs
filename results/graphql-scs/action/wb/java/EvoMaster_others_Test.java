import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-10T19:06:14.448-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 11 tests
 * <br>
*  Covered targets: 33
 * <br>
*  Used time: 0h 10m 3s
 * <br>
*  Needed budget for current results: 49%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_others_Test {

    
    private static final SutHandler controller = new em.embedded.org.graphqlscs.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    // 			Action parameters:
    // 				i: '198'
    // 				s: 'NlgQ\E['
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:198
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:NlgQ\E[
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    @Test(timeout = 60000)
    public void test_0_queryOnNotypevarReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { notyPevar  (i : 198,s : \\\"NlgQ\\E[\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: 'dhBZqs'
    // 				x: '45kgc\'
    // 				z: 'NvPHoiOPT_'
    // 				y: 'vMaVhrBtjyKUN'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:dhBZqs
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:45kgc\
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:NvPHoiOPT_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:vMaVhrBtjyKUN
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_1_queryOnOrdered4ReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { ordered4  (w : \\\"dhBZqs\\\",x : \\\"45kgc\\\\\",z : \\\"NvPHoiOPT_\\\",y : \\\"vMaVhrBtjyKUN\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    // 			Action parameters:
    // 				op: 'gVJ\'
    // 				arg1: '0.4278174'
    // 				arg2: '-1679.7798'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = op:gVJ\
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg1:0.4278174
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg2:-1679.7798
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    @Test(timeout = 60000)
    public void test_2_queryOnCalcReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { calc  (op : \\\"gVJ\\\\\",arg1 : 0.4278174,arg2 : -1679.7798)         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    // 			Action parameters:
    // 				txt: 'dq\2OMdANoc'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:dq\2OMdANoc
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    @Test(timeout = 60000)
    public void test_3_queryOnRegexReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { regex  (txt : \\\"dq\\2OMdANoc\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    // 			Action parameters:
    // 				word1: '6VPBMSNOLm'
    // 				word2: 'hcJ'
    // 				word3: 'kakJ\mwRrsp7aNO'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word1:6VPBMSNOLm
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word2:hcJ
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word3:kakJ\mwRrsp7aNO
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    @Test(timeout = 60000)
    public void test_4_queryOnText2txtReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { text2Txt  (word1 : \\\"6VPBMSNOLm\\\",word2 : \\\"hcJ\\\",word3 : \\\"kakJ\\mwRrsp7aNO\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    // 			Action parameters:
    // 				txt: 'ORrp'
    // 				pat: '\29'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:ORrp
    // 				org.evomaster.core.search.gene.optional.OptionalGene = pat:\29
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    @Test(timeout = 60000)
    public void test_5_queryOnPatReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { pat  (txt : \\\"ORrp\\\",pat : \\\"\\29\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    // 			Action parameters:
    // 				dayname: 'q\Rguw0PaFgLZY'
    // 				monthname: 'CgYaxD8gkX0p1tC'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = dayname:q\Rguw0PaFgLZY
    // 				org.evomaster.core.search.gene.optional.OptionalGene = monthname:CgYaxD8gkX0p1tC
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    @Test(timeout = 60000)
    public void test_6_queryOnDateparseReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { dateParse  (dayname : \\\"q\\Rguw0PaFgLZY\\\",monthname : \\\"CgYaxD8gkX0p1tC\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    // 			Action parameters:
    // 				sex: 'female'
    // 				title: 'g\'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = sex:female
    // 				org.evomaster.core.search.gene.optional.OptionalGene = title:g\
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    @Test(timeout = 60000)
    public void test_7_queryOnTitleReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { title  (sex : \\\"female\\\",title : \\\"g\\\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    // 			Action parameters:
    // 				name: 'null'
    // 				val: '\qu'
    // 				site: 'b9QJoOX'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = name:null
    // 				org.evomaster.core.search.gene.optional.OptionalGene = val:\qu
    // 				org.evomaster.core.search.gene.optional.OptionalGene = site:b9QJoOX
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    @Test(timeout = 60000)
    public void test_8_queryOnCookieReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { cookie  (name : null,val : \\\"\\qu\\\",site : \\\"b9QJoOX\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    // 			Action parameters:
    // 				i: '515'
    // 				s: 'X\'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:515
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:X\
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: costfuns
    @Test(timeout = 60000)
    public void test_9_queryOnCostfunsReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { costfuns  (i : 515,s : \\\"X\\\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    // 			Action parameters:
    // 				directory: '6Y0yLltQ7qQUyDz'
    // 				file: 'HY\CWSYgRP'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = directory:6Y0yLltQ7qQUyDz
    // 				org.evomaster.core.search.gene.optional.OptionalGene = file:HY\CWSYgRP
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    @Test(timeout = 60000)
    public void test_10_queryOnFilesuffixReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { fileSuffix  (directory : \\\"6Y0yLltQ7qQUyDz\\\",file : \\\"HY\\CWSYgRP\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }


}
