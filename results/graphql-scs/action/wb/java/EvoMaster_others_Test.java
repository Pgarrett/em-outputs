import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-18T12:11:54.406-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 10 tests
 * <br>
*  Covered targets: 30
 * <br>
*  Used time: 0h 10m 6s
 * <br>
*  Needed budget for current results: 83%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_others_Test {

    
    private static final SutHandler controller = new em.embedded.org.graphqlscs.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    // 			Action parameters:
    // 				name: '_EM_18715_XYZ_'
    // 				val: '_Ea_09887]\YZ_'
    // 				site: 'ooAC'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = name:'_EM_18715_XYZ_'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = val:'_Ea_09887]\YZ_'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = site:'ooAC'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: cookie
    @Test(timeout = 60000)
    public void test_0_qUERYOnCookieReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { cookie  (name : \\\"_EM_18715_XYZ_\\\",val : \\\"_Ea_09887]\\YZ_\\\",site : \\\"ooAC\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    // 			Action parameters:
    // 				i: ''
    // 				s: 'S2\6J'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = i:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = s:'S2\6J'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: notyPevar
    @Test(timeout = 60000)
    public void test_1_qUERYOnNotyPevarReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { notyPevar  (s : \\\"S2\\6J\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    // 			Action parameters:
    // 				txt: 'Z\OSUUIU]U]X_W'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:'Z\OSUUIU]U]X_W'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: regex
    @Test(timeout = 60000)
    public void test_2_qUERYOnRegexReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { regex  (txt : \\\"Z\\OSUUIU]U]X_W\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    // 			Action parameters:
    // 				op: 'U\o'
    // 				arg1: ''
    // 				arg2: '0.8948548'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = op:'U\o'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg1:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = arg2:'0.8948548'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: calc
    @Test(timeout = 60000)
    public void test_3_qUERYOnCalcReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { calc  (op : \\\"U\\o\\\",arg2 : 0.8948548)         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    // 			Action parameters:
    // 				dayname: 'null'
    // 				monthname: 'a_2jt?LQnia\MkU'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = dayname:'null'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = monthname:'a_2jt?LQnia\MkU'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: dateParse
    @Test(timeout = 60000)
    public void test_4_qUERYOnDateParseReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { dateParse  (dayname : null,monthname : \\\"a_2jt?LQnia\\MkU\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    // 			Action parameters:
    // 				word1: 'vf\D9e1'
    // 				word2: 'null'
    // 				word3: 'null'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word1:'vf\D9e1'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word2:'null'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = word3:'null'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: text2Txt
    @Test(timeout = 60000)
    public void test_5_qUERYOnText2TxtReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { text2Txt  (word1 : \\\"vf\\D9e1\\\",word2 : null,word3 : null)         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    // 			Action parameters:
    // 				w: '/q5'
    // 				x: ''
    // 				z: 'MX3jzO36\'
    // 				y: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = w:'/q5'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = x:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = z:'MX3jzO36\'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = y:''
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: ordered4
    @Test(timeout = 60000)
    public void test_6_qUERYOnOrdered4ReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { ordered4  (w : \\\"/q5\\\",z : \\\"MX3jzO36\\\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    // 			Action parameters:
    // 				txt: '\TE_11982bXiZU'
    // 				pat: 'null'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = txt:'\TE_11982bXiZU'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = pat:'null'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: pat
    @Test(timeout = 60000)
    public void test_7_qUERYOnPatReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { pat  (txt : \\\"\\TE_11982bXiZU\\\",pat : null)         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    // 			Action parameters:
    // 				sex: 'pshvmbyp94f'
    // 				title: '\panQ_j'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = sex:'pshvmbyp94f'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = title:'\panQ_j'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: title
    @Test(timeout = 60000)
    public void test_8_qUERYOnTitleReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { title  (sex : \\\"pshvmbyp94f\\\",title : \\\"\\panQ_j\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    // 			Action parameters:
    // 				directory: '_EM_17141_XYZ_'
    // 				file: 'dYhc\aab0qw'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = directory:'_EM_17141_XYZ_'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = file:'dYhc\aab0qw'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.graphql.GraphQLAction: fileSuffix
    @Test(timeout = 60000)
    public void test_9_qUERYOnFileSuffixReturnsEmpty() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" {\"query\" : \"  { fileSuffix  (directory : \\\"_EM_17141_XYZ_\\\",file : \\\"dYhc\\aab0qw\\\")         } \",\"variables\":null} ")
                .post(baseUrlOfSut + "/graphql")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }


}
