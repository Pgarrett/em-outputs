const superagent = require("superagent");
const EM = require("./EMTestUtils.js");
jest.setTimeout(60000);




/**
*  This file was automatically generated by EvoMaster on 2024-10-06T14:45:38.264-03:00[America/Argentina/Buenos_Aires]
*  
*  The generated test suite contains 12 tests
*  
*  Covered targets: 24
*  
*  Used time: 0h 10m 25s
*  
*  Needed budget for current results: 75%
*  
*  This file contains test cases that represent successful calls.
*/

const baseUrlOfSut = "http://localhost:8080";


beforeAll( async () => {
});








// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/cookie/{name}/{val}/{site}
// 			Action parameters:
// 				name: 'Ggg8K4qdMu'
// 				site: 'eDfuuKOzbm7cczn0'
// 				val: 'uo4aHV_1r'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = name:Ggg8K4qdMu
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = site:eDfuuKOzbm7cczn0
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = val:uo4aHV_1r
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/cookie/{name}/{val}/{site}
test("test_0_GetOnCookiReturns200", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/cookie/Ggg8K4qdMu/uo4aHV_1r/eDfuuKOzbm7cczn0").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(200);
    expect(res_0.header["content-type"].startsWith("text/plain")).toBe(true);
    expect(res_0.text).toBe("0");
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/ordered4/{w}/{x}/{z}/{y}
// 			Action parameters:
// 				w: 'PX76'
// 				x: 'G'
// 				y: 'ex'
// 				z: 'cJ752M'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = w:PX76
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x:G
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = y:ex
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = z:cJ752M
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/ordered4/{w}/{x}/{z}/{y}
test("test_1_GetOnOrdered4Returns200", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/ordered4/PX76/G/cJ752M/ex").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(200);
    expect(res_0.header["content-type"].startsWith("text/plain")).toBe(true);
    expect(res_0.text).toBe("unordered");
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/costfuns/{i}/{s}
// 			Action parameters:
// 				i: '159'
// 				s: 'E'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = i:159
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = s:E
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/costfuns/{i}/{s}
test("test_2_GetOnCostfunReturns200", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/costfuns/159/E").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(200);
    expect(res_0.header["content-type"].startsWith("text/plain")).toBe(true);
    expect(res_0.text).toBe("10");
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/pat/{txt}
// 			Action parameters:
// 				txt: 'dh1SVPFr'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = txt:dh1SVPFr
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/pat/{txt}
test("test_3_GetOnPatReturns200", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/pat/dh1SVPFr").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(200);
    expect(res_0.header["content-type"].startsWith("text/plain")).toBe(true);
    expect(res_0.text).toBe("none");
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/calc/{op}/{arg1}/{arg2}
// 			Action parameters:
// 				arg1: '0.5610964677631548'
// 				arg2: '0.5014340257866754'
// 				op: 'f6aVt'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = arg1:0.5610964677631548
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = arg2:0.5014340257866754
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = op:f6aVt
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/calc/{op}/{arg1}/{arg2}
test("test_4_GetOnCalcReturns200", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/calc/f6aVt/0.5610964677631548/0.5014340257866754").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(200);
    expect(res_0.header["content-type"].startsWith("text/plain")).toBe(true);
    expect(res_0.text).toBe("0.0");
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/title/{sex}/{title}
// 			Action parameters:
// 				sex: '65gNSBaY'
// 				title: 'o121QQo8l6m7'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sex:65gNSBaY
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = title:o121QQo8l6m7
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/title/{sex}/{title}
test("test_5_GetOnTitlReturns200", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/title/65gNSBaY/o121QQo8l6m7").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(200);
    expect(res_0.header["content-type"].startsWith("text/plain")).toBe(true);
    expect(res_0.text).toBe("-1");
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/pat/{txt}/{pat}
// 			Action parameters:
// 				pat: 'HOrBJm20WdRdboQG'
// 				txt: 'uO8gIV4Spp'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = pat:HOrBJm20WdRdboQG
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = txt:uO8gIV4Spp
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/pat/{txt}/{pat}
test("test_6_GetOnPatReturns200", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/pat/uO8gIV4Spp/HOrBJm20WdRdboQG").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(200);
    expect(res_0.header["content-type"].startsWith("text/plain")).toBe(true);
    expect(res_0.text).toBe("0");
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/filesuffix/{directory}/{file}
// 			Action parameters:
// 				directory: 'zc1LA'
// 				file: 'CqqIz'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = directory:zc1LA
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = file:CqqIz
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/filesuffix/{directory}/{file}
test("test_7_GetOnFilesuffixReturns200", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/filesuffix/zc1LA/CqqIz").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(200);
    expect(res_0.header["content-type"].startsWith("text/plain")).toBe(true);
    expect(res_0.text).toBe("0");
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/notypevar/{i}/{s}
// 			Action parameters:
// 				i: '153'
// 				s: '01HX8Nu4RPUAcZJG'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = i:153
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = s:01HX8Nu4RPUAcZJG
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/notypevar/{i}/{s}
test("test_8_GetOnNotypevarReturns200", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/notypevar/153/01HX8Nu4RPUAcZJG").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(200);
    expect(res_0.header["content-type"].startsWith("text/plain")).toBe(true);
    expect(res_0.text).toBe("3");
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/dateparse/{dayname}/{monthname}
// 			Action parameters:
// 				dayname: '6'
// 				monthname: 'C2kETSuJ4t'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = dayname:6
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = monthname:C2kETSuJ4t
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/dateparse/{dayname}/{monthname}
test("test_9_GetOnDateparsReturns200", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/dateparse/6/C2kETSuJ4t").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(200);
    expect(res_0.header["content-type"].startsWith("text/plain")).toBe(true);
    expect(res_0.text).toBe("0");
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/text2txt/{word1}/{word2}/{word3}
// 			Action parameters:
// 				word1: 'l5'
// 				word2: 'BfXF4wEBLooXg'
// 				word3: 'RnRQ_zcBcXTgHSn_'
// 			Genes:
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = word1:l5
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = word2:BfXF4wEBLooXg
// 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = word3:RnRQ_zcBcXTgHSn_
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/text2txt/{word1}/{word2}/{word3}
test("test_10_GetOnText2txtReturns200", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/text2txt/l5/BfXF4wEBLooXg/RnRQ_zcBcXTgHSn_").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(200);
    expect(res_0.body===null || res_0.body===undefined || res_0.body==="" || Object.keys(res_0.body).length === 0).toBe(true);
});


// Individual:
// 	Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/v2/api-docs
// 			Action parameters:
// 			Genes:
// 	Evaluated Actions:
// 		org.evomaster.core.problem.rest.RestCallAction: GET:/v2/api-docs
test("test_11_GetOnApi_docsReturns200", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/v2/api-docs").set('Accept', "*/*")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(200);
});
