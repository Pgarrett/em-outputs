import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-03T14:06:22.431-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 18 tests
 * <br>
*  Covered targets: 917
 * <br>
*  Used time: 0h 18m 1s
 * <br>
*  Needed budget for current results: 97%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.org.zalando.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CONTRIBUTOR","LANGUAGE_LIST","MAINTAINERS","PROJECT","STATISTICS"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    @Test(timeout = 60000)
    public void test_1_getOnExportReturnsObject() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_2_getOnStatisticsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 21L)
                .d("ID", "70")
                .d("SNAPSHOT_DATE", "\"2052-06-17 21:20:16\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "529")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "259")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "430")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "342")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "510")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_26_XYZ_")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=glWRUlxb8p&" + 
                    "EMextraParam123=TdE106hzbDDOP")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_3_getOnStatisticsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_317_XYZ_")
                .get(baseUrlOfSut + "/statistics?EMextraParam123=_EM_25_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_4_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=_1Ke&" + 
                    "q=_b5pgUEK&" + 
                    "offset=2KXREVKD&" + 
                    "limit=QLmSRj8pc_FY")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_5_getOnLanguagesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 79L)
                .d("ID", "513")
                .d("SNAPSHOT_DATE", "\"1915-06-05 06:32:52\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "447")
                .d("ORGANIZATION_NAME", "\"yWDZ\"")
                .d("PRIVATE_PROJECT_COUNT", "608")
                .d("PROGRAM_LANGUAGES_COUNT", "100")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "347")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=KY&" + 
                    "offset=3aj7IXG3wk7Mzfet")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_6_getOnLanguagesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 103L)
                .d("COMMITS_COUNT", "107")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"bVH0bu\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "164")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"_EM_1276_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "810")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"_EM_1279_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 104L)
                .d("ID", "222")
                .d("ORGANIZATION_ID", "205")
                .d("SNAPSHOT_DATE", "\"2100-10-30 18:19:18\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "364")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "895")
                .d("URL", "NULL")
            .and().insertInto("STATISTICS", 105L)
                .d("ID", "954")
                .d("SNAPSHOT_DATE", "\"1926-11-25 12:01:52\"")
                .d("ALL_CONTRIBUTORS_COUNT", "982")
                .d("ALL_FORKS_COUNT", "42")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "867")
                .d("MEMBERS_COUNT", "9")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "548")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "39")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "345")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=205&" + 
                    "start_date=1920-10-23T19%3A38%3A13Z&" + 
                    "end_date=2089-02-25T18%3A33%3A45-10%3A01&" + 
                    "q=QDLD8PTpq")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_7_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_8_getOnLanguagesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 88L)
                .d("ID", "377")
                .d("SNAPSHOT_DATE", "\"1960-08-20 05:35:21\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "395")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"226\"")
                .d("PRIVATE_PROJECT_COUNT", "-1965632253")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 89L)
                .d("ID", "270")
                .d("ORGANIZATION_ID", "226")
                .d("SNAPSHOT_DATE", "\"1975-09-21 10:54:00\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "191")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"Z9woI\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=226&" + 
                    "offset=530")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_9_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=EotxqbT2kPek&" + 
                    "limit=414&" + 
                    "q=_EM_390_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_10_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=tyg5D3vbgzlu6&" + 
                    "limit=314&" + 
                    "q=2Y&" + 
                    "end_date=pR4Gsg55pFH&" + 
                    "start_date=nB3e9oSPIRCgQC")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_11_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=atKWr&" + 
                    "offset=905&" + 
                    "q=m")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_12_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "24")
                .d("PROGRAM_LANGUAGES_COUNT", "468")
                .d("PUBLIC_PROJECT_COUNT", "729")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "203")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"o6H7w4QKw\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "\"72Rha5_YzV\"")
                .d("NAME", "\"lDmQ66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"nC\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "\"6B_Y7YN8HMstVx\"")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "3")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"Q\"")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "641")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "43")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=737&" + 
                    "offset=733&" + 
                    "language=OPOjzk4jeQV3")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_13_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "l2")
                .get(baseUrlOfSut + "/projects?" + 
                    "end_date=2023-08-31T21%3A17%3A22.448%2B21%3A20&" + 
                    "q=ipH9&" + 
                    "language=ivBCYbDTVn7as1BF&" + 
                    "EMextraParam123=_EM_22_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_14_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 11L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "373")
                .d("GIT_HUB_PROJECT_ID", "718")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"Z6NrVvw9\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "175")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"6PwBwt\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_23_XYZ_")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=253&" + 
                    "end_date=1911-12-29T04%3A40%3A26.503Z&" + 
                    "sortBy=ufY8XSG&" + 
                    "q=_EM_256_XYZ_&" + 
                    "language=IjHCSp2F7mXIJt0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_15_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_23_XYZ_")
                .get(baseUrlOfSut + "/projects?" + 
                    "start_date=1915-04-08T14%3A20%3A32%2B19%3A41&" + 
                    "q=8uWWTOIHeu6go")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_16_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=_EM_414_XYZ_&" + 
                    "limit=814&" + 
                    "start_date=1963-02-17T15%3A31%3A36.404Z&" + 
                    "sortBy=utBKXAdYWRa&" + 
                    "language=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_17_getOnContributorsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "729")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "-1089343714")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "203")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"_EM_1243_XYZ_\"")
                .d("FORKS_COUNT", "359")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"lDmS66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"jC\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 05:08:30\"")
                .d("STARS_COUNT", "241")
                .d("URL", "\"72yn\"")
                .d("TITLE", "\"6B_Y7YN8HMstVx\"")
                .d("IMAGE", "\"NXKnchYFogxvnA\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "789")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "416")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "641")
                .d("PERSONAL_COMMITS_COUNT", "388")
                .d("PERSONAL_PROJECTS_COUNT", "43")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=7%3Aj&" + 
                    "limit=789&" + 
                    "q=7%3Aj")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }


}
