import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-03T14:06:22.360-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 66 tests
 * <br>
*  Covered targets: 1236
 * <br>
*  Used time: 0h 18m 1s
 * <br>
*  Needed budget for current results: 97%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.org.zalando.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CONTRIBUTOR","LANGUAGE_LIST","MAINTAINERS","PROJECT","STATISTICS"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_getOnProjectsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 34L)
                .d("ID", "171")
                .d("SNAPSHOT_DATE", "\"1972-02-12 16:48:48\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "629")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"UytkFn7AipaT\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "712")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "77")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=2084-12-14T20%3A06%3A01-07%3A07&" + 
                    "end_date=2025-09-10T12%3A41%3A16Z")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    @Test(timeout = 60000)
    public void test_1_getOnProjectsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 25L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"_EM_434_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "749")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "858")
                .d("SNAPSHOT_DATE", "\"2047-12-24 01:36:10\"")
                .d("STARS_COUNT", "499")
                .d("URL", "NULL")
                .d("TITLE", "\"_EM_436_XYZ_\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "696")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet GET:/statistics/projects
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_7_XYZ_")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=hqsnnCcHz69R5l&" + 
                    "EMextraParam123=ifsophKd_Cz")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    @Test(timeout = 60000)
    public void test_2_getOnStatisticsContributorsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 106L)
                .d("ID", "519")
                .d("ORGANIZATION_ID", "69")
                .d("SNAPSHOT_DATE", "\"2059-12-08 12:27:12\"")
                .d("NAME", "\"_EM_1290_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "308")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"_EM_1291_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet GET:/statistics/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 500 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "69")
                .header("X-Organizations", "_EM_1292_XYZ_")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=69&" + 
                    "limit=V_Yq9oLV1wmM")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_3_getOnStatisticsContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet GET:/statistics/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 500 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "XwpIF")
                .get(baseUrlOfSut + "/statistics/contributors?EMextraParam123=_EM_144_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_4_getOnContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=&" + 
                    "start_date=_EM_224_XYZ_&" + 
                    "end_date=MN&" + 
                    "sortBy=_EM_225_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _EM_225_XYZ_. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_5_getOnContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=x8O_&" + 
                    "offset=793&" + 
                    "start_date=M&" + 
                    "sortBy=_EM_235_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _EM_235_XYZ_. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_6_getOnContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "Zx8E18yWzpJ")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=0m241x&" + 
                    "limit=106&" + 
                    "offset=48&" + 
                    "start_date=TkZAUHE&" + 
                    "end_date=A22mDBDEWqGC2wC&" + 
                    "sortBy=_EM_136_XYZ_&" + 
                    "q=_EM_137_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _EM_136_XYZ_. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_7_getOnContributorsShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 9L)
                .d("ID", "556")
                .d("ORGANIZATION_ID", "321")
                .d("SNAPSHOT_DATE", "\"1959-01-22 03:30:13\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"UTbWADb\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "211")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "419")
                .d("PERSONAL_COMMITS_COUNT", "347")
                .d("PERSONAL_PROJECTS_COUNT", "186")
                .d("URL", "\"_EM_857_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601 GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=&" + 
                    "start_date=n6vtN7XuW&" + 
                    "end_date=&" + 
                    "sortBy=")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"\""))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_8_getOnLanguagesShowsFaults_100_200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 77L)
                .d("ID", "195")
                .d("ORGANIZATION_ID", "308")
                .d("SNAPSHOT_DATE", "\"2086-04-12 16:41:33\"")
                .d("NAME", "\"YPFurV\"")
                .d("ORGANIZATION_NAME", "\"OCu+0S8a545hKH\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-523528")
                .d("PERSONAL_COMMITS_COUNT", "18")
                .d("PERSONAL_PROJECTS_COUNT", "2490")
                .d("URL", "\"5Zwsp2LTo4\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/service/LanguageService_36_filterLanguages GET:/languages
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> Response status 500 not defined for path '/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=d7yFikbDbmqVyMrk&" + 
                    "offset=-73&" + 
                    "q=Nu0nBJM&" + 
                    "start_date=qkh%3EtRPL4wJMLe")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/service/LanguageService_36_filterLanguages
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("-73"))
                .body("'path'", containsString("/languages"));
    }
    
    
    @Test(timeout = 60000)
    public void test_9_getOnContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_398_XYZ_&" + 
                    "offset=838")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_10_getOnContributorsShowsFaults_100_200() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet GET:/contributors
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_12_XYZ_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=C1VGpX6&" + 
                    "limit=661&" + 
                    "offset=860")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    @Test(timeout = 60000)
    public void test_11_getOnConfigReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/github.login'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.database.driverClassName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.datasource.platform'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> [Path '/spring.jpa.database'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config?EMextraParam123=_EM_8_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'cache.path'", containsString("target/cache"))
                .body("'cache.size'", containsString("50"))
                .body("'endpoints.enabled'", containsString("false"))
                .body("'endpoints.health.enabled'", containsString("true"))
                .body("'github.login'", nullValue())
                .body("'organization.list'", containsString("zalando,zalando-stups,zalando-incubator"))
                .body("'schedule'", containsString("0 1 8 * * *"))
                .body("'scoring.project'", containsString("function(project) {var daysSinceLastPush = 0;if (project.lastPushed) {var tokens = project.lastPushed.split(\" \");var day = tokens[2];var month = tokens[1];var year = tokens[5];var lastPushedDate = new Date(day + ' ' + month + ' ' + year);var millisInDay = 86400000;daysSinceLastPush = Math.floor((new Date() - lastPushedDate) / millisInDay);}var maintainersPenalty = 0;if (project.maintainers.length < 2) {maintainersPenalty = 100;}return project.starsCount * 3 + project.forksCount * 2 + project.contributorsCount * 5 - daysSinceLastPush - maintainersPenalty}"))
                .body("'spring.database.driverClassName'", nullValue())
                .body("'spring.datasource.platform'", nullValue())
                .body("'spring.datasource.url'", containsString("jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;"))
                .body("'spring.datasource.username'", containsString("sa"))
                .body("'spring.jpa.database'", nullValue())
                .body("'spring.jpa.hibernate.ddl-auto'", containsString("update"));
    }
    
    
    @Test(timeout = 60000)
    public void test_12_getOnExportReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 25L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"_EM_434_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "749")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "862")
                .d("SNAPSHOT_DATE", "\"2047-12-24 01:36:10\"")
                .d("STARS_COUNT", "531")
                .d("URL", "NULL")
                .d("TITLE", "\"_EM_436_XYZ_\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "696")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/commitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/contributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/forksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/image'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/lastPushed'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/primaryLanguage'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] String "2047-12-24T01:36:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/url'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "ImTioU_5QHAhnXds")
                .get(baseUrlOfSut + "/export?start_date=w6TGOhcMGkw")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(749.0))
                .body("'projects'[0].'snapshotDate'", containsString("2047-12-24T01:36:10"))
                .body("'projects'[0].'name'", nullValue())
                .body("'projects'[0].'title'", containsString("_EM_436_XYZ_"))
                .body("'projects'[0].'image'", nullValue())
                .body("'projects'[0].'organizationName'", nullValue())
                .body("'projects'[0].'url'", nullValue())
                .body("'projects'[0].'description'", containsString("_EM_434_XYZ_"))
                .body("'projects'[0].'starsCount'", numberMatches(531.0))
                .body("'projects'[0].'commitsCount'", nullValue())
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", nullValue())
                .body("'projects'[0].'externalContributorsCount'", numberMatches(696.0))
                .body("'projects'[0].'score'", numberMatches(862.0))
                .body("'projects'[0].'lastPushed'", nullValue())
                .body("'projects'[0].'primaryLanguage'", nullValue())
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_13_getOnExportReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 88L)
                .d("ID", "377")
                .d("SNAPSHOT_DATE", "\"1960-08-20 05:35:21\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "395")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"226\"")
                .d("PRIVATE_PROJECT_COUNT", "-1965632253")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 89L)
                .d("ID", "270")
                .d("ORGANIZATION_ID", "226")
                .d("SNAPSHOT_DATE", "\"1975-09-21 10:54:00\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "191")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"Z9woI\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "1975-09-21T10:54:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/personalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/personalProjectsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allForksCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "1960-08-20T05:35:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/membersCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/programLanguagesCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/publicProjectCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/tagsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/teamsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "biKwa")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(226.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1975-09-21T10:54:00"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", nullValue())
                .body("'contributors'[0].'url'", containsString("Z9woI"))
                .body("'contributors'[0].'organizationalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalProjectsCount'", nullValue())
                .body("'contributors'[0].'organizationalProjectsCount'", numberMatches(191.0))
                .body("'contributors'[0].'organizationName'", nullValue())
                .body("'contributors'[0].'organizationId'", numberMatches(226.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(1.8053964E11))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("1960-08-20T05:35:21"))
                .body("'statistics'[0].'privateProjectCount'", numberMatches(-1.965632253E9))
                .body("'statistics'[0].'publicProjectCount'", nullValue())
                .body("'statistics'[0].'membersCount'", nullValue())
                .body("'statistics'[0].'teamsCount'", nullValue())
                .body("'statistics'[0].'allContributorsCount'", nullValue())
                .body("'statistics'[0].'externalContributorsCount'", nullValue())
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", nullValue())
                .body("'statistics'[0].'allSizeCount'", numberMatches(395.0))
                .body("'statistics'[0].'programLanguagesCount'", nullValue())
                .body("'statistics'[0].'tagsCount'", nullValue())
                .body("'statistics'[0].'organizationName'", containsString("226"))
                .body("'statistics'[0].'snapshotDate'", numberMatches(-2.95543479E11));
    }
    
    
    @Test(timeout = 60000)
    public void test_14_getOnExportReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "501")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "-3506")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "56")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "17113")
                .d("TAGS_COUNT", "31")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "1227")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"_EM_1243_XYZ_\"")
                .d("FORKS_COUNT", "231")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"lDmS66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"n?\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "846")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-15743")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "44")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "1951-08-13T15:04:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/lastPushed'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] String "2097-12-16T03:06:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/starsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/title'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "1941-09-16T07:35:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/programLanguagesCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/teamsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(846.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1951-08-13T15:04:03"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", containsString(""))
                .body("'contributors'[0].'url'", containsString("_EM_1244_XYZ_"))
                .body("'contributors'[0].'organizationalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalCommitsCount'", numberMatches(644.0))
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(44.0))
                .body("'contributors'[0].'organizationalProjectsCount'", numberMatches(-15743.0))
                .body("'contributors'[0].'organizationName'", nullValue())
                .body("'contributors'[0].'organizationId'", numberMatches(846.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(-5.80197357E11))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(486.0))
                .body("'projects'[0].'snapshotDate'", containsString("2097-12-16T03:06:30"))
                .body("'projects'[0].'name'", containsString("lDmS66e9_HNRum"))
                .body("'projects'[0].'title'", nullValue())
                .body("'projects'[0].'image'", containsString("NXKnchYFogxvnA8"))
                .body("'projects'[0].'organizationName'", nullValue())
                .body("'projects'[0].'url'", containsString("72yn"))
                .body("'projects'[0].'description'", containsString("_EM_1243_XYZ_"))
                .body("'projects'[0].'starsCount'", nullValue())
                .body("'projects'[0].'commitsCount'", numberMatches(1227.0))
                .body("'projects'[0].'forksCount'", numberMatches(231.0))
                .body("'projects'[0].'contributorsCount'", numberMatches(264.0))
                .body("'projects'[0].'externalContributorsCount'", numberMatches(57.0))
                .body("'projects'[0].'score'", numberMatches(912.0))
                .body("'projects'[0].'lastPushed'", nullValue())
                .body("'projects'[0].'primaryLanguage'", containsString("n?"))
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("1941-09-16T07:35:28"))
                .body("'statistics'[0].'privateProjectCount'", numberMatches(56.0))
                .body("'statistics'[0].'publicProjectCount'", numberMatches(17113.0))
                .body("'statistics'[0].'membersCount'", numberMatches(-3506.0))
                .body("'statistics'[0].'teamsCount'", nullValue())
                .body("'statistics'[0].'allContributorsCount'", numberMatches(501.0))
                .body("'statistics'[0].'externalContributorsCount'", nullValue())
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", numberMatches(527.0))
                .body("'statistics'[0].'allSizeCount'", numberMatches(404.0))
                .body("'statistics'[0].'programLanguagesCount'", nullValue())
                .body("'statistics'[0].'tagsCount'", numberMatches(31.0))
                .body("'statistics'[0].'organizationName'", nullValue())
                .body("'statistics'[0].'snapshotDate'", numberMatches(-8.92815872E11));
    }
    
    
    @Test(timeout = 60000)
    public void test_15_getOnExportReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 67L)
                .d("ID", "815")
                .d("SNAPSHOT_DATE", "\"1923-10-16 02:58:55\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "882")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "464")
                .d("MEMBERS_COUNT", "590")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "696")
                .d("PROGRAM_LANGUAGES_COUNT", "468")
                .d("PUBLIC_PROJECT_COUNT", "283284185")
                .d("TAGS_COUNT", "31")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 68L)
                .d("ID", "381")
                .d("ORGANIZATION_ID", "411")
                .d("SNAPSHOT_DATE", "\"2058-11-25 02:18:09\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .and().insertInto("PROJECT", 69L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "401")
                .d("DESCRIPTION", "\"_EM_971_XYZ_\"")
                .d("FORKS_COUNT", "867")
                .d("GIT_HUB_PROJECT_ID", "859")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "475")
                .d("URL", "\"_EM_973_XYZ_\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"6x\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "314")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/key/snapshotDate'] String "2058-11-25T02:18:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/organizationalProjectsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/personalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/personalProjectsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/contributors/0/url'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/commitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/lastPushed'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/name'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/primaryLanguage'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/score'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/snapshotDate'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/projects/0/title'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/allSizeCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/externalContributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/key/snapshotDate'] String "1923-10-16T02:58:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/organizationName'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> [Path '/statistics/0/teamsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "GkKIvj")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(411.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("2058-11-25T02:18:09"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", nullValue())
                .body("'contributors'[0].'url'", nullValue())
                .body("'contributors'[0].'organizationalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalProjectsCount'", nullValue())
                .body("'contributors'[0].'organizationalProjectsCount'", nullValue())
                .body("'contributors'[0].'organizationName'", nullValue())
                .body("'contributors'[0].'organizationId'", numberMatches(411.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(2.805427089E12))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(859.0))
                .body("'projects'[0].'snapshotDate'", nullValue())
                .body("'projects'[0].'name'", nullValue())
                .body("'projects'[0].'title'", nullValue())
                .body("'projects'[0].'image'", containsString("6x"))
                .body("'projects'[0].'organizationName'", nullValue())
                .body("'projects'[0].'url'", containsString("_EM_973_XYZ_"))
                .body("'projects'[0].'description'", containsString("_EM_971_XYZ_"))
                .body("'projects'[0].'starsCount'", numberMatches(475.0))
                .body("'projects'[0].'commitsCount'", nullValue())
                .body("'projects'[0].'forksCount'", numberMatches(867.0))
                .body("'projects'[0].'contributorsCount'", numberMatches(401.0))
                .body("'projects'[0].'externalContributorsCount'", numberMatches(314.0))
                .body("'projects'[0].'score'", nullValue())
                .body("'projects'[0].'lastPushed'", nullValue())
                .body("'projects'[0].'primaryLanguage'", nullValue())
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("1923-10-16T02:58:55"))
                .body("'statistics'[0].'privateProjectCount'", numberMatches(696.0))
                .body("'statistics'[0].'publicProjectCount'", numberMatches(2.83284185E8))
                .body("'statistics'[0].'membersCount'", numberMatches(590.0))
                .body("'statistics'[0].'teamsCount'", nullValue())
                .body("'statistics'[0].'allContributorsCount'", nullValue())
                .body("'statistics'[0].'externalContributorsCount'", nullValue())
                .body("'statistics'[0].'allStarsCount'", numberMatches(464.0))
                .body("'statistics'[0].'allForksCount'", numberMatches(882.0))
                .body("'statistics'[0].'allSizeCount'", nullValue())
                .body("'statistics'[0].'programLanguagesCount'", numberMatches(468.0))
                .body("'statistics'[0].'tagsCount'", numberMatches(31.0))
                .body("'statistics'[0].'organizationName'", nullValue())
                .body("'statistics'[0].'snapshotDate'", numberMatches(-1.458320465E12));
    }
    
    
    @Test(timeout = 60000)
    public void test_16_getOnFetchReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/fetch -> Response status 400 not defined for path '/fetch'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/fetch?" + 
                    "EMextraParam123=A&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_17_getOnInitReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> Response status 400 not defined for path '/init'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init?" + 
                    "EMextraParam123=DD&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_18_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> Response status 400 not defined for path '/import'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allForksCount\": 854, " + 
                    " \"allSizeCount\": 544, " + 
                    " \"allStarsCount\": 982, " + 
                    " \"id\": 263, " + 
                    " \"membersCount\": 509, " + 
                    " \"programLanguagesCount\": 146 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 449, " + 
                    " \"externalContributorsCount\": 324, " + 
                    " \"key\": { " + 
                    " \"id\": 330, " + 
                    " \"snapshotDate\": \"2045-00-32T16:13:37.380Z\" " + 
                    " }, " + 
                    " \"programLanguagesCount\": 346, " + 
                    " \"tagsCount\": 257, " + 
                    " \"teamsCount\": 970 " + 
                    " }, " + 
                    " { " + 
                    " \"allForksCount\": 83, " + 
                    " \"externalContributorsCount\": 706, " + 
                    " \"id\": 578, " + 
                    " \"key\": { " + 
                    " \"id\": 926, " + 
                    " \"snapshotDate\": \"2029-00-15T22:37:21.173Z\" " + 
                    " }, " + 
                    " \"organizationName\": \"cxiE57cZ\", " + 
                    " \"teamsCount\": 994 " + 
                    " }, " + 
                    " { " + 
                    " \"externalContributorsCount\": 42, " + 
                    " \"membersCount\": 883, " + 
                    " \"programLanguagesCount\": 473, " + 
                    " \"publicProjectCount\": 154, " + 
                    " \"tagsCount\": 917, " + 
                    " \"teamsCount\": 345 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_19_getOnExportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> Response status 400 not defined for path '/export'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "E")
                .get(baseUrlOfSut + "/export?" + 
                    "access_token=&" + 
                    "end_date=Yfx5QErzZEJq6&" + 
                    "organizations=jjgqr7uesL&" + 
                    "start_date=W")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_20_postOnScoring_projectReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 47L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "935")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "267")
                .d("GIT_HUB_PROJECT_ID", "336")
                .d("LAST_PUSHED", "\"V\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"2073-11-09 22:48:06\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"_EM_820_XYZ_\"")
                .d("TITLE", "\"GEWA\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> Response status 400 not defined for path '/config/scoring.project'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=&" + 
                    "organizations=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_21_getOnLanguagesReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> Response status 400 not defined for path '/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "cx")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=tyg5D3vbgzlu6&" + 
                    "limit=306&" + 
                    "q=2Y&" + 
                    "access_token=&" + 
                    "end_date=pR4Gsg55pFH&" + 
                    "start_date=nB3e9oSPIRCgQC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_22_getOnContributorsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 400 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=&" + 
                    "start_date=EXNVYeTDP8ik6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string EXNVYeTDP8ik6."));
    }
    
    
    @Test(timeout = 60000)
    public void test_23_getOnLanguagesReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> Response status 400 not defined for path '/statistics/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_269_XYZ_")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "end_date=GJcZ4g&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string GJcZ4g."));
    }
    
    
    @Test(timeout = 60000)
    public void test_24_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=_EM_205_XYZ_&" + 
                    "end_date=XNgGDTgAxLAQnI")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string XNgGDTgAxLAQnI."));
    }
    
    
    @Test(timeout = 60000)
    public void test_25_getOnContributorsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> Response status 400 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "end_date=yOJfAs7&" + 
                    "q=JtM")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string yOJfAs7."));
    }
    
    
    @Test(timeout = 60000)
    public void test_26_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 47L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "935")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "267")
                .d("GIT_HUB_PROJECT_ID", "336")
                .d("LAST_PUSHED", "\"V\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"2073-11-09 22:48:06\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"_EM_820_XYZ_\"")
                .d("TITLE", "\"GEWA\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> Response status 400 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=-261766351&" + 
                    "offset=333&" + 
                    "start_date=2031-03-15T25%3A-1%3A28-00%3A10&" + 
                    "end_date=2092-07-01T17%3A06%3A32.103%2B10%3A19&" + 
                    "sortBy=Iofshq4qFGI&" + 
                    "language=&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    @Test(timeout = 60000)
    public void test_27_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?end_date=pceKD")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string pceKD."));
    }
    
    
    @Test(timeout = 60000)
    public void test_28_getOnStatisticsProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "501")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "-3506")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "56")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "17113")
                .d("TAGS_COUNT", "31")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "1227")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"_EM_1243_XYZ_\"")
                .d("FORKS_COUNT", "231")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"lDmS66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"n?\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "846")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-15743")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "44")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "-fyukW")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=-fyukW&" + 
                    "start_date=-fyukW&" + 
                    "offset=-fyukW&" + 
                    "limit=-fyukW&" + 
                    "q=6creQJB5&" + 
                    "sortBy=J0GK7bpqqizN_pp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string -fyukW."));
    }
    
    
    @Test(timeout = 60000)
    public void test_29_getOnStatisticsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> Response status 400 not defined for path '/statistics'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "start_date=KwD&" + 
                    "end_date=_EM_533_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for stardDate"));
    }
    
    
    @Test(timeout = 60000)
    public void test_30_getOnStatisticsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> Response status 400 not defined for path '/statistics'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?end_date=_EM_498_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for endDate"));
    }
    
    
    @Test(timeout = 60000)
    public void test_31_getOnInitReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "_EM_353_XYZ_")
                .get(baseUrlOfSut + "/init?EMextraParam123=fEiVet0nXqVEDjbT")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    @Test(timeout = 60000)
    public void test_32_getOnDeleteReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/delete?" + 
                    "q=bAAH&" + 
                    "sortBy=_EM_1257_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    @Test(timeout = 60000)
    public void test_33_getOnConfigReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/config -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config?access_token=_EM_123_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_34_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"contributorsCount\": 503, " + 
                    " \"gitHubProjectId\": 736, " + 
                    " \"lastPushed\": \"w4O\", " + 
                    " \"maintainers\": [], " + 
                    " \"name\": \"fXx5XrDloMEz\", " + 
                    " \"primaryLanguage\": \"DW5UdAr7T1EtKmH_\", " + 
                    " \"score\": 576, " + 
                    " \"snapshotDate\": \"2083-07-02T13:10:44.586+15:36\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?access_token=JSh17FvcVHhcK")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_35_getOnFetchReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "501")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "-3506")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "56")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "17113")
                .d("TAGS_COUNT", "31")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "1227")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"_EM_1243_XYZ_\"")
                .d("FORKS_COUNT", "231")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"lDmS66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"n?\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "846")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-15743")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "44")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/fetch -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/fetch?access_token=-fyukW")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_36_getOnExportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/export -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "WJa")
                .get(baseUrlOfSut + "/export?" + 
                    "access_token=ShzG4S2zLoys&" + 
                    "organizations=RuBLQty0")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_37_postOnScoring_projectReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "501")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "-3506")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "56")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "17113")
                .d("TAGS_COUNT", "31")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "1227")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"_EM_1243_XYZ_\"")
                .d("FORKS_COUNT", "231")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"lDmS66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"n?\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "846")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-15743")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "44")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "-fyukW")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?access_token=LrJOjj")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_38_getOnStatisticsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_26_XYZ_")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=&" + 
                    "start_date=_EM_24_XYZ_&" + 
                    "end_date=W7sYcTG3porcWU3i&" + 
                    "EMextraParam123=_EM_25_XYZ_&" + 
                    "access_token=IbLi6pq")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_39_getOnInitReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init?" + 
                    "access_token=MP5JSc7NCpZ&" + 
                    "end_date=8&" + 
                    "start_date=QHZC6ZwDpfhn")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_40_getOnInitReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "729")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "-1089343714")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "203")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"_EM_1243_XYZ_\"")
                .d("FORKS_COUNT", "359")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"lDmS66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"jC\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 05:08:30\"")
                .d("STARS_COUNT", "241")
                .d("URL", "\"72yn\"")
                .d("TITLE", "\"6B_Y7YN8HMstVx\"")
                .d("IMAGE", "\"NXKnchYFogxvnA\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "789")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "416")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "641")
                .d("PERSONAL_COMMITS_COUNT", "388")
                .d("PERSONAL_PROJECTS_COUNT", "43")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "7:j")
                .get(baseUrlOfSut + "/init?" + 
                    "access_token=7%3Aj&" + 
                    "offset=7%3Aj&" + 
                    "organizations=7%3Aj&" + 
                    "start_date=7%3Aj")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_41_getOnInitReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 25L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"_EM_434_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "749")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "862")
                .d("SNAPSHOT_DATE", "\"2047-12-24 01:36:10\"")
                .d("STARS_COUNT", "531")
                .d("URL", "NULL")
                .d("TITLE", "\"_EM_436_XYZ_\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "696")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/init -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "1")
                .get(baseUrlOfSut + "/init?" + 
                    "access_token=aKIkloN1pCbuVlcQ&" + 
                    "offset=ujvP1uSfIJTL&" + 
                    "organizations=aT&" + 
                    "limit=X8")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_42_getOnLanguagesReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "3qMk1_ZBZmq6")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=_EM_1069_XYZ_&" + 
                    "start_date=v&" + 
                    "end_date=pWYAq3kLXIMPD1&" + 
                    "access_token=2Z")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_43_getOnDeleteReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/delete?" + 
                    "access_token=3RsDm72zyW0Bj&" + 
                    "end_date=wgurKkljgC8Zqczl&" + 
                    "offset=gZelp5Mwljb9cBE&" + 
                    "organizations=&" + 
                    "limit=B1Igx_mjs&" + 
                    "start_date=Du2wTempK_m5vDO")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_44_getOnContributorsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 77L)
                .d("ID", "195")
                .d("ORGANIZATION_ID", "308")
                .d("SNAPSHOT_DATE", "\"2086-04-12 16:41:33\"")
                .d("NAME", "\"YPFurV\"")
                .d("ORGANIZATION_NAME", "\"OCu+0S8a545hKH\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-523528")
                .d("PERSONAL_COMMITS_COUNT", "18")
                .d("PERSONAL_PROJECTS_COUNT", "2490")
                .d("URL", "\"5Zwsp2LTo4\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "V96JEgJvDLR7j9IwH")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=9lpUs%40_WO&" + 
                    "start_date=_EM_1203_XYZ_&" + 
                    "access_token=E1&" + 
                    "q=_EM_1204_XYZ_&" + 
                    "offset=581")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_45_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=uecCIyvJC_p&" + 
                    "access_token=ugZ58k&" + 
                    "limit=Y1dRF6Qrb890dK__&" + 
                    "q=KonCNJnVEE&" + 
                    "sortBy=mcyQwh")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_46_postOnScoring_projectReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "e9q5yGyvWVAaFhnG")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" g2TpohGqU ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "offset=Xvvn6Otpdz_&" + 
                    "organizations=u3Kw75kBw6x2IfuI")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    @Test(timeout = 60000)
    public void test_47_getOnLanguagesReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "24")
                .d("PROGRAM_LANGUAGES_COUNT", "468")
                .d("PUBLIC_PROJECT_COUNT", "729")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "203")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"o6H7w4QKw\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "\"72Rha5_YzV\"")
                .d("NAME", "\"lDmQ66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"nC\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "\"6B_Y7YN8HMstVx\"")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "3")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"Q\"")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "641")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "43")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "+3")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_18_XYZ_&" + 
                    "offset=3&" + 
                    "q=%2B3&" + 
                    "access_token=%2B3&" + 
                    "start_date=%2B3")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_48_postOnScoring_projectReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "729")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "-1089343714")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "203")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"_EM_1243_XYZ_\"")
                .d("FORKS_COUNT", "359")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"lDmS66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"jC\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 05:08:30\"")
                .d("STARS_COUNT", "241")
                .d("URL", "\"72yn\"")
                .d("TITLE", "\"6B_Y7YN8HMstVx\"")
                .d("IMAGE", "\"NXKnchYFogxvnA\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "789")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "416")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "641")
                .d("PERSONAL_COMMITS_COUNT", "388")
                .d("PERSONAL_PROJECTS_COUNT", "43")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "7:j")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=7%3Aj&" + 
                    "end_date=7%3Aj&" + 
                    "q=7%3Aj&" + 
                    "offset=7%3Aj&" + 
                    "limit=7%3Aj&" + 
                    "sortBy=7%3Aj&" + 
                    "language=7%3Aj&" + 
                    "start_date=7%3Aj")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_49_postOnScoring_projectReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "24")
                .d("PROGRAM_LANGUAGES_COUNT", "468")
                .d("PUBLIC_PROJECT_COUNT", "729")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "203")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"o6H7w4QKw\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "\"72Rha5_YzV\"")
                .d("NAME", "\"lDmQ66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"nC\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "\"6B_Y7YN8HMstVx\"")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "3")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"Q\"")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "641")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "43")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "+3")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?access_token=LrJOjj")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_50_postOnScoring_projectReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "24")
                .d("PROGRAM_LANGUAGES_COUNT", "468")
                .d("PUBLIC_PROJECT_COUNT", "729")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "203")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"o6H7w4QKw\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "\"72Rha5_YzV\"")
                .d("NAME", "\"lDmQ66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"nC\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "\"6B_Y7YN8HMstVx\"")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "3")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"Q\"")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "641")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "43")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "+3")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" qaD6Y4 ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=%2B3&" + 
                    "end_date=%2B3&" + 
                    "offset=%2B3&" + 
                    "organizations=%2B3&" + 
                    "limit=%2B3&" + 
                    "sortBy=%2B3&" + 
                    "language=%2B3&" + 
                    "start_date=%2B3")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_51_getOnContributorsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=0m241y&" + 
                    "limit=-32662&" + 
                    "offset=-524288&" + 
                    "start_date=TkZAUHE&" + 
                    "end_date=A22mDBDEGqGC2wC&" + 
                    "sortBy=organizationname&" + 
                    "q=_EM_137_XYZ_&" + 
                    "access_token=_EM_1085_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_52_getOnLanguagesReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "501")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "-3506")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "56")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "17113")
                .d("TAGS_COUNT", "31")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "1227")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"_EM_1243_XYZ_\"")
                .d("FORKS_COUNT", "231")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"lDmS66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"n?\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "846")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-15743")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "44")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "-fyukW")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=-fyukW&" + 
                    "offset=846&" + 
                    "access_token=SxXRlBX7OpBq2&" + 
                    "end_date=-fyukW")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_53_getOnStatisticsLanguagesReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "501")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "-3506")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "56")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "17113")
                .d("TAGS_COUNT", "31")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "1227")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"_EM_1243_XYZ_\"")
                .d("FORKS_COUNT", "231")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"lDmS66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"n?\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "846")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-15743")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "44")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/languages -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "-fyukW")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "end_date=-fyukW&" + 
                    "access_token=-fyukW&" + 
                    "offset=-fyukW&" + 
                    "limit=-fyukW")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_54_getOnContributorsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "501")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "-3506")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "56")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "17113")
                .d("TAGS_COUNT", "31")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "1227")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"_EM_1243_XYZ_\"")
                .d("FORKS_COUNT", "231")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"lDmS66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"n?\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "846")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-15743")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "44")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "-fyukW")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=-fyukW&" + 
                    "limit=846&" + 
                    "sortBy=-fyukW&" + 
                    "q=-fyukW&" + 
                    "access_token=-fyukW")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_55_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "24")
                .d("PROGRAM_LANGUAGES_COUNT", "468")
                .d("PUBLIC_PROJECT_COUNT", "729")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "203")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"o6H7w4QKw\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "\"72Rha5_YzV\"")
                .d("NAME", "\"lDmQ66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"nC\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "\"6B_Y7YN8HMstVx\"")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "3")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"Q\"")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "641")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "43")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "end_date=1959-07-26T21%3A49%3A-1.893Z&" + 
                    "sortBy=p3rZ2aFAY7&" + 
                    "q=9XbIu6eJvlUw&" + 
                    "language=a4sJTeray_sVooZ&" + 
                    "access_token=SnkF2vbr")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_56_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=932&" + 
                    "offset=-572934858&" + 
                    "end_date=2036-05-17T23%3A57%3A30Z&" + 
                    "sortBy=fs&" + 
                    "access_token=aG4c6lvIAjnUinIR")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_57_getOnDeleteReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "501")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "-3506")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "56")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "17113")
                .d("TAGS_COUNT", "31")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "1227")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"_EM_1243_XYZ_\"")
                .d("FORKS_COUNT", "231")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"lDmS66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"n?\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "846")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-15743")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "44")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/delete -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "-fyukW")
                .get(baseUrlOfSut + "/delete?" + 
                    "access_token=-fyukW&" + 
                    "end_date=-fyukW&" + 
                    "q=organizationname&" + 
                    "organizations=-fyukW&" + 
                    "sortBy=-fyukW&" + 
                    "start_date=-fyukW")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_58_postOnScoring_projectReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "501")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "-3506")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "56")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "17113")
                .d("TAGS_COUNT", "31")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "1227")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"_EM_1243_XYZ_\"")
                .d("FORKS_COUNT", "231")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"lDmS66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"n?\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "846")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-15743")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "44")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/config/scoring.project -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "-fyukW")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=-fyukW&" + 
                    "end_date=-fyukW&" + 
                    "limit=-fyukW&" + 
                    "sortBy=-fyukW&" + 
                    "language=-fyukW")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_59_getOnContributorsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 99L)
                .d("ID", "943")
                .d("SNAPSHOT_DATE", "\"1941-09-16 07:35:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "501")
                .d("ALL_FORKS_COUNT", "527")
                .d("ALL_SIZE_COUNT", "404")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "-3506")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "56")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "17113")
                .d("TAGS_COUNT", "31")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 100L)
                .d("COMMITS_COUNT", "1227")
                .d("CONTRIBUTORS_COUNT", "264")
                .d("DESCRIPTION", "\"_EM_1243_XYZ_\"")
                .d("FORKS_COUNT", "231")
                .d("GIT_HUB_PROJECT_ID", "486")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"lDmS66e9_HNRum\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"n?\"")
                .d("SCORE", "912")
                .d("SNAPSHOT_DATE", "\"2097-12-16 03:06:30\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"72yn\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"NXKnchYFogxvnA8\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "57")
            .and().insertInto("CONTRIBUTOR", 101L)
                .d("ID", "37")
                .d("ORGANIZATION_ID", "846")
                .d("SNAPSHOT_DATE", "\"1951-08-13 15:04:03\"")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "-15743")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "44")
                .d("URL", "\"_EM_1244_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/statistics/contributors -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "-fyukW")
                .header("X-Organizations", "-fyukW")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "start_date=-fyukW&" + 
                    "end_date=-fyukW&" + 
                    "access_token=-fyukW&" + 
                    "q=SxXRlBX7OpBq2&" + 
                    "offset=-fyukW&" + 
                    "limit=-fyukW")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_60_getOnProjectsReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=_EM_803_XYZ_&" + 
                    "limit=228&" + 
                    "start_date=2095-13-21T05%3A08%3A34%2B13%3A13&" + 
                    "end_date=1974-00-05T15%3A35%3A54%2B20%3A11&" + 
                    "sortBy=lg0GDhu4caIj2VVG&" + 
                    "access_token=DVEo3_UL7zv")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_61_getOnProjectsReturnsSchemaInvalidResponseUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 49L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "128")
                .d("GIT_HUB_PROJECT_ID", "258")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"UfroNEjiEBlD9\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"2054-03-06 22:21:59\"")
                .d("STARS_COUNT", "1642395124")
                .d("URL", "\"3inxMnd\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"_EM_827_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/projects -> No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "UfroNEjiEBlD9")
                .header("X-Organizations", "IQ9VJZ2IjolO4r")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=zgI77_6SDa58PZa&" + 
                    "offset=782&" + 
                    "start_date=1967-12-31T10%3A14%3A27.001-00%3A19&" + 
                    "end_date=1986-04-07T18%3A26%3A49-12%3A25&" + 
                    "q=noGsqOQ73eRbtx&" + 
                    "access_token=_EM_828_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
    }
    
    
    @Test(timeout = 60000)
    public void test_62_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"id\": 864, " + 
                    " \"key\": { " + 
                    " \"id\": 879, " + 
                    " \"organizationId\": 760 " + 
                    " }, " + 
                    " \"loginId\": \"rP_Be4RKJ80\", " + 
                    " \"name\": \"wbSNY\", " + 
                    " \"organizationId\": 813, " + 
                    " \"snapshotDate\": \"2064-10-17T20:46:59.639Z\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 89, " + 
                    " \"key\": { " + 
                    " \"id\": 98 " + 
                    " }, " + 
                    " \"organizationId\": 500, " + 
                    " \"organizationName\": \"_EM_469_XYZ_\", " + 
                    " \"organizationalCommitsCount\": 845, " + 
                    " \"snapshotDate\": \"1957-13-09T11:-1:18+22:18\", " + 
                    " \"url\": \"_EM_470_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"snapshotDate\": \"1956-03-17T24:08:40Z\" " + 
                    " }, " + 
                    " \"loginId\": \"\", " + 
                    " \"organizationalCommitsCount\": 637, " + 
                    " \"personalCommitsCount\": 257, " + 
                    " \"personalProjectsCount\": 748 " + 
                    " }, " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"id\": 893 " + 
                    " }, " + 
                    " \"organizationId\": 647, " + 
                    " \"organizationName\": \"uIuJ\", " + 
                    " \"organizationalCommitsCount\": 107, " + 
                    " \"snapshotDate\": \"2067-10-21T23:36:38.613-23:38\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/import")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    @Test(timeout = 60000)
    public void test_63_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"organizationId\": 616, " + 
                    " \"snapshotDate\": \"2092-08-26T08:31:58.752Z\" " + 
                    " }, " + 
                    " \"loginId\": \"27464KCW\", " + 
                    " \"organizationName\": \"_EM_100_XYZ_\", " + 
                    " \"personalCommitsCount\": 443 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 278, " + 
                    " \"key\": { " + 
                    " \"id\": 8, " + 
                    " \"organizationId\": 704, " + 
                    " \"snapshotDate\": \"2017-09-17T00:30:40-21:28\" " + 
                    " }, " + 
                    " \"organizationalCommitsCount\": 61, " + 
                    " \"organizationalProjectsCount\": 115, " + 
                    " \"url\": \"s690tW0EfBcJ\" " + 
                    " } " + 
                    " ], " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"commitsCount\": 951, " + 
                    " \"description\": \"B\", " + 
                    " \"externalContributorsCount\": 292, " + 
                    " \"forksCount\": 838, " + 
                    " \"image\": \"xOzcmc9FCC\", " + 
                    " \"languageList\": [ " + 
                    " \"_EM_104_XYZ_\" " + 
                    " ], " + 
                    " \"lastPushed\": \"_EM_105_XYZ_\", " + 
                    " \"primaryLanguage\": \"1evySyX\", " + 
                    " \"starsCount\": -390187952, " + 
                    " \"title\": \"_EM_106_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"commitsCount\": 761, " + 
                    " \"contributorsCount\": 961, " + 
                    " \"image\": \"_EM_108_XYZ_\", " + 
                    " \"lastPushed\": \"DS2s\", " + 
                    " \"maintainers\": [ " + 
                    " \"ZYN7oyJsaRn1b\", " + 
                    " \"_EM_110_XYZ_\" " + 
                    " ], " + 
                    " \"organizationName\": \"_EM_112_XYZ_\", " + 
                    " \"primaryLanguage\": \"_EM_113_XYZ_\", " + 
                    " \"snapshotDate\": \"1926-12-20T00:36:31Z\", " + 
                    " \"starsCount\": 971 " + 
                    " }, " + 
                    " { " + 
                    " \"externalContributorsCount\": 71, " + 
                    " \"forksCount\": 186, " + 
                    " \"gitHubProjectId\": 8257842070400788125, " + 
                    " \"languageList\": [ " + 
                    " \"\", " + 
                    " \"_EM_116_XYZ_\" " + 
                    " ], " + 
                    " \"organizationName\": \"_EM_117_XYZ_\", " + 
                    " \"primaryLanguage\": \"\", " + 
                    " \"title\": \"_EM_118_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    @Test(timeout = 60000)
    public void test_64_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"organizationId\": 616, " + 
                    " \"snapshotDate\": \"2092-08-26T08:31:58.752Z\" " + 
                    " }, " + 
                    " \"loginId\": \"_EM_74_XYZ_\", " + 
                    " \"organizationName\": \"_EM_75_XYZ_\", " + 
                    " \"personalCommitsCount\": 443 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 278, " + 
                    " \"key\": { " + 
                    " \"id\": 8, " + 
                    " \"organizationId\": 704, " + 
                    " \"snapshotDate\": \"2017-09-17T00:30:40-21:28\" " + 
                    " }, " + 
                    " \"organizationalCommitsCount\": 61, " + 
                    " \"organizationalProjectsCount\": 115, " + 
                    " \"url\": \"s690tW0EfBcJ\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allContributorsCount\": 62, " + 
                    " \"allForksCount\": 106, " + 
                    " \"id\": 684, " + 
                    " \"membersCount\": 526, " + 
                    " \"organizationName\": \"1drb_Krr2E_\", " + 
                    " \"snapshotDate\": \"2046-06-30T22:50:41+15:47\", " + 
                    " \"teamsCount\": 657 " + 
                    " }, " + 
                    " { " + 
                    " \"allForksCount\": 62, " + 
                    " \"externalContributorsCount\": 716, " + 
                    " \"key\": {}, " + 
                    " \"membersCount\": 245 " + 
                    " }, " + 
                    " { " + 
                    " \"allForksCount\": 650, " + 
                    " \"allSizeCount\": 13, " + 
                    " \"externalContributorsCount\": 74, " + 
                    " \"key\": { " + 
                    " \"id\": -7709125098897621291, " + 
                    " \"snapshotDate\": \"1982-09-12T13:24:40.200-07:57\" " + 
                    " }, " + 
                    " \"organizationName\": \"_EM_97_XYZ_\", " + 
                    " \"privateProjectCount\": 424 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 801, " + 
                    " \"allForksCount\": 649, " + 
                    " \"externalContributorsCount\": 567, " + 
                    " \"membersCount\": 1573122166, " + 
                    " \"privateProjectCount\": 394, " + 
                    " \"tagsCount\": 423, " + 
                    " \"teamsCount\": 831 " + 
                    " }, " + 
                    " { " + 
                    " \"allForksCount\": 823, " + 
                    " \"allSizeCount\": 658, " + 
                    " \"externalContributorsCount\": 583, " + 
                    " \"key\": {}, " + 
                    " \"organizationName\": \"_EM_99_XYZ_\", " + 
                    " \"privateProjectCount\": 81, " + 
                    " \"programLanguagesCount\": 387 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    @Test(timeout = 60000)
    public void test_65_postOnImportReturnsSchemaInvalidResponse() throws Exception {
        
        // Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/import -> No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [], " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"commitsCount\": 370, " + 
                    " \"contributorsCount\": 123, " + 
                    " \"description\": \"pPc298D9VG\", " + 
                    " \"externalContributorsCount\": 323, " + 
                    " \"gitHubProjectId\": 355, " + 
                    " \"lastPushed\": \"_EM_148_XYZ_\", " + 
                    " \"maintainers\": [ " + 
                    " \"_EM_149_XYZ_\", " + 
                    " \"Do35OUmrz50\", " + 
                    " \"AXh\", " + 
                    " \"xSkPgGjgCR13h2M\", " + 
                    " \"oC5s08h\" " + 
                    " ], " + 
                    " \"name\": \"jvS6zlAg1FiP\", " + 
                    " \"score\": 131, " + 
                    " \"snapshotDate\": \"1932-12-26T08:-1:40+21:51\", " + 
                    " \"url\": \"_EM_153_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"description\": \"_EM_154_XYZ_\", " + 
                    " \"gitHubProjectId\": 24, " + 
                    " \"languageList\": [ " + 
                    " \"U4mKjvEHa72dBt\", " + 
                    " \"HJCakZjUP9yxnl\", " + 
                    " \"CSEQ7v64\" " + 
                    " ], " + 
                    " \"lastPushed\": \"_EM_155_XYZ_\", " + 
                    " \"maintainers\": [ " + 
                    " \"_EM_156_XYZ_\", " + 
                    " \"_EM_157_XYZ_\", " + 
                    " \"_EM_158_XYZ_\", " + 
                    " \"_EM_159_XYZ_\" " + 
                    " ], " + 
                    " \"organizationName\": \"ZjOnFpIhVv2oA\", " + 
                    " \"primaryLanguage\": \"UieEL2tJEe\", " + 
                    " \"starsCount\": 331, " + 
                    " \"title\": \"_EM_160_XYZ_\", " + 
                    " \"url\": \"_EM_161_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"commitsCount\": 426, " + 
                    " \"forksCount\": 366, " + 
                    " \"gitHubProjectId\": 297, " + 
                    " \"primaryLanguage\": \"B0TVnaz4GmjiphC\", " + 
                    " \"starsCount\": 625, " + 
                    " \"url\": \"_EM_167_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allForksCount\": 698, " + 
                    " \"allSizeCount\": 70, " + 
                    " \"organizationName\": \"_EM_168_XYZ_\", " + 
                    " \"publicProjectCount\": 141, " + 
                    " \"snapshotDate\": \"1910-00-24T03:21:28.804-18:12\" " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 444, " + 
                    " \"allForksCount\": 681, " + 
                    " \"id\": 994, " + 
                    " \"key\": { " + 
                    " \"snapshotDate\": \"1985-00-25T00:-1:47.439+07:44\" " + 
                    " }, " + 
                    " \"organizationName\": \"_EM_169_XYZ_\", " + 
                    " \"privateProjectCount\": 10, " + 
                    " \"tagsCount\": 832, " + 
                    " \"teamsCount\": 380 " + 
                    " }, " + 
                    " { " + 
                    " \"allForksCount\": 440, " + 
                    " \"allStarsCount\": 478, " + 
                    " \"externalContributorsCount\": 551, " + 
                    " \"id\": 462, " + 
                    " \"key\": { " + 
                    " \"id\": 118, " + 
                    " \"snapshotDate\": \"2013-12-24T20:-1:23+18:50\" " + 
                    " }, " + 
                    " \"organizationName\": \"_EM_170_XYZ_\", " + 
                    " \"programLanguagesCount\": 558, " + 
                    " \"publicProjectCount\": 604, " + 
                    " \"snapshotDate\": \"1900-02-00T-1:24:22.414Z\", " + 
                    " \"tagsCount\": 411, " + 
                    " \"teamsCount\": 892 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?EMextraParam123=_EM_72_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }


}
