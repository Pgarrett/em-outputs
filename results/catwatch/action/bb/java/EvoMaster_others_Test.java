import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-06T13:51:49.477-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 10 tests
 * <br>
*  Covered targets: 10
 * <br>
*  Used time: 0h 13m 7s
 * <br>
*  Needed budget for current results: 100%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_others_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/fetch
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/fetch
    @Test(timeout = 60000)
    public void test_0_getOnFetchReturnsNull() throws Exception {
        
        try{
            given().accept("*/*")
                    .get(baseUrlOfSut + "/fetch");
        } catch(Exception e){
        }
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics/languages
    // 			Action parameters:
    // 				organizations: 'ofqHJyeyVLGmzmw'
    // 				start_date: ''
    // 				end_date: 'vKMkVYwDWJW'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = organizations:ofqHJyeyVLGmzmw
    // 				org.evomaster.core.search.gene.optional.OptionalGene = start_date:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = end_date:vKMkVYwDWJW
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics/languages
    @Test(timeout = 60000)
    public void test_1_getOnLanguagesReturns400() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=ofqHJyeyVLGmzmw&" + 
                    "end_date=vKMkVYwDWJW")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string vKMkVYwDWJW."));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics/projects
    // 			Action parameters:
    // 				organizations: 'fJO_'
    // 				start_date: ''
    // 				end_date: 'o39'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = organizations:fJO_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = start_date:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = end_date:o39
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics/projects
    @Test(timeout = 60000)
    public void test_2_getOnProjectsReturns400() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=fJO_&" + 
                    "end_date=o39")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string o39."));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics/contributors
    // 			Action parameters:
    // 				organizations: 'G'
    // 				start_date: 'M1uvpIxKd1'
    // 				end_date: 'Ih'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = organizations:G
    // 				org.evomaster.core.search.gene.optional.OptionalGene = start_date:M1uvpIxKd1
    // 				org.evomaster.core.search.gene.optional.OptionalGene = end_date:Ih
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics/contributors
    @Test(timeout = 60000)
    public void test_3_getOnContributorsReturns400() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=G&" + 
                    "start_date=M1uvpIxKd1&" + 
                    "end_date=Ih")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string M1uvpIxKd1."));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics
    // 			Action parameters:
    // 				organizations: ''
    // 				start_date: 'C'
    // 				end_date: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = organizations:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = start_date:C
    // 				org.evomaster.core.search.gene.optional.OptionalGene = end_date:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics
    @Test(timeout = 60000)
    public void test_4_getOnStatisticsReturns400() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics?start_date=C")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for stardDate"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/projects
    // 			Action parameters:
    // 				organizations: ''
    // 				limit: ''
    // 				offset: ''
    // 				start_date: ''
    // 				end_date: '1986-00-26T15:49:01'
    // 				sortBy: ''
    // 				q: 'N2YmG7L8TA3s75'
    // 				language: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = organizations:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = limit:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = offset:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = start_date:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = end_date:1986-00-26T15:49:01
    // 				org.evomaster.core.search.gene.optional.OptionalGene = sortBy:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = q:N2YmG7L8TA3s75
    // 				org.evomaster.core.search.gene.optional.OptionalGene = language:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/projects
    @Test(timeout = 60000)
    public void test_5_getOnProjectsReturns400() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "end_date=1986-00-26T15%3A49%3A01&" + 
                    "q=N2YmG7L8TA3s75")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'exception'", containsString("org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"))
                .body("'message'", containsString("Failed to convert value of type 'java.lang.String' to required type 'java.util.Date'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@io.swagger.annotations.ApiParam @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.util.Date] for value '1986-00-26T15:49:01'; nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [1986-00-26T15:49:01]"))
                .body("'path'", containsString("/projects"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/delete
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/delete
    @Test(timeout = 60000)
    public void test_6_getOnDeleteReturns401() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .get(baseUrlOfSut + "/delete")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/init
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/init
    @Test(timeout = 60000)
    public void test_7_getOnInitReturns401() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .get(baseUrlOfSut + "/init")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/config/scoring.project
    // 			Action parameters:
    // 				X-Organizations: 'MKm8piWgBe'
    // 				body: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = X-Organizations:MKm8piWgBe
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/config/scoring.project
    @Test(timeout = 60000)
    public void test_8_postOnScoring_projectReturns403() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "MKm8piWgBe")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/import
    // 			Action parameters:
    // 				body: '{"projects":[{"externalContributorsCount":851, "gitHubProjectId":71, "maintainers":["W3GGotN"], "name":"EIBnmZ", "organizationName":"EGn8b9lZv", "primaryLanguage":"JwcQ", "score":194, "starsCount":369, "title":"DFwGzO3vL5"}, {"contributorsCount":112, "description":"0KjmiBEdnNq_Ji", "forksCount":237, "gitHubProjectId":237, "languageList":["s8zuKKN", "tTLH306r0HKXblj", "ZKaVkBWqR", "OIWn0HL9ZOa2", "qim53Fd97GWbzHUX"], "maintainers":["l_", "XBbcknLj76"], "organizationName":"nQ3a_NfNorQeo", "score":539, "snapshotDate":"2045-12-06T19:54:59", "starsCount":983, "title":"hFBic720o6i"}], "statistics":[{"allContributorsCount":629, "allSizeCount":852, "externalContributorsCount":76, "membersCount":324, "organizationName":"em", "privateProjectCount":1386547842, "programLanguagesCount":535, "publicProjectCount":321, "snapshotDate":"2069-00-28T09:32:53", "teamsCount":148}, {"allContributorsCount":973, "allStarsCount":280, "externalContributorsCount":444, "id":847, "organizationName":"QzrsaAP4", "tagsCount":484, "teamsCount":81}]}'
    // 			Genes:
    // 				org.evomaster.core.search.gene.ObjectGene = body:{"projects":[{"externalContributorsCount":851, "gitHubProjectId":71, "maintainers":["W3GGotN"], "name":"EIBnmZ", "organizationName":"EGn8b9lZv", "primaryLanguage":"JwcQ", "score":194, "starsCount":369, "title":"DFwGzO3vL5"}, {"contributorsCount":112, "description":"0KjmiBEdnNq_Ji", "forksCount":237, "gitHubProjectId":237, "languageList":["s8zuKKN", "tTLH306r0HKXblj", "ZKaVkBWqR", "OIWn0HL9ZOa2", "qim53Fd97GWbzHUX"], "maintainers":["l_", "XBbcknLj76"], "organizationName":"nQ3a_NfNorQeo", "score":539, "snapshotDate":"2045-12-06T19:54:59", "starsCount":983, "title":"hFBic720o6i"}], "statistics":[{"allContributorsCount":629, "allSizeCount":852, "externalContributorsCount":76, "membersCount":324, "organizationName":"em", "privateProjectCount":1386547842, "programLanguagesCount":535, "publicProjectCount":321, "snapshotDate":"2069-00-28T09:32:53", "teamsCount":148}, {"allContributorsCount":973, "allStarsCount":280, "externalContributorsCount":444, "id":847, "organizationName":"QzrsaAP4", "tagsCount":484, "teamsCount":81}]}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/import
    @Test(timeout = 60000)
    public void test_9_postOnImportReturns403() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .contentType("application/json")
                .body(" { " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"externalContributorsCount\": 851, " + 
                    " \"gitHubProjectId\": 71, " + 
                    " \"maintainers\": [ " + 
                    " \"W3GGotN\" " + 
                    " ], " + 
                    " \"name\": \"EIBnmZ\", " + 
                    " \"organizationName\": \"EGn8b9lZv\", " + 
                    " \"primaryLanguage\": \"JwcQ\", " + 
                    " \"score\": 194, " + 
                    " \"starsCount\": 369, " + 
                    " \"title\": \"DFwGzO3vL5\" " + 
                    " }, " + 
                    " { " + 
                    " \"contributorsCount\": 112, " + 
                    " \"description\": \"0KjmiBEdnNq_Ji\", " + 
                    " \"forksCount\": 237, " + 
                    " \"gitHubProjectId\": 237, " + 
                    " \"languageList\": [ " + 
                    " \"s8zuKKN\", " + 
                    " \"tTLH306r0HKXblj\", " + 
                    " \"ZKaVkBWqR\", " + 
                    " \"OIWn0HL9ZOa2\", " + 
                    " \"qim53Fd97GWbzHUX\" " + 
                    " ], " + 
                    " \"maintainers\": [ " + 
                    " \"l_\", " + 
                    " \"XBbcknLj76\" " + 
                    " ], " + 
                    " \"organizationName\": \"nQ3a_NfNorQeo\", " + 
                    " \"score\": 539, " + 
                    " \"snapshotDate\": \"2045-12-06T19:54:59\", " + 
                    " \"starsCount\": 983, " + 
                    " \"title\": \"hFBic720o6i\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allContributorsCount\": 629, " + 
                    " \"allSizeCount\": 852, " + 
                    " \"externalContributorsCount\": 76, " + 
                    " \"membersCount\": 324, " + 
                    " \"organizationName\": \"em\", " + 
                    " \"privateProjectCount\": 1386547842, " + 
                    " \"programLanguagesCount\": 535, " + 
                    " \"publicProjectCount\": 321, " + 
                    " \"snapshotDate\": \"2069-00-28T09:32:53\", " + 
                    " \"teamsCount\": 148 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 973, " + 
                    " \"allStarsCount\": 280, " + 
                    " \"externalContributorsCount\": 444, " + 
                    " \"id\": 847, " + 
                    " \"organizationName\": \"QzrsaAP4\", " + 
                    " \"tagsCount\": 484, " + 
                    " \"teamsCount\": 81 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }


}
