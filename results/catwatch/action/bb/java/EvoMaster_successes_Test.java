import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-17T16:00:43.592-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 10 tests
 * <br>
*  Covered targets: 20
 * <br>
*  Used time: 0h 12m 49s
 * <br>
*  Needed budget for current results: 91%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/config
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/config
    @Test(timeout = 60000)
    public void test_0_getOnConfigReturnsObject() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/config")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'cache.path'", containsString("target/cache"))
                .body("'cache.size'", containsString("50"))
                .body("'endpoints.enabled'", containsString("false"))
                .body("'endpoints.health.enabled'", containsString("true"))
                .body("'github.login'", nullValue())
                .body("'organization.list'", containsString("zalando,zalando-stups,zalando-incubator"))
                .body("'schedule'", containsString("0 1 8 * * *"))
                .body("'scoring.project'", containsString("function(project) {var daysSinceLastPush = 0;if (project.lastPushed) {var tokens = project.lastPushed.split(\" \");var day = tokens[2];var month = tokens[1];var year = tokens[5];var lastPushedDate = new Date(day + ' ' + month + ' ' + year);var millisInDay = 86400000;daysSinceLastPush = Math.floor((new Date() - lastPushedDate) / millisInDay);}var maintainersPenalty = 0;if (project.maintainers.length < 2) {maintainersPenalty = 100;}return project.starsCount * 3 + project.forksCount * 2 + project.contributorsCount * 5 - daysSinceLastPush - maintainersPenalty}"))
                .body("'spring.database.driverClassName'", nullValue())
                .body("'spring.datasource.platform'", nullValue())
                .body("'spring.datasource.url'", nullValue())
                .body("'spring.datasource.username'", nullValue())
                .body("'spring.jpa.database'", nullValue())
                .body("'spring.jpa.hibernate.ddl-auto'", containsString("update"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/health.json
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/health.json
    @Test(timeout = 60000)
    public void test_1_getOnHealth_jsonReturnsObject() throws Exception {
        
        given().accept("application/vnd.spring-boot.actuator.v1+json")
                .get(baseUrlOfSut + "/health.json")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.spring-boot.actuator.v1+json")
                .body("'status'", containsString("UP"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics/languages
    // 			Action parameters:
    // 				organizations: ''
    // 				start_date: ''
    // 				end_date: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = organizations:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = start_date:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = end_date:''
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics/languages
    @Test(timeout = 60000)
    public void test_2_getOnStatisticsLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics/languages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/projects
    // 			Action parameters:
    // 				organizations: ''
    // 				limit: '597'
    // 				offset: '477'
    // 				start_date: '2094-10-26T02:23:22'
    // 				end_date: ''
    // 				sortBy: 'Q7Ex8wI5DLE5'
    // 				q: ''
    // 				language: '_6uVm1Awc4EL'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = organizations:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = limit:'597'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = offset:'477'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = start_date:'2094-10-26T02:23:22'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = end_date:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = sortBy:'Q7Ex8wI5DLE5'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = q:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = language:'_6uVm1Awc4EL'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/projects
    @Test(timeout = 60000)
    public void test_3_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=597&" + 
                    "offset=477&" + 
                    "start_date=2094-10-26T02%3A23%3A22&" + 
                    "sortBy=Q7Ex8wI5DLE5&" + 
                    "language=_6uVm1Awc4EL")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/languages
    // 			Action parameters:
    // 				organizations: 'nujsiHWY'
    // 				limit: '373'
    // 				offset: ''
    // 				q: 'uN7Ubt3S62rWJF'
    // 			Genes:
    // 				org.evomaster.core.search.gene.string.StringGene = organizations:'nujsiHWY'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = limit:'373'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = offset:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = q:'uN7Ubt3S62rWJF'
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/languages
    @Test(timeout = 60000)
    public void test_4_getOn/LanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=nujsiHWY&" + 
                    "limit=373&" + 
                    "q=uN7Ubt3S62rWJF")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/health
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/health
    @Test(timeout = 60000)
    public void test_5_getOnHealthReturnsObject() throws Exception {
        
        given().accept("application/vnd.spring-boot.actuator.v1+json")
                .get(baseUrlOfSut + "/health")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.spring-boot.actuator.v1+json")
                .body("'status'", containsString("UP"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: OPTIONS:/error
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: OPTIONS:/error
    @Test(timeout = 60000)
    public void test_6_optionsOnErrorReturns200() throws Exception {
        
        given().accept("*/*")
                .options(baseUrlOfSut + "/error")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/export
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/export
    @Test(timeout = 60000)
    public void test_7_getOnExportReturnsObject() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics
    // 			Action parameters:
    // 				organizations: 'LDWbQfj9dGip'
    // 				start_date: ''
    // 				end_date: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = organizations:'LDWbQfj9dGip'
    // 				org.evomaster.core.search.gene.optional.OptionalGene = start_date:''
    // 				org.evomaster.core.search.gene.optional.OptionalGene = end_date:''
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics
    @Test(timeout = 60000)
    public void test_8_getOnStatisticsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics?organizations=LDWbQfj9dGip")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/v2/api-docs
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/v2/api-docs
    @Test(timeout = 60000)
    public void test_9_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }


}
