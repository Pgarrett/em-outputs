import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-03T00:17:09.425-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 17 tests
 * <br>
*  Covered targets: 130
 * <br>
*  Used time: 0h 19m 11s
 * <br>
*  Needed budget for current results: 97%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_getOnHealth_jsonReturnsObject() throws Exception {
        
        given().accept("application/vnd.spring-boot.actuator.v1+json")
                .get(baseUrlOfSut + "/health.json")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.spring-boot.actuator.v1+json")
                .body("'status'", containsString("UP"));
    }
    
    
    @Test(timeout = 60000)
    public void test_1_getOnHealthReturnsObject() throws Exception {
        
        given().accept("application/vnd.spring-boot.actuator.v1+json")
                .get(baseUrlOfSut + "/health")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.spring-boot.actuator.v1+json")
                .body("'status'", containsString("UP"));
    }
    
    
    @Test(timeout = 60000)
    public void test_2_getOnExportReturnsObject() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_3_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    @Test(timeout = 60000)
    public void test_4_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics/languages?organizations=e")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_5_getOnStatisticsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_6_getOnStatisticsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics?organizations=3PArA8Cpp0b1Bz")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_7_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics/languages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_8_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=boA2lPDgzeIsZZe&" + 
                    "offset=383&" + 
                    "q=PjUO4Qg4euRi")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_9_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=EidNUYwy1&" + 
                    "limit=184&" + 
                    "q=0A2HRAJ_Vh5yj")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_10_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=&" + 
                    "limit=310")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_11_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=i38_AB&" + 
                    "limit=402&" + 
                    "offset=412&" + 
                    "q=1J4A0Uvdy7z5")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_12_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=5Zo&" + 
                    "limit=737&" + 
                    "end_date=1993-07-04T12%3A48%3A45Z")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_13_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=4uLoXgLto1rB2LiG&" + 
                    "offset=675&" + 
                    "end_date=2028-04-24T05%3A42%3A05.430Z&" + 
                    "sortBy=2SYv0vdw6x&" + 
                    "q=u62vrjUrF")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_14_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=610&" + 
                    "start_date=2086-09-28T22%3A07%3A22.553Z&" + 
                    "sortBy=lxDfZh5NiDs7pQ&" + 
                    "language=3ygZGkP1iuTBd")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_15_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=854&" + 
                    "offset=164&" + 
                    "start_date=2031-12-13T04%3A04%3A15.595-17%3A34&" + 
                    "sortBy=OlV4zgkTM_hRCdWU&" + 
                    "q=WaEFHy&" + 
                    "language=av_0bdBCOs")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    @Test(timeout = 60000)
    public void test_16_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=507&" + 
                    "start_date=2026-10-04T08%3A18%3A58.144%2B02%3A39&" + 
                    "end_date=1980-05-18T15%3A16%3A28.796Z")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }


}
