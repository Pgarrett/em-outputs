import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-06T13:51:49.457-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 9 tests
 * <br>
*  Covered targets: 27
 * <br>
*  Used time: 0h 13m 7s
 * <br>
*  Needed budget for current results: 100%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics/contributors
    // 			Action parameters:
    // 				organizations: ''
    // 				start_date: ''
    // 				end_date: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = organizations:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = start_date:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = end_date:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics/contributors
    @Test(timeout = 60000)
    public void test_0_getOnContributorsCauses500_internalservererror() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/statistics/contributors
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics/contributors")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/error
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/error
    @Test(timeout = 60000)
    public void test_1_putOnErrorCauses500_internalservererror() throws Exception {
        
        // Fault100. HTTP Status 500. PUT:/error
        given().accept("*/*")
                .put(baseUrlOfSut + "/error")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(999.0))
                .body("'error'", containsString("None"))
                .body("'message'", containsString("No message available"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/error
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/error
    @Test(timeout = 60000)
    public void test_2_postOnErrorCauses500_internalservererror() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/error
        given().accept("*/*")
                .post(baseUrlOfSut + "/error")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(999.0))
                .body("'error'", containsString("None"))
                .body("'message'", containsString("No message available"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics/projects
    // 			Action parameters:
    // 				organizations: '0TyDs9pRP'
    // 				start_date: ''
    // 				end_date: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = organizations:0TyDs9pRP
    // 				org.evomaster.core.search.gene.optional.OptionalGene = start_date:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = end_date:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/statistics/projects
    @Test(timeout = 60000)
    public void test_3_getOnProjectsCauses500_internalservererror() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/statistics/projects
        given().accept("application/json")
                .get(baseUrlOfSut + "/statistics/projects?organizations=0TyDs9pRP")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/error
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/error
    @Test(timeout = 60000)
    public void test_4_deleteOnErrorCauses500_internalservererror() throws Exception {
        
        // Fault100. HTTP Status 500. DELETE:/error
        given().accept("*/*")
                .delete(baseUrlOfSut + "/error")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(999.0))
                .body("'error'", containsString("None"))
                .body("'message'", containsString("No message available"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PATCH:/error
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PATCH:/error
    @Test(timeout = 60000)
    public void test_5_patchOnErrorCauses500_internalservererror() throws Exception {
        
        // Fault100. HTTP Status 500. PATCH:/error
        given().accept("*/*")
                .patch(baseUrlOfSut + "/error")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(999.0))
                .body("'error'", containsString("None"))
                .body("'message'", containsString("No message available"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/error
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/error
    @Test(timeout = 60000)
    public void test_6_getOnErrorCauses500_internalservererror() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/error
        given().accept("*/*")
                .get(baseUrlOfSut + "/error")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(999.0))
                .body("'error'", containsString("None"))
                .body("'message'", containsString("No message available"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/contributors
    // 			Action parameters:
    // 				organizations: 'MEheUj19'
    // 				limit: ''
    // 				offset: '224465568'
    // 				start_date: ''
    // 				end_date: ''
    // 				sortBy: ''
    // 				q: 'aG82V'
    // 			Genes:
    // 				org.evomaster.core.search.gene.string.StringGene = organizations:MEheUj19
    // 				org.evomaster.core.search.gene.optional.OptionalGene = limit:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = offset:224465568
    // 				org.evomaster.core.search.gene.optional.OptionalGene = start_date:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = end_date:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = sortBy:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = q:aG82V
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/contributors
    @Test(timeout = 60000)
    public void test_7_getOnContributorsCauses500_internalservererror() throws Exception {
        
        // Fault100. HTTP Status 500. GET:/contributors
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=MEheUj19&" + 
                    "offset=224465568&" + 
                    "q=aG82V")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: HEAD:/error
    // 			Action parameters:
    // 			Genes:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: HEAD:/error
    @Test(timeout = 60000)
    public void test_8_headOnErrorCauses500_internalservererror() throws Exception {
        
        // Fault100. HTTP Status 500. HEAD:/error
        given().accept("*/*")
                .head(baseUrlOfSut + "/error")
                .then()
                .statusCode(500)
                .assertThat()
                .body(isEmptyOrNullString());
    }


}
