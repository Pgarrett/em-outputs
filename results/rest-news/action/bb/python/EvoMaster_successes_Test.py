#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2024-10-06T15:07:23.599-03:00[America/Argentina/Buenos_Aires]
#  
#  The generated test suite contains 3 tests
#  
#  Covered targets: 6
#  
#  Used time: 0h 10m 56s
#  
#  Needed budget for current results: 63%
#  
#  This file contains test cases that represent successful calls.
class EvoMaster_successes_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:8080"
    
    
    
    
    
    
    
    
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/countries
    # 			Action parameters:
    # 			Genes:
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/countries
    @timeout_decorator.timeout(60)
    def test_0_GET_on_countries_returns_200(self):
        
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/countries",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert len(res_0.json()) == 247
        assert res_0.json()[0] == "Afghanistan"
        assert res_0.json()[1] == "Ã…land Islands"
        assert res_0.json()[2] == "Albania"
        # Skipping assertions on the remaining 244 elements. This limit of 3 elements can be increased in the configurations
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/news
    # 			Action parameters:
    # 				authorId: ''
    # 				country: ''
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.OptionalGene = authorId:
    # 				org.evomaster.core.search.gene.optional.OptionalGene = country:
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/news
    @timeout_decorator.timeout(60)
    def test_1_GET_on_news_returns_200(self):
        
        headers = {}
        headers['Accept'] = "application/vnd.tsdes.news+json;charset=UTF-8;version=2"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/news?country=",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/vnd.tsdes.news+json" in res_0.headers["content-type"]
        assert len(res_0.json()) == 0
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/v2/api-docs
    # 			Action parameters:
    # 			Genes:
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/v2/api-docs
    @timeout_decorator.timeout(60)
    def test_2_GET_on_api_docs_returns_200(self):
        
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v2/api-docs",
                    headers=headers)
        
        assert res_0.status_code == 200


if __name__ == '__main__':
    unittest.main()
