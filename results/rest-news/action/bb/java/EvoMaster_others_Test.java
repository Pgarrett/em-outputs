import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-06T15:28:46.496-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 8 tests
 * <br>
*  Covered targets: 8
 * <br>
*  Used time: 0h 10m 39s
 * <br>
*  Needed budget for current results: 96%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_others_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/news/{id}
    // 			Action parameters:
    // 				id: 'mrLUOX9RSAP'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:mrLUOX9RSAP
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/news/{id}
    @Test(timeout = 60000)
    public void test_0_deleteOnNewReturns400() throws Exception {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/news/mrLUOX9RSAP")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    // 			Action parameters:
    // 				id: '0Jy'
    // 				body: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:0Jy
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    @Test(timeout = 60000)
    public void test_1_putOnNewReturns400() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/news/0Jy")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'message'", containsString("Required request body is missing: public org.springframework.http.ResponseEntity<java.lang.Object> org.tsdes.spring.examples.news.api.NewsRestApi.update(java.lang.String,org.tsdes.spring.examples.news.dto.NewsDto)"))
                .body("'path'", containsString("/news/0Jy"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    // 			Action parameters:
    // 				body: '{"creationTime":"2007-11-20T24:24:03", "newsId":"Ns67QXPXAwmCu90"}'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"creationTime":"2007-11-20T24:24:03", "newsId":"Ns67QXPXAwmCu90"}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/vnd.tsdes.news+json;charset=UTF-8;version=2
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    @Test(timeout = 60000)
    public void test_2_postOnNewsReturns400() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .body(" { " + 
                    " \"creationTime\": \"2007-11-20T24:24:03\", " + 
                    " \"newsId\": \"Ns67QXPXAwmCu90\" " + 
                    " } ")
                .post(baseUrlOfSut + "/news")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"2007-11-20T24:24:03\": Failed to deserialize java.time.ZonedDateTime: (java.time.format.DateTimeParseException) Text '2007-11-20T24:24:03' could not be parsed at index 19; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"2007-11-20T24:24:03\": Failed to deserialize java.time.ZonedDateTime: (java.time.format.DateTimeParseException) Text '2007-11-20T24:24:03' could not be parsed at index 19\n at [Source: (PushbackInputStream); line: 1, column: 17] (through reference chain: org.tsdes.spring.examples.news.dto.NewsDto[\"creationTime\"])"))
                .body("'path'", containsString("/news"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}/text
    // 			Action parameters:
    // 				id: '455'
    // 				body: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:455
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:text/plain
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}/text
    @Test(timeout = 60000)
    public void test_3_putOnTextReturns400() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .contentType("text/plain")
                .body()
                .put(baseUrlOfSut + "/news/455/text")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'message'", containsString("Required request body is missing: public org.springframework.http.ResponseEntity<java.lang.Object> org.tsdes.spring.examples.news.api.NewsRestApi.updateText(java.lang.Long,java.lang.String)"))
                .body("'path'", containsString("/news/455/text"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news/{id}
    // 			Action parameters:
    // 				id: 'X3oM1jFkr8b'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:X3oM1jFkr8b
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news/{id}
    @Test(timeout = 60000)
    public void test_4_getOnNewReturns404() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/news/X3oM1jFkr8b")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}/text
    // 			Action parameters:
    // 				id: '676'
    // 				body: '676'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:676
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:676
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:text/plain
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}/text
    @Test(timeout = 60000)
    public void test_5_putOnTextReturns404() throws Exception {
        
        given().accept("*/*")
                .contentType("text/plain")
                .body("676")
                .put(baseUrlOfSut + "/news/676/text")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    // 			Action parameters:
    // 				id: 'DiIqZ5ru8gDy2tL'
    // 				body: '{"country":"CPMbT0qZeY_o01Kx", "id":"DiIqZ5ru8gDy2tL", "text":"YcQ6qOtna5fTT"}'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:DiIqZ5ru8gDy2tL
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"country":"CPMbT0qZeY_o01Kx", "id":"DiIqZ5ru8gDy2tL", "text":"YcQ6qOtna5fTT"}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    @Test(timeout = 60000)
    public void test_6_putOnNewReturns404() throws Exception {
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"country\": \"CPMbT0qZeY_o01Kx\", " + 
                    " \"id\": \"DiIqZ5ru8gDy2tL\", " + 
                    " \"text\": \"YcQ6qOtna5fTT\" " + 
                    " } ")
                .put(baseUrlOfSut + "/news/DiIqZ5ru8gDy2tL")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/news/{id}
    // 			Action parameters:
    // 				id: '1'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:1
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/news/{id}
    @Test(timeout = 60000)
    public void test_7_deleteOnNewReturns404() throws Exception {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/news/1")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }


}
