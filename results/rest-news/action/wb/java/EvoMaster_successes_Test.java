import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-10T21:58:42.376-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 10 tests
 * <br>
*  Covered targets: 266
 * <br>
*  Used time: 0h 10m 0s
 * <br>
*  Needed budget for current results: 58%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.org.tsdes.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("NEWS_ENTITY","news_entity"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/v2/api-docs
    // 			Action parameters:
    // 				X-Forwarded-Prefix: ''
    // 				group: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = X-Forwarded-Prefix:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = group:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/v2/api-docs
    @Test(timeout = 60000)
    public void test_0_getOnApi_docsReturns200() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/countries
    // 			Action parameters:
    // 				EMextraParam123: '_EM_4_XYZ_'
    // 				x-EMextraHeader123: '_EM_5_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:_EM_4_XYZ_
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:_EM_5_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/countries
    @Test(timeout = 60000)
    public void test_1_getOnCountriesReturns200() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_5_XYZ_")
                .get(baseUrlOfSut + "/countries?EMextraParam123=_EM_4_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(247))
                .body("", hasItems("Afghanistan", "Åland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "The Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bonaire", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "United States Minor Outlying Islands", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Republic of the Congo", "Democratic Republic of the Congo", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Curaçao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern and Antarctic Lands", "Gabon", "The Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Ivory Coast", "Iran", "Iraq", "Republic of Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Republic of Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Federated States of Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "North Korea", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Kosovo", "Réunion", "Romania", "Russia", "Rwanda", "Saint Barthélemy", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "São Tomé and Príncipe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "East Timor", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news
    // 			Action parameters:
    // 				authorId: ''
    // 				country: ''
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: '_EM_36_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = authorId:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = country:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:_EM_36_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news
    @Test(timeout = 60000)
    public void test_2_getOnNewsReturns200() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "_EM_36_XYZ_")
                .get(baseUrlOfSut + "/news?country=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news
    // 			Action parameters:
    // 				authorId: '_EM_48_XYZ_'
    // 				country: '_EM_49_XYZ_'
    // 				EMextraParam123: '_EM_50_XYZ_'
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = authorId:_EM_48_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = country:_EM_49_XYZ_
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:_EM_50_XYZ_
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news
    @Test(timeout = 60000)
    public void test_3_getOnNewsReturns200() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?" + 
                    "authorId=_EM_48_XYZ_&" + 
                    "country=_EM_49_XYZ_&" + 
                    "EMextraParam123=_EM_50_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news
    // 			Action parameters:
    // 				authorId: ''
    // 				country: 'jFyr4'
    // 				EMextraParam123: '_EM_7_XYZ_'
    // 				x-EMextraHeader123: '_EM_8_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = authorId:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = country:jFyr4
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:_EM_7_XYZ_
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:_EM_8_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news
    @Test(timeout = 60000)
    public void test_4_getOnNewsReturns200() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "_EM_8_XYZ_")
                .get(baseUrlOfSut + "/news?" + 
                    "country=jFyr4&" + 
                    "EMextraParam123=_EM_7_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.sql.SqlAction: SQL_Insert_NEWS_ENTITY_AUTHOR_ID_COUNTRY_CREATION_TIME_ID_TEXT
    // 			Action parameters:
    // 				SQL_Insert_NEWS_ENTITY_AUTHOR_ID:_EM_273_XYZ__COUNTRY:83jw4zok_CREATION_TIME:1920-07-05 16:18:46_ID:268_TEXT:QdJWCdQFuK
    // 			Genes:
    // 				org.evomaster.core.search.gene.sql.SqlPrimaryKeyGene = ID:268
    // 				org.evomaster.core.search.gene.string.StringGene = AUTHOR_ID:_EM_273_XYZ_
    // 				org.evomaster.core.search.gene.string.StringGene = COUNTRY:83jw4zok
    // 				org.evomaster.core.search.gene.datetime.DateTimeGene = CREATION_TIME:1920-07-05 16:18:46
    // 				org.evomaster.core.search.gene.string.StringGene = TEXT:QdJWCdQFuK
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news/{id}
    // 			Action parameters:
    // 				id: '268'
    // 				EMextraParam123: '42'
    // 				x-EMextraHeader123: '_EM_274_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:268
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:42
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:_EM_274_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news/{id}
    @Test(timeout = 60000)
    public void test_5_getOnNewReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 3L)
                .d("ID", "268")
                .d("AUTHOR_ID", "\"_EM_273_XYZ_\"")
                .d("COUNTRY", "\"83jw4zok\"")
                .d("CREATION_TIME", "\"1920-07-05 16:18:46\"")
                .d("TEXT", "\"QdJWCdQFuK\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "_EM_274_XYZ_")
                .get(baseUrlOfSut + "/news/268?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("'newsId'", containsString("268"))
                .body("'authorId'", containsString("_EM_273_XYZ_"))
                .body("'text'", containsString("QdJWCdQFuK"))
                .body("'country'", containsString("83jw4zok"))
                .body("'creationTime'", containsString("1920-07-05T16:18:46-04:00"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.sql.SqlAction: SQL_Insert_NEWS_ENTITY_AUTHOR_ID_COUNTRY_CREATION_TIME_ID_TEXT
    // 			Action parameters:
    // 				SQL_Insert_NEWS_ENTITY_AUTHOR_ID:2oFF_COUNTRY:D0C5OqFV6GkWIZ_CREATION_TIME:2096-09-02 10:33:55_ID:567_TEXT:2Hk9yxU3mERx
    // 			Genes:
    // 				org.evomaster.core.search.gene.sql.SqlPrimaryKeyGene = ID:567
    // 				org.evomaster.core.search.gene.string.StringGene = AUTHOR_ID:2oFF
    // 				org.evomaster.core.search.gene.string.StringGene = COUNTRY:D0C5OqFV6GkWIZ
    // 				org.evomaster.core.search.gene.datetime.DateTimeGene = CREATION_TIME:2096-09-02 10:33:55
    // 				org.evomaster.core.search.gene.string.StringGene = TEXT:2Hk9yxU3mERx
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news
    // 			Action parameters:
    // 				authorId: '2oFF'
    // 				country: ''
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = authorId:2oFF
    // 				org.evomaster.core.search.gene.optional.OptionalGene = country:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news
    @Test(timeout = 60000)
    public void test_6_getOnNewsReturns200() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 10L)
                .d("ID", "567")
                .d("AUTHOR_ID", "\"2oFF\"")
                .d("COUNTRY", "\"D0C5OqFV6GkWIZ\"")
                .d("CREATION_TIME", "\"2096-09-02 10:33:55\"")
                .d("TEXT", "\"2Hk9yxU3mERx\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?authorId=2oFF")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(1))
                .body("[0].'newsId'", containsString("567"))
                .body("[0].'authorId'", containsString("2oFF"))
                .body("[0].'text'", containsString("2Hk9yxU3mERx"))
                .body("[0].'country'", containsString("D0C5OqFV6GkWIZ"))
                .body("[0].'creationTime'", containsString("2096-09-02T10:33:55-03:00"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    // 			Action parameters:
    // 				body: '{"authorId":"_EM_343_XYZ_", "country":"ZAmbIa", "text":"_EM_1417_XYZ_"}'
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"authorId":"_EM_343_XYZ_", "country":"ZAmbIa", "text":"_EM_1417_XYZ_"}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json;charset=UTF-8
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    @Test(timeout = 60000)
    public void test_7_postOnNewsReturns201() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .contentType("application/json;charset=UTF-8")
                .body(" { " + 
                    " \"authorId\": \"_EM_343_XYZ_\", " + 
                    " \"country\": \"ZAmbIa\", " + 
                    " \"text\": \"_EM_1417_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/news")
                .then()
                .statusCode(201)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body(containsString("1"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.sql.SqlAction: SQL_Insert_NEWS_ENTITY_AUTHOR_ID_COUNTRY_CREATION_TIME_ID_TEXT
    // 			Action parameters:
    // 				SQL_Insert_NEWS_ENTITY_AUTHOR_ID:wIcTzqsT1fDnMeF_COUNTRY:8GvPYa_CREATION_TIME:2012-02-27 05:30:36_ID:499_TEXT:J_HvUualKgu82
    // 			Genes:
    // 				org.evomaster.core.search.gene.sql.SqlPrimaryKeyGene = ID:499
    // 				org.evomaster.core.search.gene.string.StringGene = AUTHOR_ID:wIcTzqsT1fDnMeF
    // 				org.evomaster.core.search.gene.string.StringGene = COUNTRY:8GvPYa
    // 				org.evomaster.core.search.gene.datetime.DateTimeGene = CREATION_TIME:2012-02-27 05:30:36
    // 				org.evomaster.core.search.gene.string.StringGene = TEXT:J_HvUualKgu82
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/news/{id}
    // 			Action parameters:
    // 				id: '499'
    // 				EMextraParam123: '_EM_2001_XYZ_'
    // 				x-EMextraHeader123: '_EM_2002_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:499
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:_EM_2001_XYZ_
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:_EM_2002_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/news/{id}
    @Test(timeout = 60000)
    public void test_8_deleteOnNewReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 69L)
                .d("ID", "499")
                .d("AUTHOR_ID", "\"wIcTzqsT1fDnMeF\"")
                .d("COUNTRY", "\"8GvPYa\"")
                .d("CREATION_TIME", "\"2012-02-27 05:30:36\"")
                .d("TEXT", "\"J_HvUualKgu82\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2002_XYZ_")
                .delete(baseUrlOfSut + "/news/499?EMextraParam123=_EM_2001_XYZ_")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.sql.SqlAction: SQL_Insert_NEWS_ENTITY_AUTHOR_ID_COUNTRY_CREATION_TIME_ID_TEXT
    // 			Action parameters:
    // 				SQL_Insert_NEWS_ENTITY_AUTHOR_ID:v_COUNTRY:ZImbAbWE_CREATION_TIME:1973-12-31 15:07:26_ID:-134217485_TEXT:
    // 			Genes:
    // 				org.evomaster.core.search.gene.sql.SqlPrimaryKeyGene = ID:-134217485
    // 				org.evomaster.core.search.gene.string.StringGene = AUTHOR_ID:v
    // 				org.evomaster.core.search.gene.string.StringGene = COUNTRY:ZImbAbWE
    // 				org.evomaster.core.search.gene.datetime.DateTimeGene = CREATION_TIME:1973-12-31 15:07:26
    // 				org.evomaster.core.search.gene.string.StringGene = TEXT:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}/text
    // 			Action parameters:
    // 				id: '-134217485'
    // 				body: '9LkrmtvUiIgbU'
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:-134217485
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:9LkrmtvUiIgbU
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:text/plain
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}/text
    @Test(timeout = 60000)
    public void test_9_putOnTextReturns204() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 1L)
                .d("ID", "-134217485")
                .d("AUTHOR_ID", "\"v\"")
                .d("COUNTRY", "\"ZImbAbWE\"")
                .d("CREATION_TIME", "\"1973-12-31 15:07:26\"")
                .d("TEXT", "\"\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("text/plain")
                .body("9LkrmtvUiIgbU")
                .put(baseUrlOfSut + "/news/-134217485/text")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }


}
