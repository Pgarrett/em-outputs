import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-10T21:58:42.385-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 16 tests
 * <br>
*  Covered targets: 163
 * <br>
*  Used time: 0h 10m 0s
 * <br>
*  Needed budget for current results: 58%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_others_Test {

    
    private static final SutHandler controller = new em.embedded.org.tsdes.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("NEWS_ENTITY"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}/text
    // 			Action parameters:
    // 				id: '557'
    // 				body: ''
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:557
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:text/plain
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}/text
    @Test(timeout = 60000)
    public void test_0_putOnTextReturns400() throws Exception {
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .contentType("text/plain")
                .body()
                .put(baseUrlOfSut + "/news/557/text")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'message'", containsString("Required request body is missing: public org.springframework.http.ResponseEntity<java.lang.Object> org.tsdes.spring.examples.news.api.NewsRestApi.updateText(java.lang.Long,java.lang.String)"))
                .body("'path'", containsString("/news/557/text"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/news/{id}
    // 			Action parameters:
    // 				id: '_EM_2_XYZ_'
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:_EM_2_XYZ_
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/news/{id}
    @Test(timeout = 60000)
    public void test_1_deleteOnNewReturns400() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/news/_EM_2_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    // 			Action parameters:
    // 				body: '{"newsId":"_EM_32_XYZ_", "text":""}'
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: '42'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"newsId":"_EM_32_XYZ_", "text":""}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/vnd.tsdes.news+json;charset=UTF-8;version=2
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:42
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    @Test(timeout = 60000)
    public void test_2_postOnNewsReturns400() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .body(" { " + 
                    " \"newsId\": \"_EM_32_XYZ_\", " + 
                    " \"text\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/news")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    // 			Action parameters:
    // 				body: '{}'
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/vnd.tsdes.news+json;charset=UTF-8;version=2
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    @Test(timeout = 60000)
    public void test_3_postOnNewsReturns400() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .body(" {} ")
                .post(baseUrlOfSut + "/news")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    // 			Action parameters:
    // 				body: '{"authorId":"T3KQviJzxCTFBeL", "newsId":""}'
    // 				EMextraParam123: '42'
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"authorId":"T3KQviJzxCTFBeL", "newsId":""}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json;charset=UTF-8
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:42
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    @Test(timeout = 60000)
    public void test_4_postOnNewsReturns400() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json;charset=UTF-8")
                .body(" { " + 
                    " \"authorId\": \"T3KQviJzxCTFBeL\", " + 
                    " \"newsId\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/news?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    // 			Action parameters:
    // 				body: '{"authorId":"_EM_428_XYZ_", "text":""}'
    // 				EMextraParam123: '42'
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"authorId":"_EM_428_XYZ_", "text":""}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json;charset=UTF-8
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:42
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    @Test(timeout = 60000)
    public void test_5_postOnNewsReturns400() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json;charset=UTF-8")
                .body(" { " + 
                    " \"authorId\": \"_EM_428_XYZ_\", " + 
                    " \"text\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/news?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.sql.SqlAction: SQL_Insert_NEWS_ENTITY_AUTHOR_ID_COUNTRY_CREATION_TIME_ID_TEXT
    // 			Action parameters:
    // 				SQL_Insert_NEWS_ENTITY_AUTHOR_ID:__COUNTRY:x2hFZIU9kmb_CREATION_TIME:2062-12-28 11:40:41_ID:0_TEXT:gT
    // 			Genes:
    // 				org.evomaster.core.search.gene.sql.SqlPrimaryKeyGene = ID:0
    // 				org.evomaster.core.search.gene.string.StringGene = AUTHOR_ID:_
    // 				org.evomaster.core.search.gene.string.StringGene = COUNTRY:x2hFZIU9kmb
    // 				org.evomaster.core.search.gene.datetime.DateTimeGene = CREATION_TIME:2062-12-28 11:40:41
    // 				org.evomaster.core.search.gene.string.StringGene = TEXT:gT
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    // 			Action parameters:
    // 				id: '0'
    // 				body: '{"authorId":"NSDOLD2el", "country":"dMzxFOQRjTOWPCFS", "id":"0", "text":"NH9Wh"}'
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:0
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"authorId":"NSDOLD2el", "country":"dMzxFOQRjTOWPCFS", "id":"0", "text":"NH9Wh"}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    @Test(timeout = 60000)
    public void test_6_putOnNewReturns400() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 128L)
                .d("ID", "0")
                .d("AUTHOR_ID", "\"_\"")
                .d("COUNTRY", "\"x2hFZIU9kmb\"")
                .d("CREATION_TIME", "\"2062-12-28 11:40:41\"")
                .d("TEXT", "\"gT\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"authorId\": \"NSDOLD2el\", " + 
                    " \"country\": \"dMzxFOQRjTOWPCFS\", " + 
                    " \"id\": \"0\", " + 
                    " \"text\": \"NH9Wh\" " + 
                    " } ")
                .put(baseUrlOfSut + "/news/0")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news/{id}
    // 			Action parameters:
    // 				id: 'nh0bP4IiPyIeRZ'
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:nh0bP4IiPyIeRZ
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news/{id}
    @Test(timeout = 60000)
    public void test_7_getOnNewReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news/nh0bP4IiPyIeRZ")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}/text
    // 			Action parameters:
    // 				id: '125'
    // 				body: '125'
    // 				EMextraParam123: '42'
    // 				x-EMextraHeader123: '_EM_40_XYZ_'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:125
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:125
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:text/plain
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:42
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:_EM_40_XYZ_
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}/text
    @Test(timeout = 60000)
    public void test_8_putOnTextReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_40_XYZ_")
                .contentType("text/plain")
                .body("125")
                .put(baseUrlOfSut + "/news/125/text?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news/{id}
    // 			Action parameters:
    // 				id: '364'
    // 				EMextraParam123: '_EM_79_XYZ_'
    // 				x-EMextraHeader123: '42'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:364
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:_EM_79_XYZ_
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:42
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: GET:/news/{id}
    @Test(timeout = 60000)
    public void test_9_getOnNewReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/news/364?EMextraParam123=_EM_79_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/news/{id}
    // 			Action parameters:
    // 				id: '514'
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:514
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: DELETE:/news/{id}
    @Test(timeout = 60000)
    public void test_10_deleteOnNewReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/news/514")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    // 			Action parameters:
    // 				id: '_EM_10_XYZ_'
    // 				body: '{"country":"_EM_11_XYZ_", "id":"GADxO1N0TOW6nK"}'
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: '42'
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:_EM_10_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"country":"_EM_11_XYZ_", "id":"GADxO1N0TOW6nK"}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:42
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    @Test(timeout = 60000)
    public void test_11_putOnNewReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"country\": \"_EM_11_XYZ_\", " + 
                    " \"id\": \"GADxO1N0TOW6nK\" " + 
                    " } ")
                .put(baseUrlOfSut + "/news/_EM_10_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.sql.SqlAction: SQL_Insert_NEWS_ENTITY_AUTHOR_ID_COUNTRY_CREATION_TIME_ID_TEXT
    // 			Action parameters:
    // 				SQL_Insert_NEWS_ENTITY_AUTHOR_ID:pI6g982_COUNTRY:Ew2NPMZ9b4TB5o_CREATION_TIME:1991-09-07 19:14:43_ID:523_TEXT:KDActaWVRbUe1
    // 			Genes:
    // 				org.evomaster.core.search.gene.sql.SqlPrimaryKeyGene = ID:523
    // 				org.evomaster.core.search.gene.string.StringGene = AUTHOR_ID:pI6g982
    // 				org.evomaster.core.search.gene.string.StringGene = COUNTRY:Ew2NPMZ9b4TB5o
    // 				org.evomaster.core.search.gene.datetime.DateTimeGene = CREATION_TIME:1991-09-07 19:14:43
    // 				org.evomaster.core.search.gene.string.StringGene = TEXT:KDActaWVRbUe1
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    // 			Action parameters:
    // 				id: '810'
    // 				body: '{"country":"uCvovW", "id":"810", "newsId":"4kTYW4fgzeqs", "text":"PpD9KCySL"}'
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:810
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"country":"uCvovW", "id":"810", "newsId":"4kTYW4fgzeqs", "text":"PpD9KCySL"}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    @Test(timeout = 60000)
    public void test_12_putOnNewReturns404() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 2L)
                .d("ID", "523")
                .d("AUTHOR_ID", "\"pI6g982\"")
                .d("COUNTRY", "\"Ew2NPMZ9b4TB5o\"")
                .d("CREATION_TIME", "\"1991-09-07 19:14:43\"")
                .d("TEXT", "\"KDActaWVRbUe1\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"country\": \"uCvovW\", " + 
                    " \"id\": \"810\", " + 
                    " \"newsId\": \"4kTYW4fgzeqs\", " + 
                    " \"text\": \"PpD9KCySL\" " + 
                    " } ")
                .put(baseUrlOfSut + "/news/810")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    // 			Action parameters:
    // 				id: '24'
    // 				body: '{"country":"_EM_290_XYZ_", "id":"24"}'
    // 				EMextraParam123: '42'
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:24
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"country":"_EM_290_XYZ_", "id":"24"}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:42
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    @Test(timeout = 60000)
    public void test_13_putOnNewReturns404() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"country\": \"_EM_290_XYZ_\", " + 
                    " \"id\": \"24\" " + 
                    " } ")
                .put(baseUrlOfSut + "/news/24?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.sql.SqlAction: SQL_Insert_NEWS_ENTITY_AUTHOR_ID_COUNTRY_CREATION_TIME_ID_TEXT
    // 			Action parameters:
    // 				SQL_Insert_NEWS_ENTITY_AUTHOR_ID:_EM_11513_XYZ__COUNTRY:_CREATION_TIME:2007-01-04 10:23:54_ID:803_TEXT:4O1hPte
    // 			Genes:
    // 				org.evomaster.core.search.gene.sql.SqlPrimaryKeyGene = ID:803
    // 				org.evomaster.core.search.gene.string.StringGene = AUTHOR_ID:_EM_11513_XYZ_
    // 				org.evomaster.core.search.gene.string.StringGene = COUNTRY:
    // 				org.evomaster.core.search.gene.datetime.DateTimeGene = CREATION_TIME:2007-01-04 10:23:54
    // 				org.evomaster.core.search.gene.string.StringGene = TEXT:4O1hPte
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    // 			Action parameters:
    // 				id: ';21'
    // 				body: '{"authorId":"CJIp3DdWbfPi6z", "country":"QIt6BjMzrL", "id":"721", "text":"Kt4r"}'
    // 				EMextraParam123: ''
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:;21
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"authorId":"CJIp3DdWbfPi6z", "country":"QIt6BjMzrL", "id":"721", "text":"Kt4r"}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    @Test(timeout = 60000)
    public void test_14_putOnNewReturns405() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 148L)
                .d("ID", "803")
                .d("AUTHOR_ID", "\"_EM_11513_XYZ_\"")
                .d("COUNTRY", "\"\"")
                .d("CREATION_TIME", "\"2007-01-04 10:23:54\"")
                .d("TEXT", "\"4O1hPte\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"authorId\": \"CJIp3DdWbfPi6z\", " + 
                    " \"country\": \"QIt6BjMzrL\", " + 
                    " \"id\": \"721\", " + 
                    " \"text\": \"Kt4r\" " + 
                    " } ")
                .put(baseUrlOfSut + "/news/;21")
                .then()
                .statusCode(405)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("'status'", numberMatches(405.0))
                .body("'error'", containsString("Method Not Allowed"))
                .body("'message'", containsString("Request method 'PUT' not supported"))
                .body("'path'", containsString("/news/;21"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.sql.SqlAction: SQL_Insert_NEWS_ENTITY_AUTHOR_ID_COUNTRY_CREATION_TIME_ID_TEXT
    // 			Action parameters:
    // 				SQL_Insert_NEWS_ENTITY_AUTHOR_ID:_EM_4990_XYZ__COUNTRY:_CREATION_TIME:2007-01-04 10:23:54_ID:811_TEXT:4_1hPt
    // 			Genes:
    // 				org.evomaster.core.search.gene.sql.SqlPrimaryKeyGene = ID:811
    // 				org.evomaster.core.search.gene.string.StringGene = AUTHOR_ID:_EM_4990_XYZ_
    // 				org.evomaster.core.search.gene.string.StringGene = COUNTRY:
    // 				org.evomaster.core.search.gene.datetime.DateTimeGene = CREATION_TIME:2007-01-04 10:23:54
    // 				org.evomaster.core.search.gene.string.StringGene = TEXT:4_1hPt
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    // 			Action parameters:
    // 				id: '_EM_4989_XYZ_'
    // 				body: '{"authorId":"CJIp3DdWbfPi6z", "country":"QIt6BjMzrL", "id":"721", "text":"Kt4r"}'
    // 				EMextraParam123: '42'
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:_EM_4989_XYZ_
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"authorId":"CJIp3DdWbfPi6z", "country":"QIt6BjMzrL", "id":"721", "text":"Kt4r"}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:true
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:42
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}
    @Test(timeout = 60000)
    public void test_15_putOnNewReturns409() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 148L)
                .d("ID", "811")
                .d("AUTHOR_ID", "\"_EM_4990_XYZ_\"")
                .d("COUNTRY", "\"\"")
                .d("CREATION_TIME", "\"2007-01-04 10:23:54\"")
                .d("TEXT", "\"4_1hPt\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"authorId\": \"CJIp3DdWbfPi6z\", " + 
                    " \"country\": \"QIt6BjMzrL\", " + 
                    " \"id\": \"721\", " + 
                    " \"text\": \"Kt4r\" " + 
                    " } ")
                .put(baseUrlOfSut + "/news/_EM_4989_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(409)
                .assertThat()
                .body(isEmptyOrNullString());
    }


}
