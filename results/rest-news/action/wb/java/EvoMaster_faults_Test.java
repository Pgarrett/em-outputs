import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-10-10T21:58:42.319-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 2 tests
 * <br>
*  Covered targets: 131
 * <br>
*  Used time: 0h 10m 0s
 * <br>
*  Needed budget for current results: 58%
 * <br>
*  This file contains test cases that are likely to indicate faults.
*/
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.org.tsdes.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("NEWS_ENTITY"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.sql.SqlAction: SQL_Insert_NEWS_ENTITY_AUTHOR_ID_COUNTRY_CREATION_TIME_ID_TEXT
    // 			Action parameters:
    // 				SQL_Insert_NEWS_ENTITY_AUTHOR_ID:v_COUNTRY:_EM_136_XYZ__CREATION_TIME:1973-12-31 15:07:26_ID:243_TEXT:
    // 			Genes:
    // 				org.evomaster.core.search.gene.sql.SqlPrimaryKeyGene = ID:243
    // 				org.evomaster.core.search.gene.string.StringGene = AUTHOR_ID:v
    // 				org.evomaster.core.search.gene.string.StringGene = COUNTRY:_EM_136_XYZ_
    // 				org.evomaster.core.search.gene.datetime.DateTimeGene = CREATION_TIME:1973-12-31 15:07:26
    // 				org.evomaster.core.search.gene.string.StringGene = TEXT:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}/text
    // 			Action parameters:
    // 				id: '243'
    // 				body: '_EM_137_XYZ_'
    // 				EMextraParam123: '42'
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = id:243
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:_EM_137_XYZ_
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:text/plain
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:42
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: PUT:/news/{id}/text
    @Test(timeout = 60000)
    public void test_0_putOnTextCauses500_internalservererror() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 1L)
                .d("ID", "243")
                .d("AUTHOR_ID", "\"v\"")
                .d("COUNTRY", "\"_EM_136_XYZ_\"")
                .d("CREATION_TIME", "\"1973-12-31 15:07:26\"")
                .d("TEXT", "\"\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/tsdes/spring/examples/news/api/NewsRestApi_233_updateText PUT:/news/{id}/text
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .contentType("text/plain")
                .body("_EM_137_XYZ_")
                .put(baseUrlOfSut + "/news/243/text?EMextraParam123=42")
                .then()
                .statusCode(500)// org/tsdes/spring/examples/news/api/NewsRestApi_233_updateText
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction"))
                .body("'path'", containsString("/news/243/text"));
    }
    
    
    // Individual:
    // 	Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    // 			Action parameters:
    // 				body: '{"authorId":"_EM_343_XYZ_", "country":"_EM_344_XYZ_", "text":"_EM_345_XYZ_"}'
    // 				EMextraParam123: '_EM_346_XYZ_'
    // 				x-EMextraHeader123: ''
    // 			Genes:
    // 				org.evomaster.core.search.gene.optional.OptionalGene = body:{"authorId":"_EM_343_XYZ_", "country":"_EM_344_XYZ_", "text":"_EM_345_XYZ_"}
    // 				org.evomaster.core.search.gene.collection.EnumGene = contentType:application/json;charset=UTF-8
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = sendUnquoteJsonString:false
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = EMextraParam123:_EM_346_XYZ_
    // 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x-EMextraHeader123:
    // 	Evaluated Actions:
    // 		org.evomaster.core.problem.rest.RestCallAction: POST:/news
    @Test(timeout = 60000)
    public void test_1_postOnNewsCauses500_internalservererror() throws Exception {
        
        // Fault100. HTTP Status 500. org/tsdes/spring/examples/news/api/NewsRestApi_123_createNews POST:/news
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .contentType("application/json;charset=UTF-8")
                .body(" { " + 
                    " \"authorId\": \"_EM_343_XYZ_\", " + 
                    " \"country\": \"_EM_344_XYZ_\", " + 
                    " \"text\": \"_EM_345_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/news?EMextraParam123=_EM_346_XYZ_")
                .then()
                .statusCode(500)// org/tsdes/spring/examples/news/api/NewsRestApi_123_createNews
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'message'", containsString("Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction"))
                .body("'path'", containsString("/news"));
    }


}
