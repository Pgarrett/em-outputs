import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import static org.hamcrest.Matchers.*;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-06T23:09:49.080-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 11 tests
 * <br>
*  Covered targets: 22
 * <br>
*  Used time: 0h 11m 4s
 * <br>
*  Needed budget for current results: 98%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_ScsService_Iface_others_Test {

    
    private static final SutHandler controller = new em.external.org.rpc.thriftscs.ExternalEvoMasterController("/run/datad/facultad/tesis/EMB/jdk_8_maven/cs/rpc/thrift/artificial/thrift-scs/target/rpc-thrift-scs-sut.jar");
    private static String baseUrlOfSut;
    private static org.thrift.scs.client.ScsService.Client var_client0_ScsService_Iface;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        controller.extractRPCSchema();
        assertNotNull(baseUrlOfSut);
        var_client0_ScsService_Iface = (org.thrift.scs.client.ScsService.Client) controller.getRPCClient("org.thrift.scs.client.ScsService$Iface");
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_ifaceOnTitleReturnsSuccess() throws Exception {
        
        
        String res_0 = null;
        {
         String arg0 = "Tq";
         String arg1 = "E2heF";
         res_0 = var_client0_ScsService_Iface.title(arg0,arg1);
        }
        assertEquals("-1", res_0);
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1_ifaceOnDateParseReturnsSuccess() throws Exception {
        
        
        String res_0 = null;
        {
         String arg0 = "itVifcooc";
         String arg1 = "_EM_0_XYZ_";
         res_0 = var_client0_ScsService_Iface.dateParse(arg0,arg1);
        }
        assertEquals("0", res_0);
        
    }
    
    
    @Test(timeout = 60000)
    public void test_2_ifaceOnOrdered4ReturnsSuccess() throws Exception {
        
        
        String res_0 = null;
        {
         String arg0 = "aGfljKCI";
         String arg1 = "ePDl1syBb";
         String arg2 = "A";
         String arg3 = "_EM_2_XYZ_";
         res_0 = var_client0_ScsService_Iface.ordered4(arg0,arg1,arg2,arg3);
        }
        //assertEquals("unordered", res_0);
        
    }
    
    
    @Test(timeout = 60000)
    public void test_3_ifaceOnFileSuffixReturnsSuccess() throws Exception {
        
        
        String res_0 = null;
        {
         String arg0 = "_EM_1_XYZ_";
         String arg1 = "4K4tsq64fx";
         res_0 = var_client0_ScsService_Iface.fileSuffix(arg0,arg1);
        }
        assertEquals("0", res_0);
        
    }
    
    
    @Test(timeout = 60000)
    public void test_4_ifaceOnCostfunsReturnsSuccess() throws Exception {
        
        
        String res_0 = null;
        {
         int arg0 = 12;
         String arg1 = "BtJhGJjMDPuBxV";
         res_0 = var_client0_ScsService_Iface.costfuns(arg0,arg1);
        }
        assertEquals("10", res_0);
        
    }
    
    
    @Test(timeout = 60000)
    public void test_5_ifaceOnRegexReturnsSuccess() throws Exception {
        
        
        String res_0 = null;
        {
         String arg0 = "_EM_7_XYZ_";
         res_0 = var_client0_ScsService_Iface.regex(arg0);
        }
        assertEquals("none", res_0);
        
    }
    
    
    @Test(timeout = 60000)
    public void test_6_ifaceOnCookieReturnsSuccess() throws Exception {
        
        
        String res_0 = null;
        {
         String arg0 = "LO";
         String arg1 = "_EM_244_XYZ_";
         String arg2 = "RgUPPMPXZT5X";
         res_0 = var_client0_ScsService_Iface.cookie(arg0,arg1,arg2);
        }
        assertEquals("0", res_0);
        
    }
    
    
    @Test(timeout = 60000)
    public void test_7_ifaceOnCalcReturnsSuccess() throws Exception {
        
        
        String res_0 = null;
        {
         String arg0 = "ohm7N99o_7MpN";
         double arg1 = 0.7066110457094983;
         double arg2 = 0.18847792595387391;
         res_0 = var_client0_ScsService_Iface.calc(arg0,arg1,arg2);
        }
        assertEquals("0.0", res_0);
        
    }
    
    
    @Test(timeout = 60000)
    public void test_8_ifaceOnText2txtReturnsSuccess() throws Exception {
        
        
        String res_0 = null;
        {
         String arg0 = "_EM_5_XYZ_";
         String arg1 = "BXMH7MRiwsz_Y";
         String arg2 = "_EM_6_XYZ_";
         res_0 = var_client0_ScsService_Iface.text2txt(arg0,arg1,arg2);
        }
        assertEquals("", res_0);
        
    }
    
    
    @Test(timeout = 60000)
    public void test_9_ifaceOnNotyPevarReturnsSuccess() throws Exception {
        
        
        String res_0 = null;
        {
         int arg0 = 958;
         String arg1 = "";
         res_0 = var_client0_ScsService_Iface.notyPevar(arg0,arg1);
        }
        assertEquals("3", res_0);
        
    }
    
    
    @Test(timeout = 60000)
    public void test_10_ifaceOnPatReturnsSuccess() throws Exception {
        
        
        String res_0 = null;
        {
         String arg0 = "_EM_3_XYZ_";
         String arg1 = "_EM_4_XYZ_";
         res_0 = var_client0_ScsService_Iface.pat(arg0,arg1);
        }
        assertEquals("0", res_0);
        
    }


}
