import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import static org.hamcrest.Matchers.*;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2024-11-06T22:58:20.912-03:00[America/Argentina/Buenos_Aires]
 * <br>
*  The generated test suite contains 6 tests
 * <br>
*  Covered targets: 12
 * <br>
*  Used time: 0h 11m 44s
 * <br>
*  Needed budget for current results: 88%
 * <br>
*  This file contains test cases that represent failed calls, but not indicative of faults.
*/
public class EvoMaster_NcsService_Iface_others_Test {

    
    private static final SutHandler controller = new em.external.org.rpc.thriftncs.ExternalEvoMasterController("/run/datad/facultad/tesis/EMB/jdk_8_maven/cs/rpc/thrift/artificial/thrift-ncs/target/rpc-thrift-ncs-sut.jar");
    private static String baseUrlOfSut;
    private static org.thrift.ncs.client.NcsService.Client var_client0_NcsService_Iface;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        controller.extractRPCSchema();
        assertNotNull(baseUrlOfSut);
        var_client0_NcsService_Iface = (org.thrift.ncs.client.NcsService.Client) controller.getRPCClient("org.thrift.ncs.client.NcsService$Iface");
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0_ifaceOnRemainderReturnsSuccess() throws Exception {
        
        
        org.thrift.ncs.client.Dto res_0 = null;
        {
         int arg0 = 593;
         int arg1 = 784;
         res_0 = var_client0_NcsService_Iface.remainder(arg0,arg1);
        }
        assertEquals(-1, res_0.resultAsInt);
        assertTrue(numbersMatch(0.0, res_0.resultAsDouble));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_1_ifaceOnGammqReturnsSuccess() throws Exception {
        
        
        org.thrift.ncs.client.Dto res_0 = null;
        {
         double arg0 = 0.5350362424075207;
         double arg1 = 0.6178867256072089;
         res_0 = var_client0_NcsService_Iface.gammq(arg0,arg1);
        }
        assertEquals(0, res_0.resultAsInt);
        assertTrue(numbersMatch(0.2864957756185176, res_0.resultAsDouble));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_2_ifaceOnCheckTriangleReturnsSuccess() throws Exception {
        
        
        org.thrift.ncs.client.Dto res_0 = null;
        {
         int arg0 = 215;
         int arg1 = 619;
         int arg2 = 841;
         res_0 = var_client0_NcsService_Iface.checkTriangle(arg0,arg1,arg2);
        }
        assertEquals(0, res_0.resultAsInt);
        assertTrue(numbersMatch(0.0, res_0.resultAsDouble));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_3_ifaceOnBessjReturnsSuccess() throws Exception {
        
        
        org.thrift.ncs.client.Dto res_0 = null;
        {
         int arg0 = 6;
         double arg1 = 0.34363016170648186;
         res_0 = var_client0_NcsService_Iface.bessj(arg0,arg1);
        }
        assertEquals(0, res_0.resultAsInt);
        assertTrue(numbersMatch(3.557977500370177E-8, res_0.resultAsDouble));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_4_ifaceOnFisherReturnsSuccess() throws Exception {
        
        
        org.thrift.ncs.client.Dto res_0 = null;
        {
         int arg0 = 109;
         int arg1 = 990;
         double arg2 = 0.4725732557043356;
         res_0 = var_client0_NcsService_Iface.fisher(arg0,arg1,arg2);
        }
        assertEquals(0, res_0.resultAsInt);
        assertTrue(numbersMatch(1.1921144575340037E-6, res_0.resultAsDouble));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_5_ifaceOnExpintReturnsSuccess() throws Exception {
        
        
        org.thrift.ncs.client.Dto res_0 = null;
        {
         int arg0 = 790;
         double arg1 = 0.28058523641439126;
         res_0 = var_client0_NcsService_Iface.expint(arg0,arg1);
        }
        assertEquals(0, res_0.resultAsInt);
        assertTrue(numbersMatch(9.569996161662663E-4, res_0.resultAsDouble));
        
    }


}
