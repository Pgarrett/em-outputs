#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2024-10-06T14:02:59.168-03:00[America/Argentina/Buenos_Aires]
#  
#  The generated test suite contains 4 tests
#  
#  Covered targets: 4
#  
#  Used time: 0h 10m 52s
#  
#  Needed budget for current results: 76%
#  
#  This file contains test cases that represent failed calls, but not indicative of faults.
class EvoMaster_others_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:8080"
    
    
    
    
    
    
    
    
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/expint/{n}/{x}
    # 			Action parameters:
    # 				n: '-1225115287'
    # 				x: '0.7979964733265257'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = n:-1225115287
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x:0.7979964733265257
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/expint/{n}/{x}
    @timeout_decorator.timeout(60)
    def test_0_GET_on_expint_returns_400(self):
        
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/api/expint/-1225115287/0.7979964733265257",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert res_0.text == ''
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/remainder/{a}/{b}
    # 			Action parameters:
    # 				a: '926'
    # 				b: '-1340939433'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = a:926
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = b:-1340939433
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/remainder/{a}/{b}
    @timeout_decorator.timeout(60)
    def test_1_GET_on_remaind_returns_400(self):
        
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/api/remainder/926/-1340939433",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert res_0.text == ''
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/bessj/{n}/{x}
    # 			Action parameters:
    # 				n: '1198775974'
    # 				x: '0.5282707820225719'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = n:1198775974
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x:0.5282707820225719
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/bessj/{n}/{x}
    @timeout_decorator.timeout(60)
    def test_2_GET_on_bessj_returns_400(self):
        
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/api/bessj/1198775974/0.5282707820225719",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert res_0.text == ''
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/fisher/{m}/{n}/{x}
    # 			Action parameters:
    # 				m: '1844198715'
    # 				n: '739'
    # 				x: '0.6866266468553673'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = m:1844198715
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = n:739
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x:0.6866266468553673
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/fisher/{m}/{n}/{x}
    @timeout_decorator.timeout(60)
    def test_3_GET_on_fisher_returns_400(self):
        
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/api/fisher/1844198715/739/0.6866266468553673",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert res_0.text == ''


if __name__ == '__main__':
    unittest.main()
