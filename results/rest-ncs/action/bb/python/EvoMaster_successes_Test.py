#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2024-10-06T14:02:59.139-03:00[America/Argentina/Buenos_Aires]
#  
#  The generated test suite contains 7 tests
#  
#  Covered targets: 14
#  
#  Used time: 0h 10m 52s
#  
#  Needed budget for current results: 76%
#  
#  This file contains test cases that represent successful calls.
class EvoMaster_successes_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:8080"
    
    
    
    
    
    
    
    
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/expint/{n}/{x}
    # 			Action parameters:
    # 				n: '447'
    # 				x: '0.44207287733767786'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = n:447
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x:0.44207287733767786
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/expint/{n}/{x}
    @timeout_decorator.timeout(60)
    def test_0_GET_on_expint_returns_200(self):
        
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/api/expint/447/0.44207287733767786",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["resultAsInt"] is None
        assert res_0.json()["resultAsDouble"] == 0.0014396075266015517
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/fisher/{m}/{n}/{x}
    # 			Action parameters:
    # 				m: '506'
    # 				n: '523'
    # 				x: '0.28690489954115383'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = m:506
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = n:523
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x:0.28690489954115383
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/fisher/{m}/{n}/{x}
    @timeout_decorator.timeout(60)
    def test_1_GET_on_fisher_returns_200(self):
        
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/api/fisher/506/523/0.28690489954115383",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["resultAsInt"] is None
        assert res_0.json()["resultAsDouble"] == 0.0
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/triangle/{a}/{b}/{c}
    # 			Action parameters:
    # 				a: '599'
    # 				b: '982'
    # 				c: '609'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = a:599
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = b:982
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = c:609
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/triangle/{a}/{b}/{c}
    @timeout_decorator.timeout(60)
    def test_2_GET_on_triangl_returns_200(self):
        
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/api/triangle/599/982/609",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["resultAsInt"] == 1.0
        assert res_0.json()["resultAsDouble"] is None
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/bessj/{n}/{x}
    # 			Action parameters:
    # 				n: '749'
    # 				x: '0.5413341650898195'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = n:749
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x:0.5413341650898195
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/bessj/{n}/{x}
    @timeout_decorator.timeout(60)
    def test_3_GET_on_bessj_returns_200(self):
        
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/api/bessj/749/0.5413341650898195",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["resultAsInt"] is None
        assert res_0.json()["resultAsDouble"] == 0.0
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/gammq/{a}/{x}
    # 			Action parameters:
    # 				a: '0.3517419564872657'
    # 				x: '0.5588214472859261'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = a:0.3517419564872657
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = x:0.5588214472859261
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/gammq/{a}/{x}
    @timeout_decorator.timeout(60)
    def test_4_GET_on_gammq_returns_200(self):
        
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/api/gammq/0.3517419564872657/0.5588214472859261",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["resultAsInt"] is None
        assert res_0.json()["resultAsDouble"] == 0.19953733068699886
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/remainder/{a}/{b}
    # 			Action parameters:
    # 				a: '186'
    # 				b: '608'
    # 			Genes:
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = a:186
    # 				org.evomaster.core.search.gene.optional.CustomMutationRateGene = b:608
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/api/remainder/{a}/{b}
    @timeout_decorator.timeout(60)
    def test_5_GET_on_remaind_returns_200(self):
        
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/api/remainder/186/608",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["resultAsInt"] == -1.0
        assert res_0.json()["resultAsDouble"] is None
    
    
    # Individual:
    # 	Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/v2/api-docs
    # 			Action parameters:
    # 			Genes:
    # 	Evaluated Actions:
    # 		org.evomaster.core.problem.rest.RestCallAction: GET:/v2/api-docs
    @timeout_decorator.timeout(60)
    def test_6_GET_on_api_docs_returns_200(self):
        
        headers = {}
        headers['Accept'] = "*/*"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v2/api-docs",
                    headers=headers)
        
        assert res_0.status_code == 200


if __name__ == '__main__':
    unittest.main()
